
Seng5831_Assignments.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000054a  000005de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800106  00800106  000005e4  2**0
                  ALLOC
  3 .stab         00001350  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000026c6  00000000  00000000  00001934  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00003ffa  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000048  00000000  00000000  0000402a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000003fe  00000000  00000000  00004072  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000240  00000000  00000000  00004470  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000003e6  00000000  00000000  000046b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000e4  00000000  00000000  00004a98  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c3  00000000  00000000  00004b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000024d  00000000  00000000  00004e3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000038  00000000  00000000  0000508c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__vector_11>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_16>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e4       	ldi	r30, 0x4A	; 74
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 31       	cpi	r26, 0x1E	; 30
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <main>
  c6:	0c 94 a3 02 	jmp	0x546	; 0x546 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__vector_16>:
	print_unsigned_long(StopTimeEmptyLoop);
	lcd_goto_xy(0,1);
	print_unsigned_long(FunctionLoopDuration);
}
/// Software Timer 8-bit ////////
ISR(TIMER0_COMPA_vect){ ///// Part 2 - 8-bit Software Timer user specified rate
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	0b b6       	in	r0, 0x3b	; 59
  da:	0f 92       	push	r0
  dc:	2f 93       	push	r18
  de:	3f 93       	push	r19
  e0:	4f 93       	push	r20
  e2:	5f 93       	push	r21
  e4:	6f 93       	push	r22
  e6:	7f 93       	push	r23
  e8:	8f 93       	push	r24
  ea:	9f 93       	push	r25
  ec:	af 93       	push	r26
  ee:	bf 93       	push	r27
  f0:	ef 93       	push	r30
  f2:	ff 93       	push	r31
	cli();
  f4:	f8 94       	cli
	timer_counter++;
  f6:	60 91 1a 01 	lds	r22, 0x011A
  fa:	70 91 1b 01 	lds	r23, 0x011B
  fe:	80 91 1c 01 	lds	r24, 0x011C
 102:	90 91 1d 01 	lds	r25, 0x011D
 106:	6f 5f       	subi	r22, 0xFF	; 255
 108:	7f 4f       	sbci	r23, 0xFF	; 255
 10a:	8f 4f       	sbci	r24, 0xFF	; 255
 10c:	9f 4f       	sbci	r25, 0xFF	; 255
 10e:	60 93 1a 01 	sts	0x011A, r22
 112:	70 93 1b 01 	sts	0x011B, r23
 116:	80 93 1c 01 	sts	0x011C, r24
 11a:	90 93 1d 01 	sts	0x011D, r25
	if (timer_counter % blink_rate_8bit == 0)	// slow down the blink rate
 11e:	20 91 02 01 	lds	r18, 0x0102
 122:	30 91 03 01 	lds	r19, 0x0103
 126:	40 91 04 01 	lds	r20, 0x0104
 12a:	50 91 05 01 	lds	r21, 0x0105
 12e:	0e 94 4a 02 	call	0x494	; 0x494 <__udivmodsi4>
 132:	67 2b       	or	r22, r23
 134:	68 2b       	or	r22, r24
 136:	69 2b       	or	r22, r25
 138:	69 f4       	brne	.+26     	; 0x154 <__vector_16+0x86>
// output, this lets you choose between driving low (val = 0) and driving high (val = 1).
// NOTE: if val is 0xFF (255), this method will toggle the PORT register pin(s).
static inline void set_digital_output_value(struct IOStruct* ioPin, unsigned char val)
{
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
 13a:	8b b1       	in	r24, 0x0b	; 11
 13c:	92 e0       	ldi	r25, 0x02	; 2
 13e:	89 27       	eor	r24, r25
 140:	8b b9       	out	0x0b, r24	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
 142:	51 9a       	sbi	0x0a, 1	; 10
	{
		red_led(TOGGLE);
		timer_counter=0;
 144:	10 92 1a 01 	sts	0x011A, r1
 148:	10 92 1b 01 	sts	0x011B, r1
 14c:	10 92 1c 01 	sts	0x011C, r1
 150:	10 92 1d 01 	sts	0x011D, r1
	}
	sei();
 154:	78 94       	sei
}
 156:	ff 91       	pop	r31
 158:	ef 91       	pop	r30
 15a:	bf 91       	pop	r27
 15c:	af 91       	pop	r26
 15e:	9f 91       	pop	r25
 160:	8f 91       	pop	r24
 162:	7f 91       	pop	r23
 164:	6f 91       	pop	r22
 166:	5f 91       	pop	r21
 168:	4f 91       	pop	r20
 16a:	3f 91       	pop	r19
 16c:	2f 91       	pop	r18
 16e:	0f 90       	pop	r0
 170:	0b be       	out	0x3b, r0	; 59
 172:	0f 90       	pop	r0
 174:	0f be       	out	0x3f, r0	; 63
 176:	0f 90       	pop	r0
 178:	1f 90       	pop	r1
 17a:	18 95       	reti

0000017c <init_timer_1>:
void init_timer_1()
{
	// WGM is MODE 14 refer to table 16-5 in data sheet
	// Prescaler is 1024 [set to highest and work your way down] This coordinates with the TOP
	// COM1A clear on compare match refer to table 16-3 in data sheet
	TCCR1A = 0b10100010; // COM1A1;COM1A0;COM1B1;COM1B0;-;-;WGM11;WGM10
 17c:	82 ea       	ldi	r24, 0xA2	; 162
 17e:	80 93 80 00 	sts	0x0080, r24
	TCCR1B = 0b00011101; // ICNC1;ICES1;-;WGM13;WGM12;CS12;CS11;CS10
 182:	8d e1       	ldi	r24, 0x1D	; 29
 184:	80 93 81 00 	sts	0x0081, r24

	ICR1 = 0x7D0;  // TOP is 2000 [Set this as high as possible, then work down] This coordinates with the Prescaler
 188:	e6 e8       	ldi	r30, 0x86	; 134
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 ed       	ldi	r24, 0xD0	; 208
 18e:	97 e0       	ldi	r25, 0x07	; 7
 190:	91 83       	std	Z+1, r25	; 0x01
 192:	80 83       	st	Z, r24
	OCR1A = ICR1/2; // Half of ICR1 1000
 194:	80 81       	ld	r24, Z
 196:	91 81       	ldd	r25, Z+1	; 0x01
 198:	96 95       	lsr	r25
 19a:	87 95       	ror	r24
 19c:	90 93 89 00 	sts	0x0089, r25
 1a0:	80 93 88 00 	sts	0x0088, r24
 1a4:	08 95       	ret

000001a6 <main>:
}
/* END Software Timer 16-bit */
int main()
{
	clear();                 // clear the lcd
 1a6:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <clear>
	//calculate_wcet();      // uncomment this for the calculation
	//uint32_t delay_red = 0;  // this will be used for the main loop
	//init_timer_0();          // Software Timer  8-bit
	init_timer_1();          // Software Timer 16-bit
 1aa:	0e 94 be 00 	call	0x17c	; 0x17c <init_timer_1>
	DDRD |= _BV(5);
 1ae:	55 9a       	sbi	0x0a, 5	; 10
	PORTD |= _BV(5);
 1b0:	5d 9a       	sbi	0x0b, 5	; 11

	sei();                   // SEt Interrupts
 1b2:	78 94       	sei
 1b4:	ff cf       	rjmp	.-2      	; 0x1b4 <main+0xe>

000001b6 <delayMicroseconds.clone.0>:
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	6f 93       	push	r22
 1bc:	64 e0       	ldi	r22, 0x04	; 4
 1be:	6a 95       	dec	r22
 1c0:	f1 f7       	brne	.-4      	; 0x1be <delayMicroseconds.clone.0+0x8>
 1c2:	6f 91       	pop	r22
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	c9 f7       	brne	.-14     	; 0x1ba <delayMicroseconds.clone.0+0x4>
 1c8:	08 95       	ret

000001ca <_ZN12OrangutanLCD8busyWaitEv>:
 1ca:	0f 93       	push	r16
 1cc:	1f 93       	push	r17
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	17 b1       	in	r17, 0x07	; 7
 1d4:	3d 98       	cbi	0x07, 5	; 7
 1d6:	28 98       	cbi	0x05, 0	; 5
 1d8:	29 9a       	sbi	0x05, 1	; 5
 1da:	c0 e0       	ldi	r28, 0x00	; 0
 1dc:	d0 e0       	ldi	r29, 0x00	; 0
 1de:	0e 94 db 00 	call	0x1b6	; 0x1b6 <delayMicroseconds.clone.0>
 1e2:	2a 9a       	sbi	0x05, 2	; 5
 1e4:	0e 94 db 00 	call	0x1b6	; 0x1b6 <delayMicroseconds.clone.0>
 1e8:	06 b1       	in	r16, 0x06	; 6
 1ea:	2a 98       	cbi	0x05, 2	; 5
 1ec:	0e 94 db 00 	call	0x1b6	; 0x1b6 <delayMicroseconds.clone.0>
 1f0:	2a 9a       	sbi	0x05, 2	; 5
 1f2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <delayMicroseconds.clone.0>
 1f6:	2a 98       	cbi	0x05, 2	; 5
 1f8:	24 96       	adiw	r28, 0x04	; 4
 1fa:	05 ff       	sbrs	r16, 5
 1fc:	10 c0       	rjmp	.+32     	; 0x21e <_ZN12OrangutanLCD8busyWaitEv+0x54>
 1fe:	9e 01       	movw	r18, r28
 200:	40 e0       	ldi	r20, 0x00	; 0
 202:	50 e0       	ldi	r21, 0x00	; 0
 204:	80 91 0a 01 	lds	r24, 0x010A
 208:	90 91 0b 01 	lds	r25, 0x010B
 20c:	a0 91 0c 01 	lds	r26, 0x010C
 210:	b0 91 0d 01 	lds	r27, 0x010D
 214:	28 17       	cp	r18, r24
 216:	39 07       	cpc	r19, r25
 218:	4a 07       	cpc	r20, r26
 21a:	5b 07       	cpc	r21, r27
 21c:	00 f3       	brcs	.-64     	; 0x1de <_ZN12OrangutanLCD8busyWaitEv+0x14>
 21e:	9e 01       	movw	r18, r28
 220:	40 e0       	ldi	r20, 0x00	; 0
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	80 91 0a 01 	lds	r24, 0x010A
 228:	90 91 0b 01 	lds	r25, 0x010B
 22c:	a0 91 0c 01 	lds	r26, 0x010C
 230:	b0 91 0d 01 	lds	r27, 0x010D
 234:	28 17       	cp	r18, r24
 236:	39 07       	cpc	r19, r25
 238:	4a 07       	cpc	r20, r26
 23a:	5b 07       	cpc	r21, r27
 23c:	28 f0       	brcs	.+10     	; 0x248 <_ZN12OrangutanLCD8busyWaitEv+0x7e>
 23e:	82 e3       	ldi	r24, 0x32	; 50
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	a0 e0       	ldi	r26, 0x00	; 0
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	04 c0       	rjmp	.+8      	; 0x250 <_ZN12OrangutanLCD8busyWaitEv+0x86>
 248:	80 e3       	ldi	r24, 0x30	; 48
 24a:	95 e7       	ldi	r25, 0x75	; 117
 24c:	a0 e0       	ldi	r26, 0x00	; 0
 24e:	b0 e0       	ldi	r27, 0x00	; 0
 250:	80 93 0a 01 	sts	0x010A, r24
 254:	90 93 0b 01 	sts	0x010B, r25
 258:	a0 93 0c 01 	sts	0x010C, r26
 25c:	b0 93 0d 01 	sts	0x010D, r27
 260:	17 b9       	out	0x07, r17	; 7
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	08 95       	ret

0000026c <_ZN12OrangutanLCD8sendDataEh>:
 26c:	28 b1       	in	r18, 0x08	; 8
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	90 70       	andi	r25, 0x00	; 0
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	23 7c       	andi	r18, 0xC3	; 195
 27e:	28 2b       	or	r18, r24
 280:	28 b9       	out	0x08, r18	; 8
 282:	2a 9a       	sbi	0x05, 2	; 5
 284:	0e 94 db 00 	call	0x1b6	; 0x1b6 <delayMicroseconds.clone.0>
 288:	2a 98       	cbi	0x05, 2	; 5
 28a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <delayMicroseconds.clone.0>
 28e:	08 95       	ret

00000290 <_ZN12OrangutanLCD4sendEhhh>:
 290:	a2 e0       	ldi	r26, 0x02	; 2
 292:	b0 e0       	ldi	r27, 0x00	; 0
 294:	ee e4       	ldi	r30, 0x4E	; 78
 296:	f1 e0       	ldi	r31, 0x01	; 1
 298:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__prologue_saves__+0x1a>
 29c:	18 2f       	mov	r17, r24
 29e:	4a 83       	std	Y+2, r20	; 0x02
 2a0:	69 83       	std	Y+1, r22	; 0x01
 2a2:	0e 94 be 01 	call	0x37c	; 0x37c <_ZN12OrangutanLCD4initEv>
 2a6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_ZN12OrangutanLCD8busyWaitEv>
 2aa:	f7 b0       	in	r15, 0x07	; 7
 2ac:	08 b1       	in	r16, 0x08	; 8
 2ae:	29 98       	cbi	0x05, 1	; 5
 2b0:	69 81       	ldd	r22, Y+1	; 0x01
 2b2:	4a 81       	ldd	r20, Y+2	; 0x02
 2b4:	66 23       	and	r22, r22
 2b6:	11 f0       	breq	.+4      	; 0x2bc <_ZN12OrangutanLCD4sendEhhh+0x2c>
 2b8:	28 9a       	sbi	0x05, 0	; 5
 2ba:	01 c0       	rjmp	.+2      	; 0x2be <_ZN12OrangutanLCD4sendEhhh+0x2e>
 2bc:	28 98       	cbi	0x05, 0	; 5
 2be:	87 b1       	in	r24, 0x07	; 7
 2c0:	8c 63       	ori	r24, 0x3C	; 60
 2c2:	87 b9       	out	0x07, r24	; 7
 2c4:	41 30       	cpi	r20, 0x01	; 1
 2c6:	29 f0       	breq	.+10     	; 0x2d2 <_ZN12OrangutanLCD4sendEhhh+0x42>
 2c8:	81 2f       	mov	r24, r17
 2ca:	82 95       	swap	r24
 2cc:	8f 70       	andi	r24, 0x0F	; 15
 2ce:	0e 94 36 01 	call	0x26c	; 0x26c <_ZN12OrangutanLCD8sendDataEh>
 2d2:	81 2f       	mov	r24, r17
 2d4:	8f 70       	andi	r24, 0x0F	; 15
 2d6:	0e 94 36 01 	call	0x26c	; 0x26c <_ZN12OrangutanLCD8sendDataEh>
 2da:	f7 b8       	out	0x07, r15	; 7
 2dc:	08 b9       	out	0x08, r16	; 8
 2de:	22 96       	adiw	r28, 0x02	; 2
 2e0:	e5 e0       	ldi	r30, 0x05	; 5
 2e2:	0c 94 95 02 	jmp	0x52a	; 0x52a <__epilogue_restores__+0x1a>

000002e6 <_ZN12OrangutanLCD8send_cmdEh>:
 2e6:	60 e0       	ldi	r22, 0x00	; 0
 2e8:	42 e0       	ldi	r20, 0x02	; 2
 2ea:	0e 94 48 01 	call	0x290	; 0x290 <_ZN12OrangutanLCD4sendEhhh>
 2ee:	08 95       	ret

000002f0 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
 2f0:	60 e0       	ldi	r22, 0x00	; 0
 2f2:	41 e0       	ldi	r20, 0x01	; 1
 2f4:	0e 94 48 01 	call	0x290	; 0x290 <_ZN12OrangutanLCD4sendEhhh>
 2f8:	08 95       	ret

000002fa <_ZN12OrangutanLCD5init2Ev>:
 2fa:	3d 98       	cbi	0x07, 5	; 7
 2fc:	45 9a       	sbi	0x08, 5	; 8
 2fe:	80 e3       	ldi	r24, 0x30	; 48
 300:	95 e7       	ldi	r25, 0x75	; 117
 302:	a0 e0       	ldi	r26, 0x00	; 0
 304:	b0 e0       	ldi	r27, 0x00	; 0
 306:	80 93 0a 01 	sts	0x010A, r24
 30a:	90 93 0b 01 	sts	0x010B, r25
 30e:	a0 93 0c 01 	sts	0x010C, r26
 312:	b0 93 0d 01 	sts	0x010D, r27
 316:	20 9a       	sbi	0x04, 0	; 4
 318:	21 9a       	sbi	0x04, 1	; 4
 31a:	22 9a       	sbi	0x04, 2	; 4
 31c:	8e e1       	ldi	r24, 0x1E	; 30
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	0e 94 47 02 	call	0x48e	; 0x48e <delay_ms>
 324:	83 e0       	ldi	r24, 0x03	; 3
 326:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
 32a:	86 e0       	ldi	r24, 0x06	; 6
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	0e 94 47 02 	call	0x48e	; 0x48e <delay_ms>
 332:	83 e0       	ldi	r24, 0x03	; 3
 334:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
 338:	82 e0       	ldi	r24, 0x02	; 2
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 47 02 	call	0x48e	; 0x48e <delay_ms>
 340:	83 e0       	ldi	r24, 0x03	; 3
 342:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 47 02 	call	0x48e	; 0x48e <delay_ms>
 34e:	82 e0       	ldi	r24, 0x02	; 2
 350:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
 354:	82 e0       	ldi	r24, 0x02	; 2
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	0e 94 47 02 	call	0x48e	; 0x48e <delay_ms>
 35c:	88 e2       	ldi	r24, 0x28	; 40
 35e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN12OrangutanLCD8send_cmdEh>
 362:	88 e0       	ldi	r24, 0x08	; 8
 364:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN12OrangutanLCD8send_cmdEh>
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN12OrangutanLCD8send_cmdEh>
 36e:	86 e0       	ldi	r24, 0x06	; 6
 370:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN12OrangutanLCD8send_cmdEh>
 374:	8c e0       	ldi	r24, 0x0C	; 12
 376:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN12OrangutanLCD8send_cmdEh>
 37a:	08 95       	ret

0000037c <_ZN12OrangutanLCD4initEv>:
 37c:	80 91 0e 01 	lds	r24, 0x010E
 380:	88 23       	and	r24, r24
 382:	29 f4       	brne	.+10     	; 0x38e <_ZN12OrangutanLCD4initEv+0x12>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	80 93 0e 01 	sts	0x010E, r24
 38a:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN12OrangutanLCD5init2Ev>
 38e:	08 95       	ret

00000390 <_ZN12OrangutanLCD5clearEv>:
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN12OrangutanLCD8send_cmdEh>
 396:	80 91 06 01 	lds	r24, 0x0106
 39a:	90 91 07 01 	lds	r25, 0x0107
 39e:	00 97       	sbiw	r24, 0x00	; 0
 3a0:	11 f1       	breq	.+68     	; 0x3e6 <_ZN12OrangutanLCD5clearEv+0x56>
 3a2:	a0 e0       	ldi	r26, 0x00	; 0
 3a4:	b0 e2       	ldi	r27, 0x20	; 32
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <_ZN12OrangutanLCD5clearEv+0x28>
 3a8:	e0 91 06 01 	lds	r30, 0x0106
 3ac:	f0 91 07 01 	lds	r31, 0x0107
 3b0:	e2 0f       	add	r30, r18
 3b2:	f3 1f       	adc	r31, r19
 3b4:	b0 83       	st	Z, r27
 3b6:	af 5f       	subi	r26, 0xFF	; 255
 3b8:	2a 2f       	mov	r18, r26
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	80 91 00 01 	lds	r24, 0x0100
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	60 91 01 01 	lds	r22, 0x0101
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	86 9f       	mul	r24, r22
 3cc:	a0 01       	movw	r20, r0
 3ce:	87 9f       	mul	r24, r23
 3d0:	50 0d       	add	r21, r0
 3d2:	96 9f       	mul	r25, r22
 3d4:	50 0d       	add	r21, r0
 3d6:	11 24       	eor	r1, r1
 3d8:	24 17       	cp	r18, r20
 3da:	35 07       	cpc	r19, r21
 3dc:	2c f3       	brlt	.-54     	; 0x3a8 <_ZN12OrangutanLCD5clearEv+0x18>
 3de:	10 92 09 01 	sts	0x0109, r1
 3e2:	10 92 08 01 	sts	0x0108, r1
 3e6:	08 95       	ret

000003e8 <clear>:
 3e8:	0e 94 c8 01 	call	0x390	; 0x390 <_ZN12OrangutanLCD5clearEv>
 3ec:	08 95       	ret

000003ee <_ZN13OrangutanTime17delayMicrosecondsEj>:
 3ee:	6f 93       	push	r22
 3f0:	64 e0       	ldi	r22, 0x04	; 4
 3f2:	6a 95       	dec	r22
 3f4:	f1 f7       	brne	.-4      	; 0x3f2 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
 3f6:	6f 91       	pop	r22
 3f8:	01 97       	sbiw	r24, 0x01	; 1
 3fa:	c9 f7       	brne	.-14     	; 0x3ee <_ZN13OrangutanTime17delayMicrosecondsEj>
 3fc:	08 95       	ret

000003fe <__vector_11>:
 3fe:	2f 92       	push	r2
 400:	8f 93       	push	r24
 402:	9f 93       	push	r25
 404:	2f b6       	in	r2, 0x3f	; 63
 406:	80 91 10 01 	lds	r24, 0x0110
 40a:	90 91 11 01 	lds	r25, 0x0111
 40e:	01 96       	adiw	r24, 0x01	; 1
 410:	80 93 10 01 	sts	0x0110, r24
 414:	90 93 11 01 	sts	0x0111, r25
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	80 91 12 01 	lds	r24, 0x0112
 41e:	89 1f       	adc	r24, r25
 420:	80 93 12 01 	sts	0x0112, r24
 424:	90 91 18 01 	lds	r25, 0x0118
 428:	9c 5f       	subi	r25, 0xFC	; 252
 42a:	90 93 18 01 	sts	0x0118, r25
 42e:	80 91 17 01 	lds	r24, 0x0117
 432:	80 51       	subi	r24, 0x10	; 16
 434:	97 42       	sbci	r25, 0x27	; 39
 436:	c0 f0       	brcs	.+48     	; 0x468 <end>
 438:	90 93 18 01 	sts	0x0118, r25
 43c:	80 93 17 01 	sts	0x0117, r24
 440:	80 91 13 01 	lds	r24, 0x0113
 444:	90 91 14 01 	lds	r25, 0x0114
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	80 93 13 01 	sts	0x0113, r24
 44e:	90 93 14 01 	sts	0x0114, r25
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	80 91 15 01 	lds	r24, 0x0115
 458:	89 1f       	adc	r24, r25
 45a:	80 93 15 01 	sts	0x0115, r24
 45e:	80 91 16 01 	lds	r24, 0x0116
 462:	89 1f       	adc	r24, r25
 464:	80 93 16 01 	sts	0x0116, r24

00000468 <end>:
 468:	2f be       	out	0x3f, r2	; 63
 46a:	9f 91       	pop	r25
 46c:	8f 91       	pop	r24
 46e:	2f 90       	pop	r2
 470:	18 95       	reti

00000472 <_ZN13OrangutanTime17delayMillisecondsEj>:
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	ec 01       	movw	r28, r24
 478:	05 c0       	rjmp	.+10     	; 0x484 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
 47a:	88 ee       	ldi	r24, 0xE8	; 232
 47c:	93 e0       	ldi	r25, 0x03	; 3
 47e:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_ZN13OrangutanTime17delayMicrosecondsEj>
 482:	21 97       	sbiw	r28, 0x01	; 1
 484:	20 97       	sbiw	r28, 0x00	; 0
 486:	c9 f7       	brne	.-14     	; 0x47a <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	08 95       	ret

0000048e <delay_ms>:
 48e:	0e 94 39 02 	call	0x472	; 0x472 <_ZN13OrangutanTime17delayMillisecondsEj>
 492:	08 95       	ret

00000494 <__udivmodsi4>:
 494:	a1 e2       	ldi	r26, 0x21	; 33
 496:	1a 2e       	mov	r1, r26
 498:	aa 1b       	sub	r26, r26
 49a:	bb 1b       	sub	r27, r27
 49c:	fd 01       	movw	r30, r26
 49e:	0d c0       	rjmp	.+26     	; 0x4ba <__udivmodsi4_ep>

000004a0 <__udivmodsi4_loop>:
 4a0:	aa 1f       	adc	r26, r26
 4a2:	bb 1f       	adc	r27, r27
 4a4:	ee 1f       	adc	r30, r30
 4a6:	ff 1f       	adc	r31, r31
 4a8:	a2 17       	cp	r26, r18
 4aa:	b3 07       	cpc	r27, r19
 4ac:	e4 07       	cpc	r30, r20
 4ae:	f5 07       	cpc	r31, r21
 4b0:	20 f0       	brcs	.+8      	; 0x4ba <__udivmodsi4_ep>
 4b2:	a2 1b       	sub	r26, r18
 4b4:	b3 0b       	sbc	r27, r19
 4b6:	e4 0b       	sbc	r30, r20
 4b8:	f5 0b       	sbc	r31, r21

000004ba <__udivmodsi4_ep>:
 4ba:	66 1f       	adc	r22, r22
 4bc:	77 1f       	adc	r23, r23
 4be:	88 1f       	adc	r24, r24
 4c0:	99 1f       	adc	r25, r25
 4c2:	1a 94       	dec	r1
 4c4:	69 f7       	brne	.-38     	; 0x4a0 <__udivmodsi4_loop>
 4c6:	60 95       	com	r22
 4c8:	70 95       	com	r23
 4ca:	80 95       	com	r24
 4cc:	90 95       	com	r25
 4ce:	9b 01       	movw	r18, r22
 4d0:	ac 01       	movw	r20, r24
 4d2:	bd 01       	movw	r22, r26
 4d4:	cf 01       	movw	r24, r30
 4d6:	08 95       	ret

000004d8 <__prologue_saves__>:
 4d8:	2f 92       	push	r2
 4da:	3f 92       	push	r3
 4dc:	4f 92       	push	r4
 4de:	5f 92       	push	r5
 4e0:	6f 92       	push	r6
 4e2:	7f 92       	push	r7
 4e4:	8f 92       	push	r8
 4e6:	9f 92       	push	r9
 4e8:	af 92       	push	r10
 4ea:	bf 92       	push	r11
 4ec:	cf 92       	push	r12
 4ee:	df 92       	push	r13
 4f0:	ef 92       	push	r14
 4f2:	ff 92       	push	r15
 4f4:	0f 93       	push	r16
 4f6:	1f 93       	push	r17
 4f8:	cf 93       	push	r28
 4fa:	df 93       	push	r29
 4fc:	cd b7       	in	r28, 0x3d	; 61
 4fe:	de b7       	in	r29, 0x3e	; 62
 500:	ca 1b       	sub	r28, r26
 502:	db 0b       	sbc	r29, r27
 504:	0f b6       	in	r0, 0x3f	; 63
 506:	f8 94       	cli
 508:	de bf       	out	0x3e, r29	; 62
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	cd bf       	out	0x3d, r28	; 61
 50e:	09 94       	ijmp

00000510 <__epilogue_restores__>:
 510:	2a 88       	ldd	r2, Y+18	; 0x12
 512:	39 88       	ldd	r3, Y+17	; 0x11
 514:	48 88       	ldd	r4, Y+16	; 0x10
 516:	5f 84       	ldd	r5, Y+15	; 0x0f
 518:	6e 84       	ldd	r6, Y+14	; 0x0e
 51a:	7d 84       	ldd	r7, Y+13	; 0x0d
 51c:	8c 84       	ldd	r8, Y+12	; 0x0c
 51e:	9b 84       	ldd	r9, Y+11	; 0x0b
 520:	aa 84       	ldd	r10, Y+10	; 0x0a
 522:	b9 84       	ldd	r11, Y+9	; 0x09
 524:	c8 84       	ldd	r12, Y+8	; 0x08
 526:	df 80       	ldd	r13, Y+7	; 0x07
 528:	ee 80       	ldd	r14, Y+6	; 0x06
 52a:	fd 80       	ldd	r15, Y+5	; 0x05
 52c:	0c 81       	ldd	r16, Y+4	; 0x04
 52e:	1b 81       	ldd	r17, Y+3	; 0x03
 530:	aa 81       	ldd	r26, Y+2	; 0x02
 532:	b9 81       	ldd	r27, Y+1	; 0x01
 534:	ce 0f       	add	r28, r30
 536:	d1 1d       	adc	r29, r1
 538:	0f b6       	in	r0, 0x3f	; 63
 53a:	f8 94       	cli
 53c:	de bf       	out	0x3e, r29	; 62
 53e:	0f be       	out	0x3f, r0	; 63
 540:	cd bf       	out	0x3d, r28	; 61
 542:	ed 01       	movw	r28, r26
 544:	08 95       	ret

00000546 <_exit>:
 546:	f8 94       	cli

00000548 <__stop_program>:
 548:	ff cf       	rjmp	.-2      	; 0x548 <__stop_program>
