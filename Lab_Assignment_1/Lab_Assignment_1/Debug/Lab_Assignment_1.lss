
Lab_Assignment_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000258  00800100  00002afc  00002b90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002afc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000086  00800358  00800358  00002de8  2**0
                  ALLOC
  3 .stab         0000351c  00000000  00000000  00002de8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000569f  00000000  00000000  00006304  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  0000b9a3  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000d8  00000000  00000000  0000b9ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000c61  00000000  00000000  0000bad7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000608  00000000  00000000  0000c738  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000821  00000000  00000000  0000cd40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002c4  00000000  00000000  0000d564  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000046e  00000000  00000000  0000d828  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000737  00000000  00000000  0000dc96  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000098  00000000  00000000  0000e3cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
       4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      2c:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__vector_11>
      30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      34:	0c 94 0c 02 	jmp	0x418	; 0x418 <__vector_13>
      38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      40:	0c 94 89 04 	jmp	0x912	; 0x912 <__vector_16>
      44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      50:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__vector_20>
      54:	0c 94 b1 0b 	jmp	0x1762	; 0x1762 <__vector_21>
      58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      70:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__vector_28>
      74:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__vector_29>
      78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      80:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__vector_32>
      84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e4       	ldi	r29, 0x40	; 64
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	13 e0       	ldi	r17, 0x03	; 3
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	ec ef       	ldi	r30, 0xFC	; 252
      ac:	fa e2       	ldi	r31, 0x2A	; 42
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	a8 35       	cpi	r26, 0x58	; 88
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	23 e0       	ldi	r18, 0x03	; 3
      c0:	a8 e5       	ldi	r26, 0x58	; 88
      c2:	b3 e0       	ldi	r27, 0x03	; 3
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	ae 3d       	cpi	r26, 0xDE	; 222
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	0e 94 6d 00 	call	0xda	; 0xda <main>
      d2:	0c 94 7c 15 	jmp	0x2af8	; 0x2af8 <_exit>

000000d6 <__bad_interrupt>:
      d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <main>:


	// Used to print to serial comm window
	char tempBuffer[32];
	int length = 0;
	clear();
      da:	0e 94 fe 05 	call	0xbfc	; 0xbfc <clear>
	print("here");
      de:	82 e3       	ldi	r24, 0x32	; 50
      e0:	91 e0       	ldi	r25, 0x01	; 1
      e2:	0e 94 15 06 	call	0xc2a	; 0xc2a <print>
	// Initialization here.
	lcd_init_printf();	// required if we want to use printf() for LCD printing
      e6:	0e 94 8f 07 	call	0xf1e	; 0xf1e <lcd_init_printf>
	init_LEDs();
      ea:	0e 94 ae 00 	call	0x15c	; 0x15c <init_LEDs>
	
	init_timers();
      ee:	0e 94 f7 03 	call	0x7ee	; 0x7ee <init_timers>
	init_menu();	// this is initialization of serial comm through USB
      f2:	0e 94 41 02 	call	0x482	; 0x482 <init_menu>
	
	clear();	// clear the LCD
      f6:	0e 94 fe 05 	call	0xbfc	; 0xbfc <clear>

	//enable interrupts
	sei();
      fa:	78 94       	sei

		// ONCE THAT WORKS, Comment out the above and use a software timer
		//	to "schedule" the RED LED toggle.
		///*
		if (G_release_red) {
		LED_TOGGLE(RED);
      fc:	c4 e0       	ldi	r28, 0x04	; 4
		*/

		// ONCE THAT WORKS, Comment out the above and use a software timer
		//	to "schedule" the RED LED toggle.
		///*
		if (G_release_red) {
      fe:	80 91 81 03 	lds	r24, 0x0381
     102:	90 91 82 03 	lds	r25, 0x0382
     106:	a0 91 83 03 	lds	r26, 0x0383
     10a:	b0 91 84 03 	lds	r27, 0x0384
     10e:	89 2b       	or	r24, r25
     110:	8a 2b       	or	r24, r26
     112:	8b 2b       	or	r24, r27
     114:	f1 f0       	breq	.+60     	; 0x152 <main+0x78>
		LED_TOGGLE(RED);
     116:	82 b1       	in	r24, 0x02	; 2
     118:	8c 27       	eor	r24, r28
     11a:	82 b9       	out	0x02, r24	; 2
		G_red_toggles++;
     11c:	80 91 7d 03 	lds	r24, 0x037D
     120:	90 91 7e 03 	lds	r25, 0x037E
     124:	a0 91 7f 03 	lds	r26, 0x037F
     128:	b0 91 80 03 	lds	r27, 0x0380
     12c:	01 96       	adiw	r24, 0x01	; 1
     12e:	a1 1d       	adc	r26, r1
     130:	b1 1d       	adc	r27, r1
     132:	80 93 7d 03 	sts	0x037D, r24
     136:	90 93 7e 03 	sts	0x037E, r25
     13a:	a0 93 7f 03 	sts	0x037F, r26
     13e:	b0 93 80 03 	sts	0x0380, r27
		G_release_red = 0;
     142:	10 92 81 03 	sts	0x0381, r1
     146:	10 92 82 03 	sts	0x0382, r1
     14a:	10 92 83 03 	sts	0x0383, r1
     14e:	10 92 84 03 	sts	0x0384, r1
		//*/

		// Whenever you are ready, add in the menu task.
		// Think of this as an external interrupt "releasing" the task.
		
		serial_check();
     152:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <serial_check>
		check_for_new_bytes_received();
     156:	0e 94 a9 03 	call	0x752	; 0x752 <check_for_new_bytes_received>
		
		
	} //end while loop
     15a:	d1 cf       	rjmp	.-94     	; 0xfe <main+0x24>

0000015c <init_LEDs>:

extern uint32_t G_red_toggles;
extern uint32_t G_green_toggles;
extern uint32_t G_yellow_toggles;

void init_LEDs() {
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	00 d0       	rcall	.+0      	; 0x162 <init_LEDs+0x6>
     162:	cd b7       	in	r28, 0x3d	; 61
     164:	de b7       	in	r29, 0x3e	; 62

	volatile int i;

	// Clear all data direction ports
	DD_REG_RED    = 0;
     166:	11 b8       	out	0x01, r1	; 1
	DD_REG_YELLOW = 0;
     168:	11 b8       	out	0x01, r1	; 1
	DD_REG_GREEN  = 0;
     16a:	1a b8       	out	0x0a, r1	; 10

	// Configure data direction as output
	DD_REG_RED    |= BIT_RED;
     16c:	0a 9a       	sbi	0x01, 2	; 1
	DD_REG_YELLOW |= BIT_YELLOW;
     16e:	08 9a       	sbi	0x01, 0	; 1
	DD_REG_GREEN  |= BIT_GREEN;
     170:	55 9a       	sbi	0x0a, 5	; 10
	
	PORT_RED    |= BIT_RED;
     172:	12 9a       	sbi	0x02, 2	; 2
	PORT_YELLOW |= BIT_YELLOW;
     174:	10 9a       	sbi	0x02, 0	; 2
	PORT_GREEN  |= BIT_GREEN;
     176:	5d 9a       	sbi	0x0b, 5	; 11

	// Turn LEDs on to make sure they are working
	LED_ON(RED);
     178:	12 9a       	sbi	0x02, 2	; 2
	LED_ON(YELLOW);
     17a:	10 9a       	sbi	0x02, 0	; 2
	LED_ON(GREEN);
     17c:	5d 9a       	sbi	0x0b, 5	; 11
	
	// leave on for 2 seconds
	for (i=0;i<200;i++){
     17e:	1a 82       	std	Y+2, r1	; 0x02
     180:	19 82       	std	Y+1, r1	; 0x01
     182:	89 81       	ldd	r24, Y+1	; 0x01
     184:	9a 81       	ldd	r25, Y+2	; 0x02
     186:	88 3c       	cpi	r24, 0xC8	; 200
     188:	91 05       	cpc	r25, r1
     18a:	7c f5       	brge	.+94     	; 0x1ea <init_LEDs+0x8e>
		WAIT_10MS;
     18c:	10 92 8f 03 	sts	0x038F, r1
     190:	10 92 90 03 	sts	0x0390, r1
     194:	10 92 91 03 	sts	0x0391, r1
     198:	10 92 92 03 	sts	0x0392, r1
     19c:	80 91 8f 03 	lds	r24, 0x038F
     1a0:	90 91 90 03 	lds	r25, 0x0390
     1a4:	a0 91 91 03 	lds	r26, 0x0391
     1a8:	b0 91 92 03 	lds	r27, 0x0392
     1ac:	8e 3f       	cpi	r24, 0xFE	; 254
     1ae:	95 41       	sbci	r25, 0x15	; 21
     1b0:	a1 05       	cpc	r26, r1
     1b2:	b1 05       	cpc	r27, r1
     1b4:	a0 f4       	brcc	.+40     	; 0x1de <init_LEDs+0x82>
     1b6:	80 91 8f 03 	lds	r24, 0x038F
     1ba:	90 91 90 03 	lds	r25, 0x0390
     1be:	a0 91 91 03 	lds	r26, 0x0391
     1c2:	b0 91 92 03 	lds	r27, 0x0392
     1c6:	01 96       	adiw	r24, 0x01	; 1
     1c8:	a1 1d       	adc	r26, r1
     1ca:	b1 1d       	adc	r27, r1
     1cc:	80 93 8f 03 	sts	0x038F, r24
     1d0:	90 93 90 03 	sts	0x0390, r25
     1d4:	a0 93 91 03 	sts	0x0391, r26
     1d8:	b0 93 92 03 	sts	0x0392, r27
     1dc:	df cf       	rjmp	.-66     	; 0x19c <init_LEDs+0x40>
	LED_ON(RED);
	LED_ON(YELLOW);
	LED_ON(GREEN);
	
	// leave on for 2 seconds
	for (i=0;i<200;i++){
     1de:	89 81       	ldd	r24, Y+1	; 0x01
     1e0:	9a 81       	ldd	r25, Y+2	; 0x02
     1e2:	01 96       	adiw	r24, 0x01	; 1
     1e4:	9a 83       	std	Y+2, r25	; 0x02
     1e6:	89 83       	std	Y+1, r24	; 0x01
     1e8:	cc cf       	rjmp	.-104    	; 0x182 <init_LEDs+0x26>
		WAIT_10MS;
	}
	// Start all LEDs off
	LED_OFF(RED);
     1ea:	12 98       	cbi	0x02, 2	; 2
	LED_OFF(YELLOW);
     1ec:	10 98       	cbi	0x02, 0	; 2
	LED_OFF(GREEN);
     1ee:	5d 98       	cbi	0x0b, 5	; 11

	// clear toggle counters
	G_green_toggles = 0;
     1f0:	10 92 79 03 	sts	0x0379, r1
     1f4:	10 92 7a 03 	sts	0x037A, r1
     1f8:	10 92 7b 03 	sts	0x037B, r1
     1fc:	10 92 7c 03 	sts	0x037C, r1
	G_red_toggles = 0;
     200:	10 92 7d 03 	sts	0x037D, r1
     204:	10 92 7e 03 	sts	0x037E, r1
     208:	10 92 7f 03 	sts	0x037F, r1
     20c:	10 92 80 03 	sts	0x0380, r1
	G_yellow_toggles = 0;
     210:	10 92 75 03 	sts	0x0375, r1
     214:	10 92 76 03 	sts	0x0376, r1
     218:	10 92 77 03 	sts	0x0377, r1
     21c:	10 92 78 03 	sts	0x0378, r1
	
}
     220:	0f 90       	pop	r0
     222:	0f 90       	pop	r0
     224:	df 91       	pop	r29
     226:	cf 91       	pop	r28
     228:	08 95       	ret

0000022a <set_toggle>:


void set_toggle(char color, int ms) {
     22a:	1f 93       	push	r17
     22c:	cf 93       	push	r28
     22e:	df 93       	push	r29
     230:	18 2f       	mov	r17, r24
     232:	eb 01       	movw	r28, r22

	// check toggle ms is positive and multiple of 100
	if (ms<0) {
     234:	77 ff       	sbrs	r23, 7
     236:	07 c0       	rjmp	.+14     	; 0x246 <set_toggle+0x1c>
		printf("Cannot toggle negative ms.\n");
     238:	87 e3       	ldi	r24, 0x37	; 55
     23a:	91 e0       	ldi	r25, 0x01	; 1
			ICR1 = 19 * G_green_period;
			OCR1A = (uint32_t) ICR1 / 2 ;
			//printf("Green to toggle at freq %luHz (period %lu ms)\n", XXXXX ,G_green_period);
		}
	}
}
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17

void set_toggle(char color, int ms) {

	// check toggle ms is positive and multiple of 100
	if (ms<0) {
		printf("Cannot toggle negative ms.\n");
     242:	0c 94 f9 0e 	jmp	0x1df2	; 0x1df2 <puts>
		return;
	}

	if (~((ms%100)==0)) {
		ms = ms - (ms%100);
     246:	cb 01       	movw	r24, r22
     248:	64 e6       	ldi	r22, 0x64	; 100
     24a:	70 e0       	ldi	r23, 0x00	; 0
     24c:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__divmodhi4>
     250:	c8 1b       	sub	r28, r24
     252:	d9 0b       	sbc	r29, r25
		printf("Converted to toggle period: %lu.\n",ms);
     254:	df 93       	push	r29
     256:	cf 93       	push	r28
     258:	22 e5       	ldi	r18, 0x52	; 82
     25a:	31 e0       	ldi	r19, 0x01	; 1
     25c:	3f 93       	push	r19
     25e:	2f 93       	push	r18
     260:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <printf>
	}

	// For each color, if ms is 0, turn it off by changing data direction to input.
	// If it is >0, set data direction to output.
	if ((color=='R') || (color=='A')) {
     264:	0f 90       	pop	r0
     266:	0f 90       	pop	r0
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	12 35       	cpi	r17, 0x52	; 82
     26e:	19 f0       	breq	.+6      	; 0x276 <set_toggle+0x4c>
     270:	11 34       	cpi	r17, 0x41	; 65
     272:	09 f0       	breq	.+2      	; 0x276 <set_toggle+0x4c>
     274:	69 c0       	rjmp	.+210    	; 0x348 <set_toggle+0x11e>
		if (ms==0)
     276:	20 97       	sbiw	r28, 0x00	; 0
     278:	11 f4       	brne	.+4      	; 0x27e <set_toggle+0x54>
		DD_REG_OFF(RED);
     27a:	0a 98       	cbi	0x01, 2	; 1
     27c:	01 c0       	rjmp	.+2      	; 0x280 <set_toggle+0x56>
		else
		DD_REG_ON(RED);
     27e:	0a 9a       	sbi	0x01, 2	; 1
		G_red_period = ms;
     280:	ae 01       	movw	r20, r28
     282:	66 27       	eor	r22, r22
     284:	57 fd       	sbrc	r21, 7
     286:	60 95       	com	r22
     288:	76 2f       	mov	r23, r22
     28a:	40 93 2e 01 	sts	0x012E, r20
     28e:	50 93 2f 01 	sts	0x012F, r21
     292:	60 93 30 01 	sts	0x0130, r22
     296:	70 93 31 01 	sts	0x0131, r23
	}

	if ((color=='Y') || (color=='A')) {
     29a:	19 35       	cpi	r17, 0x59	; 89
     29c:	21 f4       	brne	.+8      	; 0x2a6 <set_toggle+0x7c>
		if (ms==0)
     29e:	20 97       	sbiw	r28, 0x00	; 0
     2a0:	31 f4       	brne	.+12     	; 0x2ae <set_toggle+0x84>
		DD_REG_OFF(YELLOW);
     2a2:	08 98       	cbi	0x01, 0	; 1
     2a4:	05 c0       	rjmp	.+10     	; 0x2b0 <set_toggle+0x86>
		else
		DD_REG_ON(RED);
		G_red_period = ms;
	}

	if ((color=='Y') || (color=='A')) {
     2a6:	11 34       	cpi	r17, 0x41	; 65
     2a8:	09 f0       	breq	.+2      	; 0x2ac <set_toggle+0x82>
     2aa:	51 c0       	rjmp	.+162    	; 0x34e <set_toggle+0x124>
     2ac:	f8 cf       	rjmp	.-16     	; 0x29e <set_toggle+0x74>
		if (ms==0)
		DD_REG_OFF(YELLOW);
		else
		DD_REG_ON(YELLOW);
     2ae:	08 9a       	sbi	0x01, 0	; 1
		G_yellow_period = ms / 100;
     2b0:	ce 01       	movw	r24, r28
     2b2:	64 e6       	ldi	r22, 0x64	; 100
     2b4:	70 e0       	ldi	r23, 0x00	; 0
     2b6:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__divmodhi4>
     2ba:	ab 01       	movw	r20, r22
     2bc:	66 27       	eor	r22, r22
     2be:	57 fd       	sbrc	r21, 7
     2c0:	60 95       	com	r22
     2c2:	76 2f       	mov	r23, r22
     2c4:	40 93 26 01 	sts	0x0126, r20
     2c8:	50 93 27 01 	sts	0x0127, r21
     2cc:	60 93 28 01 	sts	0x0128, r22
     2d0:	70 93 29 01 	sts	0x0129, r23
	}

	if ((color=='G') || (color=='A')) {
     2d4:	17 34       	cpi	r17, 0x47	; 71
     2d6:	31 f4       	brne	.+12     	; 0x2e4 <set_toggle+0xba>
		if (ms==0)
     2d8:	20 97       	sbiw	r28, 0x00	; 0
     2da:	39 f4       	brne	.+14     	; 0x2ea <set_toggle+0xc0>
		{
			DD_REG_OFF(GREEN);
     2dc:	55 98       	cbi	0x0a, 5	; 10
			TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1); // Turn off ISR
     2de:	10 92 6f 00 	sts	0x006F, r1
     2e2:	0d c0       	rjmp	.+26     	; 0x2fe <set_toggle+0xd4>
		else
		DD_REG_ON(YELLOW);
		G_yellow_period = ms / 100;
	}

	if ((color=='G') || (color=='A')) {
     2e4:	11 34       	cpi	r17, 0x41	; 65
     2e6:	a9 f5       	brne	.+106    	; 0x352 <set_toggle+0x128>
     2e8:	f7 cf       	rjmp	.-18     	; 0x2d8 <set_toggle+0xae>
			DD_REG_OFF(GREEN);
			TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1); // Turn off ISR
		}
		else
		{
			DD_REG_ON(GREEN);
     2ea:	55 9a       	sbi	0x0a, 5	; 10
			TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (1<<OCIE1A) | (0<<TOIE1); // Turn on ISR
     2ec:	82 e0       	ldi	r24, 0x02	; 2
     2ee:	80 93 6f 00 	sts	0x006F, r24
			G_green_period = ms;
		}

		// green has a limit on its period.
		if ( ms > 4000) ms = 4000;
     2f2:	c1 3a       	cpi	r28, 0xA1	; 161
     2f4:	8f e0       	ldi	r24, 0x0F	; 15
     2f6:	d8 07       	cpc	r29, r24
     2f8:	14 f0       	brlt	.+4      	; 0x2fe <set_toggle+0xd4>
     2fa:	c0 ea       	ldi	r28, 0xA0	; 160
     2fc:	df e0       	ldi	r29, 0x0F	; 15
		G_green_period = ms;
     2fe:	ae 01       	movw	r20, r28
     300:	66 27       	eor	r22, r22
     302:	57 fd       	sbrc	r21, 7
     304:	60 95       	com	r22
     306:	76 2f       	mov	r23, r22
     308:	40 93 2a 01 	sts	0x012A, r20
     30c:	50 93 2b 01 	sts	0x012B, r21
     310:	60 93 2c 01 	sts	0x012C, r22
     314:	70 93 2d 01 	sts	0x012D, r23

		// set the OCR1A (TOP) to get (approximately) the requested frequency.
		if ( ms > 0 ) {
     318:	1c 16       	cp	r1, r28
     31a:	1d 06       	cpc	r1, r29
     31c:	d4 f4       	brge	.+52     	; 0x352 <set_toggle+0x128>
			ICR1 = 19 * G_green_period;
     31e:	23 e1       	ldi	r18, 0x13	; 19
     320:	2c 9f       	mul	r18, r28
     322:	c0 01       	movw	r24, r0
     324:	2d 9f       	mul	r18, r29
     326:	90 0d       	add	r25, r0
     328:	11 24       	eor	r1, r1
     32a:	90 93 87 00 	sts	0x0087, r25
     32e:	80 93 86 00 	sts	0x0086, r24
			OCR1A = (uint32_t) ICR1 / 2 ;
     332:	80 91 86 00 	lds	r24, 0x0086
     336:	90 91 87 00 	lds	r25, 0x0087
     33a:	96 95       	lsr	r25
     33c:	87 95       	ror	r24
     33e:	90 93 89 00 	sts	0x0089, r25
     342:	80 93 88 00 	sts	0x0088, r24
     346:	05 c0       	rjmp	.+10     	; 0x352 <set_toggle+0x128>
		else
		DD_REG_ON(RED);
		G_red_period = ms;
	}

	if ((color=='Y') || (color=='A')) {
     348:	19 35       	cpi	r17, 0x59	; 89
     34a:	09 f4       	brne	.+2      	; 0x34e <set_toggle+0x124>
     34c:	a8 cf       	rjmp	.-176    	; 0x29e <set_toggle+0x74>
		else
		DD_REG_ON(YELLOW);
		G_yellow_period = ms / 100;
	}

	if ((color=='G') || (color=='A')) {
     34e:	17 34       	cpi	r17, 0x47	; 71
     350:	19 f2       	breq	.-122    	; 0x2d8 <set_toggle+0xae>
			ICR1 = 19 * G_green_period;
			OCR1A = (uint32_t) ICR1 / 2 ;
			//printf("Green to toggle at freq %luHz (period %lu ms)\n", XXXXX ,G_green_period);
		}
	}
}
     352:	df 91       	pop	r29
     354:	cf 91       	pop	r28
     356:	1f 91       	pop	r17
     358:	08 95       	ret

0000035a <__vector_32>:


// INTERRUPT Names are defined in iom1284p.h

// INTERRUPT HANDLER for yellow LED
ISR(TIMER3_COMPA_vect) {
     35a:	1f 92       	push	r1
     35c:	0f 92       	push	r0
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	0f 92       	push	r0
     362:	11 24       	eor	r1, r1
     364:	0b b6       	in	r0, 0x3b	; 59
     366:	0f 92       	push	r0
     368:	2f 93       	push	r18
     36a:	3f 93       	push	r19
     36c:	4f 93       	push	r20
     36e:	5f 93       	push	r21
     370:	6f 93       	push	r22
     372:	7f 93       	push	r23
     374:	8f 93       	push	r24
     376:	9f 93       	push	r25
     378:	af 93       	push	r26
     37a:	bf 93       	push	r27
     37c:	ef 93       	push	r30
     37e:	ff 93       	push	r31
	// This the Interrupt Service Routine for Toggling the yellow LED.
	// Each time the TCNT count is equal to the OCRxx register, this interrupt is enabled.
	// At creation of this file, it was initialized to interrupt every 100ms (10Hz).
	//
	// Increment ticks. If it is time, toggle YELLOW and increment toggle counter.
	G_yellow_ticks++;
     380:	60 91 89 03 	lds	r22, 0x0389
     384:	70 91 8a 03 	lds	r23, 0x038A
     388:	80 91 8b 03 	lds	r24, 0x038B
     38c:	90 91 8c 03 	lds	r25, 0x038C
     390:	6f 5f       	subi	r22, 0xFF	; 255
     392:	7f 4f       	sbci	r23, 0xFF	; 255
     394:	8f 4f       	sbci	r24, 0xFF	; 255
     396:	9f 4f       	sbci	r25, 0xFF	; 255
     398:	60 93 89 03 	sts	0x0389, r22
     39c:	70 93 8a 03 	sts	0x038A, r23
     3a0:	80 93 8b 03 	sts	0x038B, r24
     3a4:	90 93 8c 03 	sts	0x038C, r25
	if ( ( G_yellow_ticks % G_yellow_period ) == 0 )
     3a8:	20 91 26 01 	lds	r18, 0x0126
     3ac:	30 91 27 01 	lds	r19, 0x0127
     3b0:	40 91 28 01 	lds	r20, 0x0128
     3b4:	50 91 29 01 	lds	r21, 0x0129
     3b8:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__udivmodsi4>
     3bc:	67 2b       	or	r22, r23
     3be:	68 2b       	or	r22, r24
     3c0:	69 2b       	or	r22, r25
     3c2:	b9 f4       	brne	.+46     	; 0x3f2 <__vector_32+0x98>
	{
		LED_TOGGLE(YELLOW);
     3c4:	82 b1       	in	r24, 0x02	; 2
     3c6:	91 e0       	ldi	r25, 0x01	; 1
     3c8:	89 27       	eor	r24, r25
     3ca:	82 b9       	out	0x02, r24	; 2
		G_yellow_toggles++;
     3cc:	80 91 75 03 	lds	r24, 0x0375
     3d0:	90 91 76 03 	lds	r25, 0x0376
     3d4:	a0 91 77 03 	lds	r26, 0x0377
     3d8:	b0 91 78 03 	lds	r27, 0x0378
     3dc:	01 96       	adiw	r24, 0x01	; 1
     3de:	a1 1d       	adc	r26, r1
     3e0:	b1 1d       	adc	r27, r1
     3e2:	80 93 75 03 	sts	0x0375, r24
     3e6:	90 93 76 03 	sts	0x0376, r25
     3ea:	a0 93 77 03 	sts	0x0377, r26
     3ee:	b0 93 78 03 	sts	0x0378, r27
	}
}
     3f2:	ff 91       	pop	r31
     3f4:	ef 91       	pop	r30
     3f6:	bf 91       	pop	r27
     3f8:	af 91       	pop	r26
     3fa:	9f 91       	pop	r25
     3fc:	8f 91       	pop	r24
     3fe:	7f 91       	pop	r23
     400:	6f 91       	pop	r22
     402:	5f 91       	pop	r21
     404:	4f 91       	pop	r20
     406:	3f 91       	pop	r19
     408:	2f 91       	pop	r18
     40a:	0f 90       	pop	r0
     40c:	0b be       	out	0x3b, r0	; 59
     40e:	0f 90       	pop	r0
     410:	0f be       	out	0x3f, r0	; 63
     412:	0f 90       	pop	r0
     414:	1f 90       	pop	r1
     416:	18 95       	reti

00000418 <__vector_13>:

// INTERRUPT HANDLER for green LED
ISR(TIMER1_COMPA_vect) {
     418:	1f 92       	push	r1
     41a:	0f 92       	push	r0
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	0f 92       	push	r0
     420:	11 24       	eor	r1, r1
     422:	8f 93       	push	r24
     424:	9f 93       	push	r25
     426:	af 93       	push	r26
     428:	bf 93       	push	r27

	// This the Interrupt Service Routine for tracking green toggles. The toggling is done in hardware.
	// Each time the TCNT count is equal to the OCRxx register, this interrupt is enabled.
	// This interrupts at the user-specified frequency for the green LED.
	
	G_green_toggles++;
     42a:	80 91 79 03 	lds	r24, 0x0379
     42e:	90 91 7a 03 	lds	r25, 0x037A
     432:	a0 91 7b 03 	lds	r26, 0x037B
     436:	b0 91 7c 03 	lds	r27, 0x037C
     43a:	01 96       	adiw	r24, 0x01	; 1
     43c:	a1 1d       	adc	r26, r1
     43e:	b1 1d       	adc	r27, r1
     440:	80 93 79 03 	sts	0x0379, r24
     444:	90 93 7a 03 	sts	0x037A, r25
     448:	a0 93 7b 03 	sts	0x037B, r26
     44c:	b0 93 7c 03 	sts	0x037C, r27
	
}
     450:	bf 91       	pop	r27
     452:	af 91       	pop	r26
     454:	9f 91       	pop	r25
     456:	8f 91       	pop	r24
     458:	0f 90       	pop	r0
     45a:	0f be       	out	0x3f, r0	; 63
     45c:	0f 90       	pop	r0
     45e:	1f 90       	pop	r1
     460:	18 95       	reti

00000462 <wait_for_sending_to_finish>:
// finish transmitting on USB_COMM.  We must call this before modifying
// send_buffer or trying to send more bytes, because otherwise we could
// corrupt an existing transmission.
void wait_for_sending_to_finish()
{
	while(!serial_send_buffer_empty(USB_COMM))
     462:	82 e0       	ldi	r24, 0x02	; 2
     464:	0e 94 a2 07 	call	0xf44	; 0xf44 <serial_send_buffer_empty>
     468:	81 11       	cpse	r24, r1
     46a:	03 c0       	rjmp	.+6      	; 0x472 <wait_for_sending_to_finish+0x10>
		serial_check();		// USB_COMM port is always in SERIAL_CHECK mode
     46c:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <serial_check>
     470:	f8 cf       	rjmp	.-16     	; 0x462 <wait_for_sending_to_finish>
}
     472:	08 95       	ret

00000474 <print_usb>:
char send_buffer[32];

// A generic function for whenever you want to print to your serial comm window.
// Provide a string and the length of that string. My serial comm likes "\r\n" at 
// the end of each string (be sure to include in length) for proper linefeed.
void print_usb( char *buffer, int n ) {
     474:	46 2f       	mov	r20, r22
	serial_send( USB_COMM, buffer, n );
     476:	bc 01       	movw	r22, r24
     478:	82 e0       	ldi	r24, 0x02	; 2
     47a:	0e 94 ae 0b 	call	0x175c	; 0x175c <serial_send>
	wait_for_sending_to_finish();
     47e:	0c 94 31 02 	jmp	0x462	; 0x462 <wait_for_sending_to_finish>

00000482 <init_menu>:
	
	char printBuffer[32];
	
	// Set the baud rate to 9600 bits per second.  Each byte takes ten bit
	// times, so you can get at most 960 bytes per second at this speed.
	serial_set_baud_rate(USB_COMM, 9600);
     482:	40 e8       	ldi	r20, 0x80	; 128
     484:	55 e2       	ldi	r21, 0x25	; 37
     486:	60 e0       	ldi	r22, 0x00	; 0
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	82 e0       	ldi	r24, 0x02	; 2
     48c:	0e 94 bd 0a 	call	0x157a	; 0x157a <serial_set_baud_rate>

	// Start receiving bytes in the ring buffer.
	serial_receive_ring(USB_COMM, receive_buffer, sizeof(receive_buffer));
     490:	40 e2       	ldi	r20, 0x20	; 32
     492:	63 e9       	ldi	r22, 0x93	; 147
     494:	73 e0       	ldi	r23, 0x03	; 3
     496:	82 e0       	ldi	r24, 0x02	; 2
     498:	0e 94 9b 09 	call	0x1336	; 0x1336 <serial_receive_ring>

	//memcpy_P( send_buffer, PSTR("USB Serial Initialized\r\n"), 24 );
	//snprintf( printBuffer, 24, "USB Serial Initialized\r\n");
	//print_usb( printBuffer, 24 );
	print_usb( "USB Serial Initialized\r\n", 24);
     49c:	68 e1       	ldi	r22, 0x18	; 24
     49e:	70 e0       	ldi	r23, 0x00	; 0
     4a0:	84 e7       	ldi	r24, 0x74	; 116
     4a2:	91 e0       	ldi	r25, 0x01	; 1
     4a4:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>

	//memcpy_P( send_buffer, MENU, MENU_LENGTH );
	print_usb( MENU, MENU_LENGTH );
     4a8:	6b e1       	ldi	r22, 0x1B	; 27
     4aa:	70 e0       	ldi	r23, 0x00	; 0
     4ac:	8d e8       	ldi	r24, 0x8D	; 141
     4ae:	91 e0       	ldi	r25, 0x01	; 1
     4b0:	0c 94 3a 02 	jmp	0x474	; 0x474 <print_usb>

000004b4 <process_received_string>:
//------------------------------------------------------------------------------------------
// process_received_byte: Parses a menu command (series of keystrokes) that 
// has been received on USB_COMM and processes it accordingly.
// The menu command is buffered in check_for_new_bytes_received (which calls this function).
void process_received_string(const char* buffer)
{
     4b4:	0f 93       	push	r16
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	cd b7       	in	r28, 0x3d	; 61
     4be:	de b7       	in	r29, 0x3e	; 62
     4c0:	a4 97       	sbiw	r28, 0x24	; 36
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	de bf       	out	0x3e, r29	; 62
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	cd bf       	out	0x3d, r28	; 61
	// parse and echo back to serial comm window (and optionally the LCD)
	char color;
	char op_char;
	int value;
	int parsed;
	parsed = sscanf(buffer, "%c %c %d", &op_char, &color, &value);
     4cc:	9e 01       	movw	r18, r28
     4ce:	2f 5d       	subi	r18, 0xDF	; 223
     4d0:	3f 4f       	sbci	r19, 0xFF	; 255
     4d2:	3f 93       	push	r19
     4d4:	2f 93       	push	r18
     4d6:	2d 5f       	subi	r18, 0xFD	; 253
     4d8:	3f 4f       	sbci	r19, 0xFF	; 255
     4da:	3f 93       	push	r19
     4dc:	2f 93       	push	r18
     4de:	21 50       	subi	r18, 0x01	; 1
     4e0:	31 09       	sbc	r19, r1
     4e2:	3f 93       	push	r19
     4e4:	2f 93       	push	r18
     4e6:	29 ea       	ldi	r18, 0xA9	; 169
     4e8:	31 e0       	ldi	r19, 0x01	; 1
     4ea:	3f 93       	push	r19
     4ec:	2f 93       	push	r18
     4ee:	9f 93       	push	r25
     4f0:	8f 93       	push	r24
     4f2:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <sscanf>
#ifdef ECHO2LCD
	lcd_goto_xy(0,0);
	printf("Got %c %c %lu\n", op_char, color, value);
#endif
	length = sprintf( tempBuffer, "Op:%c C:%c V:%lu\r\n", op_char, color, value );
     4f6:	8a a1       	ldd	r24, Y+34	; 0x22
     4f8:	8f 93       	push	r24
     4fa:	89 a1       	ldd	r24, Y+33	; 0x21
     4fc:	8f 93       	push	r24
     4fe:	8c a1       	ldd	r24, Y+36	; 0x24
     500:	1f 92       	push	r1
     502:	8f 93       	push	r24
     504:	8b a1       	ldd	r24, Y+35	; 0x23
     506:	1f 92       	push	r1
     508:	8f 93       	push	r24
     50a:	82 eb       	ldi	r24, 0xB2	; 178
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	9f 93       	push	r25
     510:	8f 93       	push	r24
     512:	8e 01       	movw	r16, r28
     514:	0f 5f       	subi	r16, 0xFF	; 255
     516:	1f 4f       	sbci	r17, 0xFF	; 255
     518:	1f 93       	push	r17
     51a:	0f 93       	push	r16
     51c:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <sprintf>
	print_usb( tempBuffer, length );
     520:	bc 01       	movw	r22, r24
     522:	c8 01       	movw	r24, r16
     524:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>
	
	// convert color to upper and check if valid
	color -= 32*(color>='a' && color<='z');
     528:	8c a1       	ldd	r24, Y+36	; 0x24
     52a:	9f e9       	ldi	r25, 0x9F	; 159
     52c:	98 0f       	add	r25, r24
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
     538:	9a 31       	cpi	r25, 0x1A	; 26
     53a:	10 f4       	brcc	.+4      	; 0x540 <process_received_string+0x8c>
     53c:	90 e2       	ldi	r25, 0x20	; 32
     53e:	01 c0       	rjmp	.+2      	; 0x542 <process_received_string+0x8e>
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	89 1b       	sub	r24, r25
     544:	8c a3       	std	Y+36, r24	; 0x24
	switch (color) {
     546:	87 34       	cpi	r24, 0x47	; 71
     548:	11 f1       	breq	.+68     	; 0x58e <process_received_string+0xda>
     54a:	18 f4       	brcc	.+6      	; 0x552 <process_received_string+0x9e>
     54c:	81 34       	cpi	r24, 0x41	; 65
     54e:	f9 f0       	breq	.+62     	; 0x58e <process_received_string+0xda>
     550:	04 c0       	rjmp	.+8      	; 0x55a <process_received_string+0xa6>
     552:	82 35       	cpi	r24, 0x52	; 82
     554:	e1 f0       	breq	.+56     	; 0x58e <process_received_string+0xda>
     556:	89 35       	cpi	r24, 0x59	; 89
     558:	d1 f0       	breq	.+52     	; 0x58e <process_received_string+0xda>
		case 'R':
		case 'G':
		case 'Y': 
		case 'A': break;
		default:
			print_usb( "Bad Color. Try {RGYA}\r\n", 23 );
     55a:	67 e1       	ldi	r22, 0x17	; 23
     55c:	70 e0       	ldi	r23, 0x00	; 0
     55e:	85 ec       	ldi	r24, 0xC5	; 197
     560:	91 e0       	ldi	r25, 0x01	; 1
     562:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>
			printf("Color: %c", color);
     566:	8c a1       	ldd	r24, Y+36	; 0x24
     568:	1f 92       	push	r1
     56a:	8f 93       	push	r24
     56c:	8d ed       	ldi	r24, 0xDD	; 221
     56e:	91 e0       	ldi	r25, 0x01	; 1
     570:	9f 93       	push	r25
     572:	8f 93       	push	r24
     574:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <printf>
			print_usb( MENU, MENU_LENGTH);
     578:	6b e1       	ldi	r22, 0x1B	; 27
     57a:	70 e0       	ldi	r23, 0x00	; 0
     57c:	8d e8       	ldi	r24, 0x8D	; 141
     57e:	91 e0       	ldi	r25, 0x01	; 1
     580:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>
			return;
     584:	0f 90       	pop	r0
     586:	0f 90       	pop	r0
     588:	0f 90       	pop	r0
     58a:	0f 90       	pop	r0
     58c:	d7 c0       	rjmp	.+430    	; 0x73c <process_received_string+0x288>
	}

	// Check valid command and implement
	switch (op_char) {
     58e:	9b a1       	ldd	r25, Y+35	; 0x23
     590:	9a 35       	cpi	r25, 0x5A	; 90
     592:	09 f4       	brne	.+2      	; 0x596 <process_received_string+0xe2>
     594:	8d c0       	rjmp	.+282    	; 0x6b0 <process_received_string+0x1fc>
     596:	28 f4       	brcc	.+10     	; 0x5a2 <process_received_string+0xee>
     598:	90 35       	cpi	r25, 0x50	; 80
     59a:	89 f0       	breq	.+34     	; 0x5be <process_received_string+0x10a>
     59c:	94 35       	cpi	r25, 0x54	; 84
     59e:	51 f0       	breq	.+20     	; 0x5b4 <process_received_string+0x100>
     5a0:	c1 c0       	rjmp	.+386    	; 0x724 <process_received_string+0x270>
     5a2:	94 37       	cpi	r25, 0x74	; 116
     5a4:	39 f0       	breq	.+14     	; 0x5b4 <process_received_string+0x100>
     5a6:	9a 37       	cpi	r25, 0x7A	; 122
     5a8:	09 f4       	brne	.+2      	; 0x5ac <process_received_string+0xf8>
     5aa:	82 c0       	rjmp	.+260    	; 0x6b0 <process_received_string+0x1fc>
     5ac:	90 37       	cpi	r25, 0x70	; 112
     5ae:	09 f0       	breq	.+2      	; 0x5b2 <process_received_string+0xfe>
     5b0:	b9 c0       	rjmp	.+370    	; 0x724 <process_received_string+0x270>
     5b2:	05 c0       	rjmp	.+10     	; 0x5be <process_received_string+0x10a>
		// change toggle frequency for <color> LED
		case 'T':
		case 't':
			set_toggle(color,value);
     5b4:	69 a1       	ldd	r22, Y+33	; 0x21
     5b6:	7a a1       	ldd	r23, Y+34	; 0x22
     5b8:	0e 94 15 01 	call	0x22a	; 0x22a <set_toggle>
			break; 
     5bc:	b9 c0       	rjmp	.+370    	; 0x730 <process_received_string+0x27c>
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
     5be:	87 34       	cpi	r24, 0x47	; 71
     5c0:	09 f4       	brne	.+2      	; 0x5c4 <process_received_string+0x110>
     5c2:	53 c0       	rjmp	.+166    	; 0x66a <process_received_string+0x1b6>
     5c4:	80 f5       	brcc	.+96     	; 0x626 <process_received_string+0x172>
     5c6:	81 34       	cpi	r24, 0x41	; 65
     5c8:	09 f0       	breq	.+2      	; 0x5cc <process_received_string+0x118>
     5ca:	6d c0       	rjmp	.+218    	; 0x6a6 <process_received_string+0x1f2>
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %lu\r\n", G_yellow_toggles );
					print_usb( tempBuffer, length ); 
					break;
				case 'A': 
					length = sprintf( tempBuffer, "Toggles R:%lu G:%lu Y:%lu\r\n", G_red_toggles, G_green_toggles, G_yellow_toggles );
     5cc:	80 91 78 03 	lds	r24, 0x0378
     5d0:	8f 93       	push	r24
     5d2:	80 91 77 03 	lds	r24, 0x0377
     5d6:	8f 93       	push	r24
     5d8:	80 91 76 03 	lds	r24, 0x0376
     5dc:	8f 93       	push	r24
     5de:	80 91 75 03 	lds	r24, 0x0375
     5e2:	8f 93       	push	r24
     5e4:	80 91 7c 03 	lds	r24, 0x037C
     5e8:	8f 93       	push	r24
     5ea:	80 91 7b 03 	lds	r24, 0x037B
     5ee:	8f 93       	push	r24
     5f0:	80 91 7a 03 	lds	r24, 0x037A
     5f4:	8f 93       	push	r24
     5f6:	80 91 79 03 	lds	r24, 0x0379
     5fa:	8f 93       	push	r24
     5fc:	80 91 80 03 	lds	r24, 0x0380
     600:	8f 93       	push	r24
     602:	80 91 7f 03 	lds	r24, 0x037F
     606:	8f 93       	push	r24
     608:	80 91 7e 03 	lds	r24, 0x037E
     60c:	8f 93       	push	r24
     60e:	80 91 7d 03 	lds	r24, 0x037D
     612:	8f 93       	push	r24
     614:	8a e1       	ldi	r24, 0x1A	; 26
     616:	92 e0       	ldi	r25, 0x02	; 2
     618:	9f 93       	push	r25
     61a:	8f 93       	push	r24
     61c:	1f 93       	push	r17
     61e:	0f 93       	push	r16
     620:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <sprintf>
     624:	36 c0       	rjmp	.+108    	; 0x692 <process_received_string+0x1de>
			set_toggle(color,value);
			break; 
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
     626:	82 35       	cpi	r24, 0x52	; 82
     628:	89 f0       	breq	.+34     	; 0x64c <process_received_string+0x198>
     62a:	89 35       	cpi	r24, 0x59	; 89
     62c:	e1 f5       	brne	.+120    	; 0x6a6 <process_received_string+0x1f2>
				case 'G': 
					length = sprintf( tempBuffer, "G toggles: %lu\r\n", G_green_toggles );
					print_usb( tempBuffer, length ); 
					break;
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %lu\r\n", G_yellow_toggles );
     62e:	80 91 78 03 	lds	r24, 0x0378
     632:	8f 93       	push	r24
     634:	80 91 77 03 	lds	r24, 0x0377
     638:	8f 93       	push	r24
     63a:	80 91 76 03 	lds	r24, 0x0376
     63e:	8f 93       	push	r24
     640:	80 91 75 03 	lds	r24, 0x0375
     644:	8f 93       	push	r24
     646:	89 e0       	ldi	r24, 0x09	; 9
     648:	92 e0       	ldi	r25, 0x02	; 2
     64a:	1d c0       	rjmp	.+58     	; 0x686 <process_received_string+0x1d2>
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
				case 'R': 
					length = sprintf( tempBuffer, "R toggles: %lu\r\n", G_red_toggles );
     64c:	80 91 80 03 	lds	r24, 0x0380
     650:	8f 93       	push	r24
     652:	80 91 7f 03 	lds	r24, 0x037F
     656:	8f 93       	push	r24
     658:	80 91 7e 03 	lds	r24, 0x037E
     65c:	8f 93       	push	r24
     65e:	80 91 7d 03 	lds	r24, 0x037D
     662:	8f 93       	push	r24
     664:	87 ee       	ldi	r24, 0xE7	; 231
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	0e c0       	rjmp	.+28     	; 0x686 <process_received_string+0x1d2>
					print_usb( tempBuffer, length ); 
					break;
				case 'G': 
					length = sprintf( tempBuffer, "G toggles: %lu\r\n", G_green_toggles );
     66a:	80 91 7c 03 	lds	r24, 0x037C
     66e:	8f 93       	push	r24
     670:	80 91 7b 03 	lds	r24, 0x037B
     674:	8f 93       	push	r24
     676:	80 91 7a 03 	lds	r24, 0x037A
     67a:	8f 93       	push	r24
     67c:	80 91 79 03 	lds	r24, 0x0379
     680:	8f 93       	push	r24
     682:	88 ef       	ldi	r24, 0xF8	; 248
     684:	91 e0       	ldi	r25, 0x01	; 1
					print_usb( tempBuffer, length ); 
					break;
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %lu\r\n", G_yellow_toggles );
     686:	9f 93       	push	r25
     688:	8f 93       	push	r24
     68a:	1f 93       	push	r17
     68c:	0f 93       	push	r16
     68e:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <sprintf>
					print_usb( tempBuffer, length ); 
					break;
				case 'A': 
					length = sprintf( tempBuffer, "Toggles R:%lu G:%lu Y:%lu\r\n", G_red_toggles, G_green_toggles, G_yellow_toggles );
					print_usb( tempBuffer, length ); 
     692:	bc 01       	movw	r22, r24
     694:	c8 01       	movw	r24, r16
     696:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>
					break;
     69a:	0f b6       	in	r0, 0x3f	; 63
     69c:	f8 94       	cli
     69e:	de bf       	out	0x3e, r29	; 62
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	cd bf       	out	0x3d, r28	; 61
     6a4:	45 c0       	rjmp	.+138    	; 0x730 <process_received_string+0x27c>
				default: print_usb("Default in p(color). How?\r\n", 27 );
     6a6:	6b e1       	ldi	r22, 0x1B	; 27
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	86 e3       	ldi	r24, 0x36	; 54
     6ac:	92 e0       	ldi	r25, 0x02	; 2
     6ae:	3e c0       	rjmp	.+124    	; 0x72c <process_received_string+0x278>
			break;

		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
     6b0:	87 34       	cpi	r24, 0x47	; 71
     6b2:	09 f1       	breq	.+66     	; 0x6f6 <process_received_string+0x242>
     6b4:	98 f4       	brcc	.+38     	; 0x6dc <process_received_string+0x228>
     6b6:	81 34       	cpi	r24, 0x41	; 65
     6b8:	81 f5       	brne	.+96     	; 0x71a <process_received_string+0x266>
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
				case 'Y': G_yellow_toggles=0; break;
				case 'A': G_red_toggles = G_green_toggles = G_yellow_toggles = 0; break;
     6ba:	10 92 75 03 	sts	0x0375, r1
     6be:	10 92 76 03 	sts	0x0376, r1
     6c2:	10 92 77 03 	sts	0x0377, r1
     6c6:	10 92 78 03 	sts	0x0378, r1
     6ca:	10 92 79 03 	sts	0x0379, r1
     6ce:	10 92 7a 03 	sts	0x037A, r1
     6d2:	10 92 7b 03 	sts	0x037B, r1
     6d6:	10 92 7c 03 	sts	0x037C, r1
     6da:	16 c0       	rjmp	.+44     	; 0x708 <process_received_string+0x254>
			break;

		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
     6dc:	82 35       	cpi	r24, 0x52	; 82
     6de:	a1 f0       	breq	.+40     	; 0x708 <process_received_string+0x254>
     6e0:	89 35       	cpi	r24, 0x59	; 89
     6e2:	d9 f4       	brne	.+54     	; 0x71a <process_received_string+0x266>
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
				case 'Y': G_yellow_toggles=0; break;
     6e4:	10 92 75 03 	sts	0x0375, r1
     6e8:	10 92 76 03 	sts	0x0376, r1
     6ec:	10 92 77 03 	sts	0x0377, r1
     6f0:	10 92 78 03 	sts	0x0378, r1
     6f4:	1d c0       	rjmp	.+58     	; 0x730 <process_received_string+0x27c>
		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
     6f6:	10 92 79 03 	sts	0x0379, r1
     6fa:	10 92 7a 03 	sts	0x037A, r1
     6fe:	10 92 7b 03 	sts	0x037B, r1
     702:	10 92 7c 03 	sts	0x037C, r1
     706:	14 c0       	rjmp	.+40     	; 0x730 <process_received_string+0x27c>
				case 'Y': G_yellow_toggles=0; break;
				case 'A': G_red_toggles = G_green_toggles = G_yellow_toggles = 0; break;
     708:	10 92 7d 03 	sts	0x037D, r1
     70c:	10 92 7e 03 	sts	0x037E, r1
     710:	10 92 7f 03 	sts	0x037F, r1
     714:	10 92 80 03 	sts	0x0380, r1
     718:	0b c0       	rjmp	.+22     	; 0x730 <process_received_string+0x27c>
				default: print_usb("Default in z(color). How?\r\n", 27 );
     71a:	6b e1       	ldi	r22, 0x1B	; 27
     71c:	70 e0       	ldi	r23, 0x00	; 0
     71e:	82 e5       	ldi	r24, 0x52	; 82
     720:	92 e0       	ldi	r25, 0x02	; 2
     722:	04 c0       	rjmp	.+8      	; 0x72c <process_received_string+0x278>
			}
			break;
		default:
			print_usb( "Command does not compute.\r\n", 27 );
     724:	6b e1       	ldi	r22, 0x1B	; 27
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	8e e6       	ldi	r24, 0x6E	; 110
     72a:	92 e0       	ldi	r25, 0x02	; 2
     72c:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>
		} // end switch(op_char) 
		
	print_usb( MENU, MENU_LENGTH);
     730:	6b e1       	ldi	r22, 0x1B	; 27
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	8d e8       	ldi	r24, 0x8D	; 141
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	0e 94 3a 02 	call	0x474	; 0x474 <print_usb>

} //end menu()
     73c:	a4 96       	adiw	r28, 0x24	; 36
     73e:	0f b6       	in	r0, 0x3f	; 63
     740:	f8 94       	cli
     742:	de bf       	out	0x3e, r29	; 62
     744:	0f be       	out	0x3f, r0	; 63
     746:	cd bf       	out	0x3d, r28	; 61
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	08 95       	ret

00000752 <check_for_new_bytes_received>:

//---------------------------------------------------------------------------------------
// If there are received bytes to process, this function loops through the receive_buffer
// accumulating new bytes (keystrokes) in another buffer for processing.
void check_for_new_bytes_received()
{
     752:	cf 93       	push	r28
     754:	df 93       	push	r29
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
     75a:	a0 97       	sbiw	r28, 0x20	; 32
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	de bf       	out	0x3e, r29	; 62
     762:	0f be       	out	0x3f, r0	; 63
     764:	cd bf       	out	0x3d, r28	; 61
	char menuBuffer[32];
	static int received = 0;
	
	// while there are unprocessed keystrokes in the receive_buffer, grab them and buffer
	// them into the menuBuffer
	while(serial_get_received_bytes(USB_COMM) != receive_buffer_position)
     766:	82 e0       	ldi	r24, 0x02	; 2
     768:	0e 94 92 07 	call	0xf24	; 0xf24 <serial_get_received_bytes>
     76c:	90 91 b3 03 	lds	r25, 0x03B3
     770:	20 91 8d 03 	lds	r18, 0x038D
     774:	30 91 8e 03 	lds	r19, 0x038E
     778:	89 17       	cp	r24, r25
     77a:	d9 f0       	breq	.+54     	; 0x7b2 <check_for_new_bytes_received+0x60>
	{
		// place in a buffer for processing
		menuBuffer[received] = receive_buffer[receive_buffer_position];
     77c:	a1 e0       	ldi	r26, 0x01	; 1
     77e:	b0 e0       	ldi	r27, 0x00	; 0
     780:	ac 0f       	add	r26, r28
     782:	bd 1f       	adc	r27, r29
     784:	a2 0f       	add	r26, r18
     786:	b3 1f       	adc	r27, r19
     788:	e9 2f       	mov	r30, r25
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	ed 56       	subi	r30, 0x6D	; 109
     78e:	fc 4f       	sbci	r31, 0xFC	; 252
     790:	80 81       	ld	r24, Z
     792:	8c 93       	st	X, r24
		++received;
     794:	2f 5f       	subi	r18, 0xFF	; 255
     796:	3f 4f       	sbci	r19, 0xFF	; 255
     798:	30 93 8e 03 	sts	0x038E, r19
     79c:	20 93 8d 03 	sts	0x038D, r18
		
		// Increment receive_buffer_position, but wrap around when it gets to
		// the end of the buffer. 
		if ( receive_buffer_position == sizeof(receive_buffer) - 1 )
     7a0:	9f 31       	cpi	r25, 0x1F	; 31
     7a2:	19 f4       	brne	.+6      	; 0x7aa <check_for_new_bytes_received+0x58>
		{
			receive_buffer_position = 0;
     7a4:	10 92 b3 03 	sts	0x03B3, r1
     7a8:	de cf       	rjmp	.-68     	; 0x766 <check_for_new_bytes_received+0x14>
		}			
		else
		{
			receive_buffer_position++;
     7aa:	9f 5f       	subi	r25, 0xFF	; 255
     7ac:	90 93 b3 03 	sts	0x03B3, r25
     7b0:	da cf       	rjmp	.-76     	; 0x766 <check_for_new_bytes_received+0x14>
		}
	}
	// If there were keystrokes processed, check if a menu command
	if (received) {
     7b2:	21 15       	cp	r18, r1
     7b4:	31 05       	cpc	r19, r1
     7b6:	91 f0       	breq	.+36     	; 0x7dc <check_for_new_bytes_received+0x8a>
		// if only 1 received, it was MOST LIKELY a carriage return. 
		// Even if it was a single keystroke, it is not a menu command, so ignore it.
		if ( 1 == received ) {
     7b8:	21 30       	cpi	r18, 0x01	; 1
     7ba:	31 05       	cpc	r19, r1
     7bc:	59 f0       	breq	.+22     	; 0x7d4 <check_for_new_bytes_received+0x82>
			received = 0;
			return;
		}
		// Process buffer: terminate string, process, reset index to beginning of array to receive another command
		menuBuffer[received] = '\0';
     7be:	e1 e0       	ldi	r30, 0x01	; 1
     7c0:	f0 e0       	ldi	r31, 0x00	; 0
     7c2:	ec 0f       	add	r30, r28
     7c4:	fd 1f       	adc	r31, r29
     7c6:	e2 0f       	add	r30, r18
     7c8:	f3 1f       	adc	r31, r19
     7ca:	10 82       	st	Z, r1
		for (int i=0; i<received; i++)
		{
			print_character(menuBuffer[i]);
		}
#endif
		process_received_string(menuBuffer);
     7cc:	ce 01       	movw	r24, r28
     7ce:	01 96       	adiw	r24, 0x01	; 1
     7d0:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <process_received_string>
		received = 0;
     7d4:	10 92 8e 03 	sts	0x038E, r1
     7d8:	10 92 8d 03 	sts	0x038D, r1
	}
}
     7dc:	a0 96       	adiw	r28, 0x20	; 32
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	f8 94       	cli
     7e2:	de bf       	out	0x3e, r29	; 62
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	cd bf       	out	0x3d, r28	; 61
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	08 95       	ret

000007ee <init_timers>:
extern uint32_t G_green_period;
extern uint32_t G_yellow_period;

extern uint32_t G_release_red;

void init_timers() {
     7ee:	cf 93       	push	r28
	//// SET appropriate bits in TCCR....
	//// Using CTC mode with OCR0 for TOP. This is mode 2, thus WGM0/1/0 = 010.
	//// Using pre-scaler 256. This is CS0/2/1/0 = 100
	//// Software Clock Interrupt Frequency: 1000 = f_IO / (prescaler*OCR0)
	//// Set OCR0 appropriately for TOP to generate desired frequency of 1KHz
	printf("Initializing software clock to freq 1000Hz (period 1 ms)\n");
     7f0:	8a e8       	ldi	r24, 0x8A	; 138
     7f2:	92 e0       	ldi	r25, 0x02	; 2
     7f4:	0e 94 f9 0e 	call	0x1df2	; 0x1df2 <puts>

	//Enable output compare match interrupt on timer 0A
	TCCR0A = (1<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0x0<<3) | (0x0<<2) | (1<<WGM01) | (0<<WGM00);
     7f8:	82 e8       	ldi	r24, 0x82	; 130
     7fa:	84 bd       	out	0x24, r24	; 36
	//      --^--                                                                         --^--
	TCCR0B = (0<<FOC0A)  | (0<<FOC0B)  | (0x0<<5) | (0x0<<4) | (0<<WGM02) | (1<<CS02) |  (0<<CS01) | (0<<CS00);
     7fc:	84 e0       	ldi	r24, 0x04	; 4
     7fe:	85 bd       	out	0x25, r24	; 37
	//                                                                     --^--
	OCR0A = 0x4E; // 78
     800:	8e e4       	ldi	r24, 0x4E	; 78
     802:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = (0x0<<7) | (0x0<<6) | (0x0<<5) | (0x0<<4) | (0x0<<3) | (0<<OCIE0B) | (1<<OCIE0A) | (0<<TOIE0);
     804:	c2 e0       	ldi	r28, 0x02	; 2
     806:	c0 93 6e 00 	sts	0x006E, r28
	//                                                                           --^--
	G_ms_ticks = 0;	// Initialize counter
     80a:	10 92 85 03 	sts	0x0385, r1
     80e:	10 92 86 03 	sts	0x0386, r1
     812:	10 92 87 03 	sts	0x0387, r1
     816:	10 92 88 03 	sts	0x0388, r1
	// THE ISR for this is in the LEDs.c file

	// SET appropriate bits in TCCR ...
	// Using CTC mode with OCR3A for TOP. This is mode 4, thus WGM1(3?)/3210 = 0,1,0,0 = 0x4.
	// Using pre-scaler 64. This is CS1(3?)_210 = 0,1,1 = 0x3.
	TCCR3A = (1<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0x0<<3) | (0x0<<2) | (0<<WGM31) | (0<<WGM30);
     81a:	80 e8       	ldi	r24, 0x80	; 128
     81c:	80 93 90 00 	sts	0x0090, r24
	//      --^--
	TCCR3B = (0<<ICNC3) | (0<<ICES3) | (0x0<<5) | (0<<WGM33) | (1<<WGM32) | (0<<CS32) | (1<<CS31) | (1<<CS30);
     820:	8b e0       	ldi	r24, 0x0B	; 11
     822:	80 93 91 00 	sts	0x0091, r24
	//                                                        --^--                    --^--       --^--
	// Interrupt Frequency: 10 = f_IO / (prescaler*OCR3A)
	// Set OCR3A appropriately for TOP to generate desired frequency using Y_TIMER_RESOLUTION (100 ms).
	// NOTE: This is not the toggle frequency, rather a tick frequency used to time toggles.
	OCR3A = 0x7A12; //31250
     826:	e8 e9       	ldi	r30, 0x98	; 152
     828:	f0 e0       	ldi	r31, 0x00	; 0
     82a:	82 e1       	ldi	r24, 0x12	; 18
     82c:	9a e7       	ldi	r25, 0x7A	; 122
     82e:	91 83       	std	Z+1, r25	; 0x01
     830:	80 83       	st	Z, r24
	printf("Initializing yellow clock to freq %luHz (period %lu ms)\n",(int)(20,000,000/(1024*OCR3A)),Y_TIMER_RESOLUTION);
     832:	80 81       	ld	r24, Z
     834:	91 81       	ldd	r25, Z+1	; 0x01
     836:	1f 92       	push	r1
     838:	84 e6       	ldi	r24, 0x64	; 100
     83a:	8f 93       	push	r24
     83c:	1f 92       	push	r1
     83e:	1f 92       	push	r1
     840:	83 ec       	ldi	r24, 0xC3	; 195
     842:	92 e0       	ldi	r25, 0x02	; 2
     844:	9f 93       	push	r25
     846:	8f 93       	push	r24
     848:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <printf>

	//Enable output compare match interrupt on timer 3A
	TIMSK3 = (0x0<<7) | (0x0<<6) | (0<<ICIE3) | (0x0<<4) | (0x0<<3) | (0<<OCIE3B) | (1<<OCIE3A) | (0<<TOIE3);
     84c:	c0 93 71 00 	sts	0x0071, r28
	//                                                                             --^--
	G_yellow_ticks = 0;
     850:	10 92 89 03 	sts	0x0389, r1
     854:	10 92 8a 03 	sts	0x038A, r1
     858:	10 92 8b 03 	sts	0x038B, r1
     85c:	10 92 8c 03 	sts	0x038C, r1
	// used to toggle the LED is limited.

	// Using CTC mode with OCR1A for TOP. This is mode 10, thus WGM3/3210 = 1010.
	// Toggle OC1A on a compare match. Thus COM1A_10 = 10
	// Using pre-scaler 1024. This is CS1/2/1/0 = 101
	TCCR1A = (1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0x0<<3) | (0x0<<2) | (1<<WGM11) | (0<<WGM10);
     860:	82 ea       	ldi	r24, 0xA2	; 162
     862:	80 93 80 00 	sts	0x0080, r24
	//      --^--                                                                         --^--
	TCCR1B = (0<<ICNC1) | (0<<ICES1) | (0x0<<5) | (1<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (1<<CS10);
     866:	85 e1       	ldi	r24, 0x15	; 21
     868:	80 93 81 00 	sts	0x0081, r24
	//                                           --^--                     --^--                   --^--

	//// Interrupt Frequency: (?) 51ms = f_IO / (1024*OCR1A)
	//// Set OCR1A appropriately for TOP to generate desired frequency.
	//// NOTE: This IS the toggle frequency.
	printf("green period %lu\n",G_green_period);
     86c:	80 91 2d 01 	lds	r24, 0x012D
     870:	8f 93       	push	r24
     872:	80 91 2c 01 	lds	r24, 0x012C
     876:	8f 93       	push	r24
     878:	80 91 2b 01 	lds	r24, 0x012B
     87c:	8f 93       	push	r24
     87e:	80 91 2a 01 	lds	r24, 0x012A
     882:	8f 93       	push	r24
     884:	8c ef       	ldi	r24, 0xFC	; 252
     886:	92 e0       	ldi	r25, 0x02	; 2
     888:	9f 93       	push	r25
     88a:	8f 93       	push	r24
     88c:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <printf>
	ICR1 = 19 * G_green_period;
     890:	20 91 2a 01 	lds	r18, 0x012A
     894:	30 91 2b 01 	lds	r19, 0x012B
     898:	43 e1       	ldi	r20, 0x13	; 19
     89a:	42 9f       	mul	r20, r18
     89c:	c0 01       	movw	r24, r0
     89e:	43 9f       	mul	r20, r19
     8a0:	90 0d       	add	r25, r0
     8a2:	11 24       	eor	r1, r1
     8a4:	e6 e8       	ldi	r30, 0x86	; 134
     8a6:	f0 e0       	ldi	r31, 0x00	; 0
     8a8:	91 83       	std	Z+1, r25	; 0x01
     8aa:	80 83       	st	Z, r24
	OCR1A = (uint32_t) ICR1 / 2 ;
     8ac:	80 81       	ld	r24, Z
     8ae:	91 81       	ldd	r25, Z+1	; 0x01
     8b0:	96 95       	lsr	r25
     8b2:	87 95       	ror	r24
     8b4:	e8 e8       	ldi	r30, 0x88	; 136
     8b6:	f0 e0       	ldi	r31, 0x00	; 0
     8b8:	91 83       	std	Z+1, r25	; 0x01
     8ba:	80 83       	st	Z, r24
	TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (1<<OCIE1A) | (0<<TOIE1);
     8bc:	c0 93 6f 00 	sts	0x006F, r28
	//                                                                             --^--
	printf("Set OCR1A to %lu\n",OCR1A);
     8c0:	80 81       	ld	r24, Z
     8c2:	91 81       	ldd	r25, Z+1	; 0x01
     8c4:	9f 93       	push	r25
     8c6:	8f 93       	push	r24
     8c8:	8e e0       	ldi	r24, 0x0E	; 14
     8ca:	93 e0       	ldi	r25, 0x03	; 3
     8cc:	9f 93       	push	r25
     8ce:	8f 93       	push	r24
     8d0:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <printf>
	printf("Initializing green clock to freq %luHz (period %lu ms)\n",(int)(51),G_green_period);
     8d4:	80 91 2d 01 	lds	r24, 0x012D
     8d8:	8f 93       	push	r24
     8da:	80 91 2c 01 	lds	r24, 0x012C
     8de:	8f 93       	push	r24
     8e0:	80 91 2b 01 	lds	r24, 0x012B
     8e4:	8f 93       	push	r24
     8e6:	80 91 2a 01 	lds	r24, 0x012A
     8ea:	8f 93       	push	r24
     8ec:	1f 92       	push	r1
     8ee:	83 e3       	ldi	r24, 0x33	; 51
     8f0:	8f 93       	push	r24
     8f2:	80 e2       	ldi	r24, 0x20	; 32
     8f4:	93 e0       	ldi	r25, 0x03	; 3
     8f6:	9f 93       	push	r25
     8f8:	8f 93       	push	r24
     8fa:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <printf>
     8fe:	8d b7       	in	r24, 0x3d	; 61
     900:	9e b7       	in	r25, 0x3e	; 62
     902:	48 96       	adiw	r24, 0x18	; 24
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	9e bf       	out	0x3e, r25	; 62
     90a:	0f be       	out	0x3f, r0	; 63
     90c:	8d bf       	out	0x3d, r24	; 61
	//// A match to this will toggle the green LED.
	//// Regardless of its value (provided it is less than OCR1A), it will match at the frequency of timer 1.
	//OCR1B = 1;

	////Enable output compare match interrupt on timer 1B
}
     90e:	cf 91       	pop	r28
     910:	08 95       	ret

00000912 <__vector_16>:

//INTERRUPT HANDLERS
ISR(TIMER0_COMPA_vect) {
     912:	1f 92       	push	r1
     914:	0f 92       	push	r0
     916:	0f b6       	in	r0, 0x3f	; 63
     918:	0f 92       	push	r0
     91a:	11 24       	eor	r1, r1
     91c:	0b b6       	in	r0, 0x3b	; 59
     91e:	0f 92       	push	r0
     920:	2f 93       	push	r18
     922:	3f 93       	push	r19
     924:	4f 93       	push	r20
     926:	5f 93       	push	r21
     928:	6f 93       	push	r22
     92a:	7f 93       	push	r23
     92c:	8f 93       	push	r24
     92e:	9f 93       	push	r25
     930:	af 93       	push	r26
     932:	bf 93       	push	r27
     934:	ef 93       	push	r30
     936:	ff 93       	push	r31
	// This is the Interrupt Service Routine for Timer0 (10ms clock used for scheduling red).
	// Each time the TCNT count is equal to the OCR0 register, this interrupt is "fired".
	
	G_ms_ticks++; // Increment ticks
     938:	60 91 85 03 	lds	r22, 0x0385
     93c:	70 91 86 03 	lds	r23, 0x0386
     940:	80 91 87 03 	lds	r24, 0x0387
     944:	90 91 88 03 	lds	r25, 0x0388
     948:	6f 5f       	subi	r22, 0xFF	; 255
     94a:	7f 4f       	sbci	r23, 0xFF	; 255
     94c:	8f 4f       	sbci	r24, 0xFF	; 255
     94e:	9f 4f       	sbci	r25, 0xFF	; 255
     950:	60 93 85 03 	sts	0x0385, r22
     954:	70 93 86 03 	sts	0x0386, r23
     958:	80 93 87 03 	sts	0x0387, r24
     95c:	90 93 88 03 	sts	0x0388, r25

	// if time to toggle the RED LED, set flag to release
	if ( ( G_ms_ticks % G_red_period ) == 0 )
     960:	20 91 2e 01 	lds	r18, 0x012E
     964:	30 91 2f 01 	lds	r19, 0x012F
     968:	40 91 30 01 	lds	r20, 0x0130
     96c:	50 91 31 01 	lds	r21, 0x0131
     970:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__udivmodsi4>
     974:	67 2b       	or	r22, r23
     976:	68 2b       	or	r22, r24
     978:	69 2b       	or	r22, r25
     97a:	61 f4       	brne	.+24     	; 0x994 <__vector_16+0x82>
	{
		G_release_red = 1;		
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	a0 e0       	ldi	r26, 0x00	; 0
     982:	b0 e0       	ldi	r27, 0x00	; 0
     984:	80 93 81 03 	sts	0x0381, r24
     988:	90 93 82 03 	sts	0x0382, r25
     98c:	a0 93 83 03 	sts	0x0383, r26
     990:	b0 93 84 03 	sts	0x0384, r27
	}	
}
     994:	ff 91       	pop	r31
     996:	ef 91       	pop	r30
     998:	bf 91       	pop	r27
     99a:	af 91       	pop	r26
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	7f 91       	pop	r23
     9a2:	6f 91       	pop	r22
     9a4:	5f 91       	pop	r21
     9a6:	4f 91       	pop	r20
     9a8:	3f 91       	pop	r19
     9aa:	2f 91       	pop	r18
     9ac:	0f 90       	pop	r0
     9ae:	0b be       	out	0x3b, r0	; 59
     9b0:	0f 90       	pop	r0
     9b2:	0f be       	out	0x3f, r0	; 63
     9b4:	0f 90       	pop	r0
     9b6:	1f 90       	pop	r1
     9b8:	18 95       	reti

000009ba <void_getchar>:
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	08 95       	ret

000009c0 <delayMicroseconds.clone.0>:
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	6f 93       	push	r22
     9c6:	64 e0       	ldi	r22, 0x04	; 4
     9c8:	6a 95       	dec	r22
     9ca:	f1 f7       	brne	.-4      	; 0x9c8 <delayMicroseconds.clone.0+0x8>
     9cc:	6f 91       	pop	r22
     9ce:	01 97       	sbiw	r24, 0x01	; 1
     9d0:	c9 f7       	brne	.-14     	; 0x9c4 <delayMicroseconds.clone.0+0x4>
     9d2:	08 95       	ret

000009d4 <_ZN12OrangutanLCD8busyWaitEv>:
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	17 b1       	in	r17, 0x07	; 7
     9de:	3d 98       	cbi	0x07, 5	; 7
     9e0:	28 98       	cbi	0x05, 0	; 5
     9e2:	29 9a       	sbi	0x05, 1	; 5
     9e4:	c0 e0       	ldi	r28, 0x00	; 0
     9e6:	d0 e0       	ldi	r29, 0x00	; 0
     9e8:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <delayMicroseconds.clone.0>
     9ec:	2a 9a       	sbi	0x05, 2	; 5
     9ee:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <delayMicroseconds.clone.0>
     9f2:	06 b1       	in	r16, 0x06	; 6
     9f4:	2a 98       	cbi	0x05, 2	; 5
     9f6:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <delayMicroseconds.clone.0>
     9fa:	2a 9a       	sbi	0x05, 2	; 5
     9fc:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <delayMicroseconds.clone.0>
     a00:	2a 98       	cbi	0x05, 2	; 5
     a02:	24 96       	adiw	r28, 0x04	; 4
     a04:	05 ff       	sbrs	r16, 5
     a06:	10 c0       	rjmp	.+32     	; 0xa28 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     a08:	9e 01       	movw	r18, r28
     a0a:	40 e0       	ldi	r20, 0x00	; 0
     a0c:	50 e0       	ldi	r21, 0x00	; 0
     a0e:	80 91 5c 03 	lds	r24, 0x035C
     a12:	90 91 5d 03 	lds	r25, 0x035D
     a16:	a0 91 5e 03 	lds	r26, 0x035E
     a1a:	b0 91 5f 03 	lds	r27, 0x035F
     a1e:	28 17       	cp	r18, r24
     a20:	39 07       	cpc	r19, r25
     a22:	4a 07       	cpc	r20, r26
     a24:	5b 07       	cpc	r21, r27
     a26:	00 f3       	brcs	.-64     	; 0x9e8 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     a28:	9e 01       	movw	r18, r28
     a2a:	40 e0       	ldi	r20, 0x00	; 0
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	80 91 5c 03 	lds	r24, 0x035C
     a32:	90 91 5d 03 	lds	r25, 0x035D
     a36:	a0 91 5e 03 	lds	r26, 0x035E
     a3a:	b0 91 5f 03 	lds	r27, 0x035F
     a3e:	28 17       	cp	r18, r24
     a40:	39 07       	cpc	r19, r25
     a42:	4a 07       	cpc	r20, r26
     a44:	5b 07       	cpc	r21, r27
     a46:	28 f0       	brcs	.+10     	; 0xa52 <_ZN12OrangutanLCD8busyWaitEv+0x7e>
     a48:	82 e3       	ldi	r24, 0x32	; 50
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	a0 e0       	ldi	r26, 0x00	; 0
     a4e:	b0 e0       	ldi	r27, 0x00	; 0
     a50:	04 c0       	rjmp	.+8      	; 0xa5a <_ZN12OrangutanLCD8busyWaitEv+0x86>
     a52:	80 e3       	ldi	r24, 0x30	; 48
     a54:	95 e7       	ldi	r25, 0x75	; 117
     a56:	a0 e0       	ldi	r26, 0x00	; 0
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	80 93 5c 03 	sts	0x035C, r24
     a5e:	90 93 5d 03 	sts	0x035D, r25
     a62:	a0 93 5e 03 	sts	0x035E, r26
     a66:	b0 93 5f 03 	sts	0x035F, r27
     a6a:	17 b9       	out	0x07, r17	; 7
     a6c:	df 91       	pop	r29
     a6e:	cf 91       	pop	r28
     a70:	1f 91       	pop	r17
     a72:	0f 91       	pop	r16
     a74:	08 95       	ret

00000a76 <_ZN12OrangutanLCD8sendDataEh>:
     a76:	28 b1       	in	r18, 0x08	; 8
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	8f 70       	andi	r24, 0x0F	; 15
     a7c:	90 70       	andi	r25, 0x00	; 0
     a7e:	88 0f       	add	r24, r24
     a80:	99 1f       	adc	r25, r25
     a82:	88 0f       	add	r24, r24
     a84:	99 1f       	adc	r25, r25
     a86:	23 7c       	andi	r18, 0xC3	; 195
     a88:	28 2b       	or	r18, r24
     a8a:	28 b9       	out	0x08, r18	; 8
     a8c:	2a 9a       	sbi	0x05, 2	; 5
     a8e:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <delayMicroseconds.clone.0>
     a92:	2a 98       	cbi	0x05, 2	; 5
     a94:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <delayMicroseconds.clone.0>
     a98:	08 95       	ret

00000a9a <_ZN12OrangutanLCD4sendEhhh>:
     a9a:	a2 e0       	ldi	r26, 0x02	; 2
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e3 e5       	ldi	r30, 0x53	; 83
     aa0:	f5 e0       	ldi	r31, 0x05	; 5
     aa2:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__prologue_saves__+0x1a>
     aa6:	18 2f       	mov	r17, r24
     aa8:	4a 83       	std	Y+2, r20	; 0x02
     aaa:	69 83       	std	Y+1, r22	; 0x01
     aac:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN12OrangutanLCD4initEv>
     ab0:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN12OrangutanLCD8busyWaitEv>
     ab4:	f7 b0       	in	r15, 0x07	; 7
     ab6:	08 b1       	in	r16, 0x08	; 8
     ab8:	29 98       	cbi	0x05, 1	; 5
     aba:	69 81       	ldd	r22, Y+1	; 0x01
     abc:	4a 81       	ldd	r20, Y+2	; 0x02
     abe:	66 23       	and	r22, r22
     ac0:	11 f0       	breq	.+4      	; 0xac6 <_ZN12OrangutanLCD4sendEhhh+0x2c>
     ac2:	28 9a       	sbi	0x05, 0	; 5
     ac4:	01 c0       	rjmp	.+2      	; 0xac8 <_ZN12OrangutanLCD4sendEhhh+0x2e>
     ac6:	28 98       	cbi	0x05, 0	; 5
     ac8:	87 b1       	in	r24, 0x07	; 7
     aca:	8c 63       	ori	r24, 0x3C	; 60
     acc:	87 b9       	out	0x07, r24	; 7
     ace:	41 30       	cpi	r20, 0x01	; 1
     ad0:	29 f0       	breq	.+10     	; 0xadc <_ZN12OrangutanLCD4sendEhhh+0x42>
     ad2:	81 2f       	mov	r24, r17
     ad4:	82 95       	swap	r24
     ad6:	8f 70       	andi	r24, 0x0F	; 15
     ad8:	0e 94 3b 05 	call	0xa76	; 0xa76 <_ZN12OrangutanLCD8sendDataEh>
     adc:	81 2f       	mov	r24, r17
     ade:	8f 70       	andi	r24, 0x0F	; 15
     ae0:	0e 94 3b 05 	call	0xa76	; 0xa76 <_ZN12OrangutanLCD8sendDataEh>
     ae4:	f7 b8       	out	0x07, r15	; 7
     ae6:	08 b9       	out	0x08, r16	; 8
     ae8:	22 96       	adiw	r28, 0x02	; 2
     aea:	e5 e0       	ldi	r30, 0x05	; 5
     aec:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__epilogue_restores__+0x1a>

00000af0 <_ZN12OrangutanLCD8send_cmdEh>:
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	42 e0       	ldi	r20, 0x02	; 2
     af4:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_ZN12OrangutanLCD4sendEhhh>
     af8:	08 95       	ret

00000afa <_ZN12OrangutanLCD9send_dataEh>:
     afa:	61 e0       	ldi	r22, 0x01	; 1
     afc:	42 e0       	ldi	r20, 0x02	; 2
     afe:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_ZN12OrangutanLCD4sendEhhh>
     b02:	08 95       	ret

00000b04 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     b04:	60 e0       	ldi	r22, 0x00	; 0
     b06:	41 e0       	ldi	r20, 0x01	; 1
     b08:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_ZN12OrangutanLCD4sendEhhh>
     b0c:	08 95       	ret

00000b0e <_ZN12OrangutanLCD5init2Ev>:
     b0e:	3d 98       	cbi	0x07, 5	; 7
     b10:	45 9a       	sbi	0x08, 5	; 8
     b12:	80 e3       	ldi	r24, 0x30	; 48
     b14:	95 e7       	ldi	r25, 0x75	; 117
     b16:	a0 e0       	ldi	r26, 0x00	; 0
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	80 93 5c 03 	sts	0x035C, r24
     b1e:	90 93 5d 03 	sts	0x035D, r25
     b22:	a0 93 5e 03 	sts	0x035E, r26
     b26:	b0 93 5f 03 	sts	0x035F, r27
     b2a:	20 9a       	sbi	0x04, 0	; 4
     b2c:	21 9a       	sbi	0x04, 1	; 4
     b2e:	22 9a       	sbi	0x04, 2	; 4
     b30:	8e e1       	ldi	r24, 0x1E	; 30
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <delay_ms>
     b38:	83 e0       	ldi	r24, 0x03	; 3
     b3a:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     b3e:	86 e0       	ldi	r24, 0x06	; 6
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <delay_ms>
     b46:	83 e0       	ldi	r24, 0x03	; 3
     b48:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     b4c:	82 e0       	ldi	r24, 0x02	; 2
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <delay_ms>
     b54:	83 e0       	ldi	r24, 0x03	; 3
     b56:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     b5a:	82 e0       	ldi	r24, 0x02	; 2
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <delay_ms>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     b68:	82 e0       	ldi	r24, 0x02	; 2
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <delay_ms>
     b70:	88 e2       	ldi	r24, 0x28	; 40
     b72:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     b76:	88 e0       	ldi	r24, 0x08	; 8
     b78:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     b7c:	81 e0       	ldi	r24, 0x01	; 1
     b7e:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     b82:	86 e0       	ldi	r24, 0x06	; 6
     b84:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     b88:	8c e0       	ldi	r24, 0x0C	; 12
     b8a:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     b8e:	08 95       	ret

00000b90 <_ZN12OrangutanLCD4initEv>:
     b90:	80 91 60 03 	lds	r24, 0x0360
     b94:	88 23       	and	r24, r24
     b96:	29 f4       	brne	.+10     	; 0xba2 <_ZN12OrangutanLCD4initEv+0x12>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	80 93 60 03 	sts	0x0360, r24
     b9e:	0e 94 87 05 	call	0xb0e	; 0xb0e <_ZN12OrangutanLCD5init2Ev>
     ba2:	08 95       	ret

00000ba4 <_ZN12OrangutanLCD5clearEv>:
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     baa:	80 91 58 03 	lds	r24, 0x0358
     bae:	90 91 59 03 	lds	r25, 0x0359
     bb2:	00 97       	sbiw	r24, 0x00	; 0
     bb4:	11 f1       	breq	.+68     	; 0xbfa <_ZN12OrangutanLCD5clearEv+0x56>
     bb6:	a0 e0       	ldi	r26, 0x00	; 0
     bb8:	b0 e2       	ldi	r27, 0x20	; 32
     bba:	08 c0       	rjmp	.+16     	; 0xbcc <_ZN12OrangutanLCD5clearEv+0x28>
     bbc:	e0 91 58 03 	lds	r30, 0x0358
     bc0:	f0 91 59 03 	lds	r31, 0x0359
     bc4:	e2 0f       	add	r30, r18
     bc6:	f3 1f       	adc	r31, r19
     bc8:	b0 83       	st	Z, r27
     bca:	af 5f       	subi	r26, 0xFF	; 255
     bcc:	2a 2f       	mov	r18, r26
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	80 91 00 01 	lds	r24, 0x0100
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	01 97       	sbiw	r24, 0x01	; 1
     bd8:	60 91 01 01 	lds	r22, 0x0101
     bdc:	70 e0       	ldi	r23, 0x00	; 0
     bde:	86 9f       	mul	r24, r22
     be0:	a0 01       	movw	r20, r0
     be2:	87 9f       	mul	r24, r23
     be4:	50 0d       	add	r21, r0
     be6:	96 9f       	mul	r25, r22
     be8:	50 0d       	add	r21, r0
     bea:	11 24       	eor	r1, r1
     bec:	24 17       	cp	r18, r20
     bee:	35 07       	cpc	r19, r21
     bf0:	2c f3       	brlt	.-54     	; 0xbbc <_ZN12OrangutanLCD5clearEv+0x18>
     bf2:	10 92 5b 03 	sts	0x035B, r1
     bf6:	10 92 5a 03 	sts	0x035A, r1
     bfa:	08 95       	ret

00000bfc <clear>:
     bfc:	0e 94 d2 05 	call	0xba4	; 0xba4 <_ZN12OrangutanLCD5clearEv>
     c00:	08 95       	ret

00000c02 <_ZN12OrangutanLCD5printEPKc>:
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	cf 93       	push	r28
     c08:	df 93       	push	r29
     c0a:	e8 2e       	mov	r14, r24
     c0c:	e7 01       	movw	r28, r14
     c0e:	7e 01       	movw	r14, r28
     c10:	f9 2e       	mov	r15, r25
     c12:	e7 01       	movw	r28, r14
     c14:	02 c0       	rjmp	.+4      	; 0xc1a <_ZN12OrangutanLCD5printEPKc+0x18>
     c16:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN12OrangutanLCD9send_dataEh>
     c1a:	89 91       	ld	r24, Y+
     c1c:	88 23       	and	r24, r24
     c1e:	d9 f7       	brne	.-10     	; 0xc16 <_ZN12OrangutanLCD5printEPKc+0x14>
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	ff 90       	pop	r15
     c26:	ef 90       	pop	r14
     c28:	08 95       	ret

00000c2a <print>:
     c2a:	0e 94 01 06 	call	0xc02	; 0xc02 <_ZN12OrangutanLCD5printEPKc>
     c2e:	08 95       	ret

00000c30 <_ZN12OrangutanLCD6gotoXYEhh>:
     c30:	a5 e0       	ldi	r26, 0x05	; 5
     c32:	b0 e0       	ldi	r27, 0x00	; 0
     c34:	ee e1       	ldi	r30, 0x1E	; 30
     c36:	f6 e0       	ldi	r31, 0x06	; 6
     c38:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__prologue_saves__+0x1e>
     c3c:	18 2f       	mov	r17, r24
     c3e:	80 e8       	ldi	r24, 0x80	; 128
     c40:	89 83       	std	Y+1, r24	; 0x01
     c42:	80 ec       	ldi	r24, 0xC0	; 192
     c44:	8a 83       	std	Y+2, r24	; 0x02
     c46:	84 e9       	ldi	r24, 0x94	; 148
     c48:	8b 83       	std	Y+3, r24	; 0x03
     c4a:	84 ed       	ldi	r24, 0xD4	; 212
     c4c:	8c 83       	std	Y+4, r24	; 0x04
     c4e:	fe 01       	movw	r30, r28
     c50:	e6 0f       	add	r30, r22
     c52:	f1 1d       	adc	r31, r1
     c54:	81 81       	ldd	r24, Z+1	; 0x01
     c56:	81 0f       	add	r24, r17
     c58:	6d 83       	std	Y+5, r22	; 0x05
     c5a:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN12OrangutanLCD8send_cmdEh>
     c5e:	10 93 5b 03 	sts	0x035B, r17
     c62:	6d 81       	ldd	r22, Y+5	; 0x05
     c64:	60 93 5a 03 	sts	0x035A, r22
     c68:	25 96       	adiw	r28, 0x05	; 5
     c6a:	e3 e0       	ldi	r30, 0x03	; 3
     c6c:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__epilogue_restores__+0x1e>

00000c70 <lcd_putchar>:
     c70:	a0 e0       	ldi	r26, 0x00	; 0
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	ee e3       	ldi	r30, 0x3E	; 62
     c76:	f6 e0       	ldi	r31, 0x06	; 6
     c78:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <__prologue_saves__+0x14>
     c7c:	d8 2e       	mov	r13, r24
     c7e:	80 91 58 03 	lds	r24, 0x0358
     c82:	90 91 59 03 	lds	r25, 0x0359
     c86:	00 97       	sbiw	r24, 0x00	; 0
     c88:	09 f4       	brne	.+2      	; 0xc8c <lcd_putchar+0x1c>
     c8a:	fa c0       	rjmp	.+500    	; 0xe80 <lcd_putchar+0x210>
     c8c:	2d 2d       	mov	r18, r13
     c8e:	2a 30       	cpi	r18, 0x0A	; 10
     c90:	09 f4       	brne	.+2      	; 0xc94 <lcd_putchar+0x24>
     c92:	43 c0       	rjmp	.+134    	; 0xd1a <lcd_putchar+0xaa>
     c94:	28 30       	cpi	r18, 0x08	; 8
     c96:	c9 f4       	brne	.+50     	; 0xcca <lcd_putchar+0x5a>
     c98:	80 91 5b 03 	lds	r24, 0x035B
     c9c:	81 50       	subi	r24, 0x01	; 1
     c9e:	80 93 5b 03 	sts	0x035B, r24
     ca2:	8f 3f       	cpi	r24, 0xFF	; 255
     ca4:	51 f4       	brne	.+20     	; 0xcba <lcd_putchar+0x4a>
     ca6:	80 91 5a 03 	lds	r24, 0x035A
     caa:	81 50       	subi	r24, 0x01	; 1
     cac:	80 93 5a 03 	sts	0x035A, r24
     cb0:	80 91 01 01 	lds	r24, 0x0101
     cb4:	81 50       	subi	r24, 0x01	; 1
     cb6:	80 93 5b 03 	sts	0x035B, r24
     cba:	80 91 5a 03 	lds	r24, 0x035A
     cbe:	8f 3f       	cpi	r24, 0xFF	; 255
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <lcd_putchar+0x54>
     cc2:	d8 c0       	rjmp	.+432    	; 0xe74 <lcd_putchar+0x204>
     cc4:	10 92 5a 03 	sts	0x035A, r1
     cc8:	d3 c0       	rjmp	.+422    	; 0xe70 <lcd_putchar+0x200>
     cca:	8d 2d       	mov	r24, r13
     ccc:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN12OrangutanLCD9send_dataEh>
     cd0:	80 91 5a 03 	lds	r24, 0x035A
     cd4:	88 23       	and	r24, r24
     cd6:	b9 f0       	breq	.+46     	; 0xd06 <lcd_putchar+0x96>
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	01 97       	sbiw	r24, 0x01	; 1
     cdc:	40 91 01 01 	lds	r20, 0x0101
     ce0:	50 e0       	ldi	r21, 0x00	; 0
     ce2:	84 9f       	mul	r24, r20
     ce4:	90 01       	movw	r18, r0
     ce6:	85 9f       	mul	r24, r21
     ce8:	30 0d       	add	r19, r0
     cea:	94 9f       	mul	r25, r20
     cec:	30 0d       	add	r19, r0
     cee:	11 24       	eor	r1, r1
     cf0:	80 91 5b 03 	lds	r24, 0x035B
     cf4:	e0 91 58 03 	lds	r30, 0x0358
     cf8:	f0 91 59 03 	lds	r31, 0x0359
     cfc:	e2 0f       	add	r30, r18
     cfe:	f3 1f       	adc	r31, r19
     d00:	e8 0f       	add	r30, r24
     d02:	f1 1d       	adc	r31, r1
     d04:	d0 82       	st	Z, r13
     d06:	80 91 5b 03 	lds	r24, 0x035B
     d0a:	8f 5f       	subi	r24, 0xFF	; 255
     d0c:	80 93 5b 03 	sts	0x035B, r24
     d10:	90 91 01 01 	lds	r25, 0x0101
     d14:	89 17       	cp	r24, r25
     d16:	09 f0       	breq	.+2      	; 0xd1a <lcd_putchar+0xaa>
     d18:	b3 c0       	rjmp	.+358    	; 0xe80 <lcd_putchar+0x210>
     d1a:	40 91 5a 03 	lds	r20, 0x035A
     d1e:	24 2f       	mov	r18, r20
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	80 91 00 01 	lds	r24, 0x0100
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	01 97       	sbiw	r24, 0x01	; 1
     d2a:	28 17       	cp	r18, r24
     d2c:	39 07       	cpc	r19, r25
     d2e:	09 f0       	breq	.+2      	; 0xd32 <lcd_putchar+0xc2>
     d30:	9c c0       	rjmp	.+312    	; 0xe6a <lcd_putchar+0x1fa>
     d32:	c0 e0       	ldi	r28, 0x00	; 0
     d34:	d0 e0       	ldi	r29, 0x00	; 0
     d36:	41 c0       	rjmp	.+130    	; 0xdba <lcd_putchar+0x14a>
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	6c 2f       	mov	r22, r28
     d3c:	0e 94 18 06 	call	0xc30	; 0xc30 <_ZN12OrangutanLCD6gotoXYEhh>
     d40:	cc 24       	eor	r12, r12
     d42:	8e 01       	movw	r16, r28
     d44:	0f 5f       	subi	r16, 0xFF	; 255
     d46:	1f 4f       	sbci	r17, 0xFF	; 255
     d48:	33 c0       	rjmp	.+102    	; 0xdb0 <lcd_putchar+0x140>
     d4a:	ec 2c       	mov	r14, r12
     d4c:	ff 24       	eor	r15, r15
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	c2 9f       	mul	r28, r18
     d52:	c0 01       	movw	r24, r0
     d54:	c3 9f       	mul	r28, r19
     d56:	90 0d       	add	r25, r0
     d58:	d2 9f       	mul	r29, r18
     d5a:	90 0d       	add	r25, r0
     d5c:	11 24       	eor	r1, r1
     d5e:	e0 91 58 03 	lds	r30, 0x0358
     d62:	f0 91 59 03 	lds	r31, 0x0359
     d66:	ee 0d       	add	r30, r14
     d68:	ff 1d       	adc	r31, r15
     d6a:	e8 0f       	add	r30, r24
     d6c:	f9 1f       	adc	r31, r25
     d6e:	80 81       	ld	r24, Z
     d70:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN12OrangutanLCD9send_dataEh>
     d74:	80 91 58 03 	lds	r24, 0x0358
     d78:	90 91 59 03 	lds	r25, 0x0359
     d7c:	20 91 01 01 	lds	r18, 0x0101
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	c2 9f       	mul	r28, r18
     d84:	f0 01       	movw	r30, r0
     d86:	c3 9f       	mul	r28, r19
     d88:	f0 0d       	add	r31, r0
     d8a:	d2 9f       	mul	r29, r18
     d8c:	f0 0d       	add	r31, r0
     d8e:	11 24       	eor	r1, r1
     d90:	8e 0d       	add	r24, r14
     d92:	9f 1d       	adc	r25, r15
     d94:	e8 0f       	add	r30, r24
     d96:	f9 1f       	adc	r31, r25
     d98:	02 9f       	mul	r16, r18
     d9a:	d0 01       	movw	r26, r0
     d9c:	03 9f       	mul	r16, r19
     d9e:	b0 0d       	add	r27, r0
     da0:	12 9f       	mul	r17, r18
     da2:	b0 0d       	add	r27, r0
     da4:	11 24       	eor	r1, r1
     da6:	a8 0f       	add	r26, r24
     da8:	b9 1f       	adc	r27, r25
     daa:	8c 91       	ld	r24, X
     dac:	80 83       	st	Z, r24
     dae:	c3 94       	inc	r12
     db0:	20 91 01 01 	lds	r18, 0x0101
     db4:	c2 16       	cp	r12, r18
     db6:	48 f2       	brcs	.-110    	; 0xd4a <lcd_putchar+0xda>
     db8:	e8 01       	movw	r28, r16
     dba:	60 91 00 01 	lds	r22, 0x0100
     dbe:	86 2f       	mov	r24, r22
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	02 97       	sbiw	r24, 0x02	; 2
     dc4:	c8 17       	cp	r28, r24
     dc6:	d9 07       	cpc	r29, r25
     dc8:	0c f4       	brge	.+2      	; 0xdcc <lcd_putchar+0x15c>
     dca:	b6 cf       	rjmp	.-148    	; 0xd38 <lcd_putchar+0xc8>
     dcc:	62 30       	cpi	r22, 0x02	; 2
     dce:	e0 f1       	brcs	.+120    	; 0xe48 <lcd_putchar+0x1d8>
     dd0:	62 50       	subi	r22, 0x02	; 2
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	0e 94 18 06 	call	0xc30	; 0xc30 <_ZN12OrangutanLCD6gotoXYEhh>
     dd8:	00 e0       	ldi	r16, 0x00	; 0
     dda:	10 e2       	ldi	r17, 0x20	; 32
     ddc:	31 c0       	rjmp	.+98     	; 0xe40 <lcd_putchar+0x1d0>
     dde:	c0 2f       	mov	r28, r16
     de0:	d0 e0       	ldi	r29, 0x00	; 0
     de2:	80 91 00 01 	lds	r24, 0x0100
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	02 97       	sbiw	r24, 0x02	; 2
     dea:	50 e0       	ldi	r21, 0x00	; 0
     dec:	84 9f       	mul	r24, r20
     dee:	90 01       	movw	r18, r0
     df0:	85 9f       	mul	r24, r21
     df2:	30 0d       	add	r19, r0
     df4:	94 9f       	mul	r25, r20
     df6:	30 0d       	add	r19, r0
     df8:	11 24       	eor	r1, r1
     dfa:	e0 91 58 03 	lds	r30, 0x0358
     dfe:	f0 91 59 03 	lds	r31, 0x0359
     e02:	ec 0f       	add	r30, r28
     e04:	fd 1f       	adc	r31, r29
     e06:	e2 0f       	add	r30, r18
     e08:	f3 1f       	adc	r31, r19
     e0a:	80 81       	ld	r24, Z
     e0c:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN12OrangutanLCD9send_dataEh>
     e10:	80 91 00 01 	lds	r24, 0x0100
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	02 97       	sbiw	r24, 0x02	; 2
     e18:	40 91 01 01 	lds	r20, 0x0101
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	84 9f       	mul	r24, r20
     e20:	90 01       	movw	r18, r0
     e22:	85 9f       	mul	r24, r21
     e24:	30 0d       	add	r19, r0
     e26:	94 9f       	mul	r25, r20
     e28:	30 0d       	add	r19, r0
     e2a:	11 24       	eor	r1, r1
     e2c:	e0 91 58 03 	lds	r30, 0x0358
     e30:	f0 91 59 03 	lds	r31, 0x0359
     e34:	ec 0f       	add	r30, r28
     e36:	fd 1f       	adc	r31, r29
     e38:	e2 0f       	add	r30, r18
     e3a:	f3 1f       	adc	r31, r19
     e3c:	10 83       	st	Z, r17
     e3e:	0f 5f       	subi	r16, 0xFF	; 255
     e40:	40 91 01 01 	lds	r20, 0x0101
     e44:	04 17       	cp	r16, r20
     e46:	58 f2       	brcs	.-106    	; 0xdde <lcd_putchar+0x16e>
     e48:	60 91 00 01 	lds	r22, 0x0100
     e4c:	61 50       	subi	r22, 0x01	; 1
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	0e 94 18 06 	call	0xc30	; 0xc30 <_ZN12OrangutanLCD6gotoXYEhh>
     e54:	10 e0       	ldi	r17, 0x00	; 0
     e56:	04 c0       	rjmp	.+8      	; 0xe60 <lcd_putchar+0x1f0>
     e58:	80 e2       	ldi	r24, 0x20	; 32
     e5a:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN12OrangutanLCD9send_dataEh>
     e5e:	1f 5f       	subi	r17, 0xFF	; 255
     e60:	80 91 01 01 	lds	r24, 0x0101
     e64:	18 17       	cp	r17, r24
     e66:	c0 f3       	brcs	.-16     	; 0xe58 <lcd_putchar+0x1e8>
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <lcd_putchar+0x200>
     e6a:	4f 5f       	subi	r20, 0xFF	; 255
     e6c:	40 93 5a 03 	sts	0x035A, r20
     e70:	10 92 5b 03 	sts	0x035B, r1
     e74:	80 91 5b 03 	lds	r24, 0x035B
     e78:	60 91 5a 03 	lds	r22, 0x035A
     e7c:	0e 94 18 06 	call	0xc30	; 0xc30 <_ZN12OrangutanLCD6gotoXYEhh>
     e80:	2d 2d       	mov	r18, r13
     e82:	33 27       	eor	r19, r19
     e84:	27 fd       	sbrc	r18, 7
     e86:	30 95       	com	r19
     e88:	c9 01       	movw	r24, r18
     e8a:	cd b7       	in	r28, 0x3d	; 61
     e8c:	de b7       	in	r29, 0x3e	; 62
     e8e:	e8 e0       	ldi	r30, 0x08	; 8
     e90:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__epilogue_restores__+0x14>

00000e94 <_ZN12OrangutanLCD10initPrintfEv>:
     e94:	80 91 58 03 	lds	r24, 0x0358
     e98:	90 91 59 03 	lds	r25, 0x0359
     e9c:	00 97       	sbiw	r24, 0x00	; 0
     e9e:	11 f0       	breq	.+4      	; 0xea4 <_ZN12OrangutanLCD10initPrintfEv+0x10>
     ea0:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <free>
     ea4:	20 91 00 01 	lds	r18, 0x0100
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	21 50       	subi	r18, 0x01	; 1
     eac:	30 40       	sbci	r19, 0x00	; 0
     eae:	80 91 01 01 	lds	r24, 0x0101
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	ac 01       	movw	r20, r24
     eb6:	24 9f       	mul	r18, r20
     eb8:	c0 01       	movw	r24, r0
     eba:	25 9f       	mul	r18, r21
     ebc:	90 0d       	add	r25, r0
     ebe:	34 9f       	mul	r19, r20
     ec0:	90 0d       	add	r25, r0
     ec2:	11 24       	eor	r1, r1
     ec4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <malloc>
     ec8:	90 93 59 03 	sts	0x0359, r25
     ecc:	80 93 58 03 	sts	0x0358, r24
     ed0:	00 97       	sbiw	r24, 0x00	; 0
     ed2:	21 f1       	breq	.+72     	; 0xf1c <_ZN12OrangutanLCD10initPrintfEv+0x88>
     ed4:	a0 e0       	ldi	r26, 0x00	; 0
     ed6:	b0 e2       	ldi	r27, 0x20	; 32
     ed8:	08 c0       	rjmp	.+16     	; 0xeea <_ZN12OrangutanLCD10initPrintfEv+0x56>
     eda:	e0 91 58 03 	lds	r30, 0x0358
     ede:	f0 91 59 03 	lds	r31, 0x0359
     ee2:	e2 0f       	add	r30, r18
     ee4:	f3 1f       	adc	r31, r19
     ee6:	b0 83       	st	Z, r27
     ee8:	af 5f       	subi	r26, 0xFF	; 255
     eea:	2a 2f       	mov	r18, r26
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	80 91 00 01 	lds	r24, 0x0100
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	01 97       	sbiw	r24, 0x01	; 1
     ef6:	60 91 01 01 	lds	r22, 0x0101
     efa:	70 e0       	ldi	r23, 0x00	; 0
     efc:	86 9f       	mul	r24, r22
     efe:	a0 01       	movw	r20, r0
     f00:	87 9f       	mul	r24, r23
     f02:	50 0d       	add	r21, r0
     f04:	96 9f       	mul	r25, r22
     f06:	50 0d       	add	r21, r0
     f08:	11 24       	eor	r1, r1
     f0a:	24 17       	cp	r18, r20
     f0c:	35 07       	cpc	r19, r21
     f0e:	2c f3       	brlt	.-54     	; 0xeda <_ZN12OrangutanLCD10initPrintfEv+0x46>
     f10:	88 e3       	ldi	r24, 0x38	; 56
     f12:	96 e0       	ldi	r25, 0x06	; 6
     f14:	6d ed       	ldi	r22, 0xDD	; 221
     f16:	74 e0       	ldi	r23, 0x04	; 4
     f18:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fdevopen>
     f1c:	08 95       	ret

00000f1e <lcd_init_printf>:
     f1e:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN12OrangutanLCD10initPrintfEv>
     f22:	08 95       	ret

00000f24 <serial_get_received_bytes>:
     f24:	28 2f       	mov	r18, r24
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	f9 01       	movw	r30, r18
     f2a:	ee 0f       	add	r30, r30
     f2c:	ff 1f       	adc	r31, r31
     f2e:	43 e0       	ldi	r20, 0x03	; 3
     f30:	22 0f       	add	r18, r18
     f32:	33 1f       	adc	r19, r19
     f34:	4a 95       	dec	r20
     f36:	e1 f7       	brne	.-8      	; 0xf30 <serial_get_received_bytes+0xc>
     f38:	e2 0f       	add	r30, r18
     f3a:	f3 1f       	adc	r31, r19
     f3c:	ee 5f       	subi	r30, 0xFE	; 254
     f3e:	fe 4f       	sbci	r31, 0xFE	; 254
     f40:	82 81       	ldd	r24, Z+2	; 0x02
     f42:	08 95       	ret

00000f44 <serial_send_buffer_empty>:
     f44:	28 2f       	mov	r18, r24
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	f9 01       	movw	r30, r18
     f4a:	ee 0f       	add	r30, r30
     f4c:	ff 1f       	adc	r31, r31
     f4e:	73 e0       	ldi	r23, 0x03	; 3
     f50:	22 0f       	add	r18, r18
     f52:	33 1f       	adc	r19, r19
     f54:	7a 95       	dec	r23
     f56:	e1 f7       	brne	.-8      	; 0xf50 <serial_send_buffer_empty+0xc>
     f58:	e2 0f       	add	r30, r18
     f5a:	f3 1f       	adc	r31, r19
     f5c:	ee 5f       	subi	r30, 0xFE	; 254
     f5e:	fe 4f       	sbci	r31, 0xFE	; 254
     f60:	41 81       	ldd	r20, Z+1	; 0x01
     f62:	28 2f       	mov	r18, r24
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	f9 01       	movw	r30, r18
     f68:	ee 0f       	add	r30, r30
     f6a:	ff 1f       	adc	r31, r31
     f6c:	53 e0       	ldi	r21, 0x03	; 3
     f6e:	22 0f       	add	r18, r18
     f70:	33 1f       	adc	r19, r19
     f72:	5a 95       	dec	r21
     f74:	e1 f7       	brne	.-8      	; 0xf6e <serial_send_buffer_empty+0x2a>
     f76:	e2 0f       	add	r30, r18
     f78:	f3 1f       	adc	r31, r19
     f7a:	ee 5f       	subi	r30, 0xFE	; 254
     f7c:	fe 4f       	sbci	r31, 0xFE	; 254
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	93 81       	ldd	r25, Z+3	; 0x03
     f82:	49 13       	cpse	r20, r25
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	08 95       	ret

00000f88 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
     f88:	28 2f       	mov	r18, r24
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	f9 01       	movw	r30, r18
     f8e:	ee 0f       	add	r30, r30
     f90:	ff 1f       	adc	r31, r31
     f92:	b3 e0       	ldi	r27, 0x03	; 3
     f94:	22 0f       	add	r18, r18
     f96:	33 1f       	adc	r19, r19
     f98:	ba 95       	dec	r27
     f9a:	e1 f7       	brne	.-8      	; 0xf94 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xc>
     f9c:	e2 0f       	add	r30, r18
     f9e:	f3 1f       	adc	r31, r19
     fa0:	ee 5f       	subi	r30, 0xFE	; 254
     fa2:	fe 4f       	sbci	r31, 0xFE	; 254
     fa4:	40 85       	ldd	r20, Z+8	; 0x08
     fa6:	51 85       	ldd	r21, Z+9	; 0x09
     fa8:	41 15       	cp	r20, r1
     faa:	51 05       	cpc	r21, r1
     fac:	09 f4       	brne	.+2      	; 0xfb0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x28>
     fae:	52 c0       	rjmp	.+164    	; 0x1054 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
     fb0:	28 2f       	mov	r18, r24
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	f9 01       	movw	r30, r18
     fb6:	ee 0f       	add	r30, r30
     fb8:	ff 1f       	adc	r31, r31
     fba:	73 e0       	ldi	r23, 0x03	; 3
     fbc:	22 0f       	add	r18, r18
     fbe:	33 1f       	adc	r19, r19
     fc0:	7a 95       	dec	r23
     fc2:	e1 f7       	brne	.-8      	; 0xfbc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x34>
     fc4:	e2 0f       	add	r30, r18
     fc6:	f3 1f       	adc	r31, r19
     fc8:	ee 5f       	subi	r30, 0xFE	; 254
     fca:	fe 4f       	sbci	r31, 0xFE	; 254
     fcc:	72 81       	ldd	r23, Z+2	; 0x02
     fce:	28 2f       	mov	r18, r24
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	f9 01       	movw	r30, r18
     fd4:	ee 0f       	add	r30, r30
     fd6:	ff 1f       	adc	r31, r31
     fd8:	b3 e0       	ldi	r27, 0x03	; 3
     fda:	22 0f       	add	r18, r18
     fdc:	33 1f       	adc	r19, r19
     fde:	ba 95       	dec	r27
     fe0:	e1 f7       	brne	.-8      	; 0xfda <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
     fe2:	e2 0f       	add	r30, r18
     fe4:	f3 1f       	adc	r31, r19
     fe6:	ee 5f       	subi	r30, 0xFE	; 254
     fe8:	fe 4f       	sbci	r31, 0xFE	; 254
     fea:	94 81       	ldd	r25, Z+4	; 0x04
     fec:	79 17       	cp	r23, r25
     fee:	90 f5       	brcc	.+100    	; 0x1054 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
     ff0:	28 2f       	mov	r18, r24
     ff2:	30 e0       	ldi	r19, 0x00	; 0
     ff4:	f9 01       	movw	r30, r18
     ff6:	ee 0f       	add	r30, r30
     ff8:	ff 1f       	adc	r31, r31
     ffa:	73 e0       	ldi	r23, 0x03	; 3
     ffc:	22 0f       	add	r18, r18
     ffe:	33 1f       	adc	r19, r19
    1000:	7a 95       	dec	r23
    1002:	e1 f7       	brne	.-8      	; 0xffc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x74>
    1004:	e2 0f       	add	r30, r18
    1006:	f3 1f       	adc	r31, r19
    1008:	ee 5f       	subi	r30, 0xFE	; 254
    100a:	fe 4f       	sbci	r31, 0xFE	; 254
    100c:	92 81       	ldd	r25, Z+2	; 0x02
    100e:	49 0f       	add	r20, r25
    1010:	51 1d       	adc	r21, r1
    1012:	fa 01       	movw	r30, r20
    1014:	60 83       	st	Z, r22
    1016:	28 2f       	mov	r18, r24
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	f9 01       	movw	r30, r18
    101c:	ee 0f       	add	r30, r30
    101e:	ff 1f       	adc	r31, r31
    1020:	53 e0       	ldi	r21, 0x03	; 3
    1022:	22 0f       	add	r18, r18
    1024:	33 1f       	adc	r19, r19
    1026:	5a 95       	dec	r21
    1028:	e1 f7       	brne	.-8      	; 0x1022 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x9a>
    102a:	e2 0f       	add	r30, r18
    102c:	f3 1f       	adc	r31, r19
    102e:	ee 5f       	subi	r30, 0xFE	; 254
    1030:	fe 4f       	sbci	r31, 0xFE	; 254
    1032:	92 81       	ldd	r25, Z+2	; 0x02
    1034:	9f 5f       	subi	r25, 0xFF	; 255
    1036:	28 2f       	mov	r18, r24
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	f9 01       	movw	r30, r18
    103c:	ee 0f       	add	r30, r30
    103e:	ff 1f       	adc	r31, r31
    1040:	b3 e0       	ldi	r27, 0x03	; 3
    1042:	22 0f       	add	r18, r18
    1044:	33 1f       	adc	r19, r19
    1046:	ba 95       	dec	r27
    1048:	e1 f7       	brne	.-8      	; 0x1042 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xba>
    104a:	e2 0f       	add	r30, r18
    104c:	f3 1f       	adc	r31, r19
    104e:	ee 5f       	subi	r30, 0xFE	; 254
    1050:	fe 4f       	sbci	r31, 0xFE	; 254
    1052:	92 83       	std	Z+2, r25	; 0x02
    1054:	28 2f       	mov	r18, r24
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	f9 01       	movw	r30, r18
    105a:	ee 0f       	add	r30, r30
    105c:	ff 1f       	adc	r31, r31
    105e:	73 e0       	ldi	r23, 0x03	; 3
    1060:	22 0f       	add	r18, r18
    1062:	33 1f       	adc	r19, r19
    1064:	7a 95       	dec	r23
    1066:	e1 f7       	brne	.-8      	; 0x1060 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xd8>
    1068:	e2 0f       	add	r30, r18
    106a:	f3 1f       	adc	r31, r19
    106c:	ee 5f       	subi	r30, 0xFE	; 254
    106e:	fe 4f       	sbci	r31, 0xFE	; 254
    1070:	42 81       	ldd	r20, Z+2	; 0x02
    1072:	28 2f       	mov	r18, r24
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	f9 01       	movw	r30, r18
    1078:	ee 0f       	add	r30, r30
    107a:	ff 1f       	adc	r31, r31
    107c:	53 e0       	ldi	r21, 0x03	; 3
    107e:	22 0f       	add	r18, r18
    1080:	33 1f       	adc	r19, r19
    1082:	5a 95       	dec	r21
    1084:	e1 f7       	brne	.-8      	; 0x107e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xf6>
    1086:	e2 0f       	add	r30, r18
    1088:	f3 1f       	adc	r31, r19
    108a:	ee 5f       	subi	r30, 0xFE	; 254
    108c:	fe 4f       	sbci	r31, 0xFE	; 254
    108e:	94 81       	ldd	r25, Z+4	; 0x04
    1090:	49 17       	cp	r20, r25
    1092:	01 f5       	brne	.+64     	; 0x10d4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
    1094:	28 2f       	mov	r18, r24
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	f9 01       	movw	r30, r18
    109a:	ee 0f       	add	r30, r30
    109c:	ff 1f       	adc	r31, r31
    109e:	93 e0       	ldi	r25, 0x03	; 3
    10a0:	22 0f       	add	r18, r18
    10a2:	33 1f       	adc	r19, r19
    10a4:	9a 95       	dec	r25
    10a6:	e1 f7       	brne	.-8      	; 0x10a0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x118>
    10a8:	e2 0f       	add	r30, r18
    10aa:	f3 1f       	adc	r31, r19
    10ac:	ee 5f       	subi	r30, 0xFE	; 254
    10ae:	fe 4f       	sbci	r31, 0xFE	; 254
    10b0:	95 81       	ldd	r25, Z+5	; 0x05
    10b2:	99 23       	and	r25, r25
    10b4:	79 f0       	breq	.+30     	; 0x10d4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
    10b6:	28 2f       	mov	r18, r24
    10b8:	30 e0       	ldi	r19, 0x00	; 0
    10ba:	f9 01       	movw	r30, r18
    10bc:	ee 0f       	add	r30, r30
    10be:	ff 1f       	adc	r31, r31
    10c0:	b3 e0       	ldi	r27, 0x03	; 3
    10c2:	22 0f       	add	r18, r18
    10c4:	33 1f       	adc	r19, r19
    10c6:	ba 95       	dec	r27
    10c8:	e1 f7       	brne	.-8      	; 0x10c2 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x13a>
    10ca:	e2 0f       	add	r30, r18
    10cc:	f3 1f       	adc	r31, r19
    10ce:	ee 5f       	subi	r30, 0xFE	; 254
    10d0:	fe 4f       	sbci	r31, 0xFE	; 254
    10d2:	12 82       	std	Z+2, r1	; 0x02
    10d4:	08 95       	ret

000010d6 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    10d6:	0f 93       	push	r16
    10d8:	1f 93       	push	r17
    10da:	18 2f       	mov	r17, r24
    10dc:	82 30       	cpi	r24, 0x02	; 2
    10de:	09 f4       	brne	.+2      	; 0x10e2 <_ZN15OrangutanSerial15serial_rx_checkEh+0xc>
    10e0:	75 c0       	rjmp	.+234    	; 0x11cc <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    10e2:	88 23       	and	r24, r24
    10e4:	19 f4       	brne	.+6      	; 0x10ec <_ZN15OrangutanSerial15serial_rx_checkEh+0x16>
    10e6:	e1 ec       	ldi	r30, 0xC1	; 193
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <_ZN15OrangutanSerial15serial_rx_checkEh+0x1a>
    10ec:	e9 ec       	ldi	r30, 0xC9	; 201
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	80 81       	ld	r24, Z
    10f2:	8f 77       	andi	r24, 0x7F	; 127
    10f4:	80 83       	st	Z, r24
    10f6:	81 2f       	mov	r24, r17
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	fc 01       	movw	r30, r24
    10fc:	ee 0f       	add	r30, r30
    10fe:	ff 1f       	adc	r31, r31
    1100:	03 e0       	ldi	r16, 0x03	; 3
    1102:	88 0f       	add	r24, r24
    1104:	99 1f       	adc	r25, r25
    1106:	0a 95       	dec	r16
    1108:	e1 f7       	brne	.-8      	; 0x1102 <_ZN15OrangutanSerial15serial_rx_checkEh+0x2c>
    110a:	e8 0f       	add	r30, r24
    110c:	f9 1f       	adc	r31, r25
    110e:	ee 5f       	subi	r30, 0xFE	; 254
    1110:	fe 4f       	sbci	r31, 0xFE	; 254
    1112:	80 85       	ldd	r24, Z+8	; 0x08
    1114:	91 85       	ldd	r25, Z+9	; 0x09
    1116:	00 97       	sbiw	r24, 0x00	; 0
    1118:	a9 f1       	breq	.+106    	; 0x1184 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    111a:	21 2f       	mov	r18, r17
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	f9 01       	movw	r30, r18
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	a3 e0       	ldi	r26, 0x03	; 3
    1126:	22 0f       	add	r18, r18
    1128:	33 1f       	adc	r19, r19
    112a:	aa 95       	dec	r26
    112c:	e1 f7       	brne	.-8      	; 0x1126 <_ZN15OrangutanSerial15serial_rx_checkEh+0x50>
    112e:	e2 0f       	add	r30, r18
    1130:	f3 1f       	adc	r31, r19
    1132:	ee 5f       	subi	r30, 0xFE	; 254
    1134:	fe 4f       	sbci	r31, 0xFE	; 254
    1136:	92 81       	ldd	r25, Z+2	; 0x02
    1138:	21 2f       	mov	r18, r17
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	f9 01       	movw	r30, r18
    113e:	ee 0f       	add	r30, r30
    1140:	ff 1f       	adc	r31, r31
    1142:	63 e0       	ldi	r22, 0x03	; 3
    1144:	22 0f       	add	r18, r18
    1146:	33 1f       	adc	r19, r19
    1148:	6a 95       	dec	r22
    114a:	e1 f7       	brne	.-8      	; 0x1144 <_ZN15OrangutanSerial15serial_rx_checkEh+0x6e>
    114c:	e2 0f       	add	r30, r18
    114e:	f3 1f       	adc	r31, r19
    1150:	ee 5f       	subi	r30, 0xFE	; 254
    1152:	fe 4f       	sbci	r31, 0xFE	; 254
    1154:	84 81       	ldd	r24, Z+4	; 0x04
    1156:	98 17       	cp	r25, r24
    1158:	a8 f4       	brcc	.+42     	; 0x1184 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    115a:	11 23       	and	r17, r17
    115c:	19 f4       	brne	.+6      	; 0x1164 <_ZN15OrangutanSerial15serial_rx_checkEh+0x8e>
    115e:	e0 ec       	ldi	r30, 0xC0	; 192
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <_ZN15OrangutanSerial15serial_rx_checkEh+0x92>
    1164:	e8 ec       	ldi	r30, 0xC8	; 200
    1166:	f0 e0       	ldi	r31, 0x00	; 0
    1168:	80 81       	ld	r24, Z
    116a:	87 ff       	sbrs	r24, 7
    116c:	0b c0       	rjmp	.+22     	; 0x1184 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    116e:	11 23       	and	r17, r17
    1170:	19 f4       	brne	.+6      	; 0x1178 <_ZN15OrangutanSerial15serial_rx_checkEh+0xa2>
    1172:	e6 ec       	ldi	r30, 0xC6	; 198
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	02 c0       	rjmp	.+4      	; 0x117c <_ZN15OrangutanSerial15serial_rx_checkEh+0xa6>
    1178:	ee ec       	ldi	r30, 0xCE	; 206
    117a:	f0 e0       	ldi	r31, 0x00	; 0
    117c:	60 81       	ld	r22, Z
    117e:	81 2f       	mov	r24, r17
    1180:	0e 94 c4 07 	call	0xf88	; 0xf88 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1184:	21 2f       	mov	r18, r17
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	f9 01       	movw	r30, r18
    118a:	ee 0f       	add	r30, r30
    118c:	ff 1f       	adc	r31, r31
    118e:	43 e0       	ldi	r20, 0x03	; 3
    1190:	22 0f       	add	r18, r18
    1192:	33 1f       	adc	r19, r19
    1194:	4a 95       	dec	r20
    1196:	e1 f7       	brne	.-8      	; 0x1190 <_ZN15OrangutanSerial15serial_rx_checkEh+0xba>
    1198:	e2 0f       	add	r30, r18
    119a:	f3 1f       	adc	r31, r19
    119c:	ee 5f       	subi	r30, 0xFE	; 254
    119e:	fe 4f       	sbci	r31, 0xFE	; 254
    11a0:	80 81       	ld	r24, Z
    11a2:	88 23       	and	r24, r24
    11a4:	09 f0       	breq	.+2      	; 0x11a8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xd2>
    11a6:	59 c0       	rjmp	.+178    	; 0x125a <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    11a8:	11 23       	and	r17, r17
    11aa:	19 f4       	brne	.+6      	; 0x11b2 <_ZN15OrangutanSerial15serial_rx_checkEh+0xdc>
    11ac:	e1 ec       	ldi	r30, 0xC1	; 193
    11ae:	f0 e0       	ldi	r31, 0x00	; 0
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <_ZN15OrangutanSerial15serial_rx_checkEh+0xe0>
    11b2:	e9 ec       	ldi	r30, 0xC9	; 201
    11b4:	f0 e0       	ldi	r31, 0x00	; 0
    11b6:	80 81       	ld	r24, Z
    11b8:	80 68       	ori	r24, 0x80	; 128
    11ba:	80 83       	st	Z, r24
    11bc:	4e c0       	rjmp	.+156    	; 0x125a <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    11be:	80 91 1b 01 	lds	r24, 0x011B
    11c2:	88 23       	and	r24, r24
    11c4:	19 f0       	breq	.+6      	; 0x11cc <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    11c6:	10 92 18 01 	sts	0x0118, r1
    11ca:	47 c0       	rjmp	.+142    	; 0x125a <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    11cc:	80 91 1e 01 	lds	r24, 0x011E
    11d0:	90 91 1f 01 	lds	r25, 0x011F
    11d4:	00 97       	sbiw	r24, 0x00	; 0
    11d6:	09 f4       	brne	.+2      	; 0x11da <_ZN15OrangutanSerial15serial_rx_checkEh+0x104>
    11d8:	40 c0       	rjmp	.+128    	; 0x125a <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    11da:	90 91 18 01 	lds	r25, 0x0118
    11de:	80 91 1a 01 	lds	r24, 0x011A
    11e2:	98 17       	cp	r25, r24
    11e4:	d0 f5       	brcc	.+116    	; 0x125a <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    11e6:	80 91 61 03 	lds	r24, 0x0361
    11ea:	88 23       	and	r24, r24
    11ec:	a9 f4       	brne	.+42     	; 0x1218 <_ZN15OrangutanSerial15serial_rx_checkEh+0x142>
    11ee:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <_ZN12OrangutanSVP15serialReadStartEv>
    11f2:	80 93 61 03 	sts	0x0361, r24
    11f6:	10 e0       	ldi	r17, 0x00	; 0
    11f8:	0b c0       	rjmp	.+22     	; 0x1210 <_ZN15OrangutanSerial15serial_rx_checkEh+0x13a>
    11fa:	0e 94 56 0c 	call	0x18ac	; 0x18ac <_ZN12OrangutanSVP11getNextByteEv>
    11fe:	e0 2f       	mov	r30, r16
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	31 97       	sbiw	r30, 0x01	; 1
    1204:	e1 1b       	sub	r30, r17
    1206:	f1 09       	sbc	r31, r1
    1208:	ee 59       	subi	r30, 0x9E	; 158
    120a:	fc 4f       	sbci	r31, 0xFC	; 252
    120c:	80 83       	st	Z, r24
    120e:	1f 5f       	subi	r17, 0xFF	; 255
    1210:	00 91 61 03 	lds	r16, 0x0361
    1214:	10 17       	cp	r17, r16
    1216:	88 f3       	brcs	.-30     	; 0x11fa <_ZN15OrangutanSerial15serial_rx_checkEh+0x124>
    1218:	a0 91 61 03 	lds	r26, 0x0361
    121c:	aa 23       	and	r26, r26
    121e:	e9 f0       	breq	.+58     	; 0x125a <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1220:	80 91 18 01 	lds	r24, 0x0118
    1224:	e0 91 1e 01 	lds	r30, 0x011E
    1228:	f0 91 1f 01 	lds	r31, 0x011F
    122c:	e8 0f       	add	r30, r24
    122e:	f1 1d       	adc	r31, r1
    1230:	a1 50       	subi	r26, 0x01	; 1
    1232:	a0 93 61 03 	sts	0x0361, r26
    1236:	b0 e0       	ldi	r27, 0x00	; 0
    1238:	ae 59       	subi	r26, 0x9E	; 158
    123a:	bc 4f       	sbci	r27, 0xFC	; 252
    123c:	8c 91       	ld	r24, X
    123e:	80 83       	st	Z, r24
    1240:	80 91 18 01 	lds	r24, 0x0118
    1244:	8f 5f       	subi	r24, 0xFF	; 255
    1246:	80 93 18 01 	sts	0x0118, r24
    124a:	90 91 18 01 	lds	r25, 0x0118
    124e:	80 91 1a 01 	lds	r24, 0x011A
    1252:	98 17       	cp	r25, r24
    1254:	09 f0       	breq	.+2      	; 0x1258 <_ZN15OrangutanSerial15serial_rx_checkEh+0x182>
    1256:	ba cf       	rjmp	.-140    	; 0x11cc <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    1258:	b2 cf       	rjmp	.-156    	; 0x11be <_ZN15OrangutanSerial15serial_rx_checkEh+0xe8>
    125a:	1f 91       	pop	r17
    125c:	0f 91       	pop	r16
    125e:	08 95       	ret

00001260 <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    1260:	82 30       	cpi	r24, 0x02	; 2
    1262:	51 f0       	breq	.+20     	; 0x1278 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x18>
    1264:	88 23       	and	r24, r24
    1266:	19 f4       	brne	.+6      	; 0x126e <_ZN15OrangutanSerial14receive_inlineEhPchh+0xe>
    1268:	e1 ec       	ldi	r30, 0xC1	; 193
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x12>
    126e:	e9 ec       	ldi	r30, 0xC9	; 201
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	90 81       	ld	r25, Z
    1274:	9f 77       	andi	r25, 0x7F	; 127
    1276:	90 83       	st	Z, r25
    1278:	a8 2f       	mov	r26, r24
    127a:	b0 e0       	ldi	r27, 0x00	; 0
    127c:	fd 01       	movw	r30, r26
    127e:	ee 0f       	add	r30, r30
    1280:	ff 1f       	adc	r31, r31
    1282:	53 e0       	ldi	r21, 0x03	; 3
    1284:	aa 0f       	add	r26, r26
    1286:	bb 1f       	adc	r27, r27
    1288:	5a 95       	dec	r21
    128a:	e1 f7       	brne	.-8      	; 0x1284 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x24>
    128c:	ea 0f       	add	r30, r26
    128e:	fb 1f       	adc	r31, r27
    1290:	ee 5f       	subi	r30, 0xFE	; 254
    1292:	fe 4f       	sbci	r31, 0xFE	; 254
    1294:	71 87       	std	Z+9, r23	; 0x09
    1296:	60 87       	std	Z+8, r22	; 0x08
    1298:	68 2f       	mov	r22, r24
    129a:	70 e0       	ldi	r23, 0x00	; 0
    129c:	fb 01       	movw	r30, r22
    129e:	ee 0f       	add	r30, r30
    12a0:	ff 1f       	adc	r31, r31
    12a2:	93 e0       	ldi	r25, 0x03	; 3
    12a4:	66 0f       	add	r22, r22
    12a6:	77 1f       	adc	r23, r23
    12a8:	9a 95       	dec	r25
    12aa:	e1 f7       	brne	.-8      	; 0x12a4 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x44>
    12ac:	e6 0f       	add	r30, r22
    12ae:	f7 1f       	adc	r31, r23
    12b0:	ee 5f       	subi	r30, 0xFE	; 254
    12b2:	fe 4f       	sbci	r31, 0xFE	; 254
    12b4:	12 82       	std	Z+2, r1	; 0x02
    12b6:	68 2f       	mov	r22, r24
    12b8:	70 e0       	ldi	r23, 0x00	; 0
    12ba:	fb 01       	movw	r30, r22
    12bc:	ee 0f       	add	r30, r30
    12be:	ff 1f       	adc	r31, r31
    12c0:	a3 e0       	ldi	r26, 0x03	; 3
    12c2:	66 0f       	add	r22, r22
    12c4:	77 1f       	adc	r23, r23
    12c6:	aa 95       	dec	r26
    12c8:	e1 f7       	brne	.-8      	; 0x12c2 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x62>
    12ca:	e6 0f       	add	r30, r22
    12cc:	f7 1f       	adc	r31, r23
    12ce:	ee 5f       	subi	r30, 0xFE	; 254
    12d0:	fe 4f       	sbci	r31, 0xFE	; 254
    12d2:	44 83       	std	Z+4, r20	; 0x04
    12d4:	48 2f       	mov	r20, r24
    12d6:	50 e0       	ldi	r21, 0x00	; 0
    12d8:	fa 01       	movw	r30, r20
    12da:	ee 0f       	add	r30, r30
    12dc:	ff 1f       	adc	r31, r31
    12de:	63 e0       	ldi	r22, 0x03	; 3
    12e0:	44 0f       	add	r20, r20
    12e2:	55 1f       	adc	r21, r21
    12e4:	6a 95       	dec	r22
    12e6:	e1 f7       	brne	.-8      	; 0x12e0 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x80>
    12e8:	e4 0f       	add	r30, r20
    12ea:	f5 1f       	adc	r31, r21
    12ec:	ee 5f       	subi	r30, 0xFE	; 254
    12ee:	fe 4f       	sbci	r31, 0xFE	; 254
    12f0:	25 83       	std	Z+5, r18	; 0x05
    12f2:	82 30       	cpi	r24, 0x02	; 2
    12f4:	d9 f0       	breq	.+54     	; 0x132c <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    12f6:	28 2f       	mov	r18, r24
    12f8:	30 e0       	ldi	r19, 0x00	; 0
    12fa:	f9 01       	movw	r30, r18
    12fc:	ee 0f       	add	r30, r30
    12fe:	ff 1f       	adc	r31, r31
    1300:	43 e0       	ldi	r20, 0x03	; 3
    1302:	22 0f       	add	r18, r18
    1304:	33 1f       	adc	r19, r19
    1306:	4a 95       	dec	r20
    1308:	e1 f7       	brne	.-8      	; 0x1302 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xa2>
    130a:	e2 0f       	add	r30, r18
    130c:	f3 1f       	adc	r31, r19
    130e:	ee 5f       	subi	r30, 0xFE	; 254
    1310:	fe 4f       	sbci	r31, 0xFE	; 254
    1312:	90 81       	ld	r25, Z
    1314:	99 23       	and	r25, r25
    1316:	51 f4       	brne	.+20     	; 0x132c <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    1318:	88 23       	and	r24, r24
    131a:	19 f4       	brne	.+6      	; 0x1322 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc2>
    131c:	e1 ec       	ldi	r30, 0xC1	; 193
    131e:	f0 e0       	ldi	r31, 0x00	; 0
    1320:	02 c0       	rjmp	.+4      	; 0x1326 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc6>
    1322:	e9 ec       	ldi	r30, 0xC9	; 201
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	80 81       	ld	r24, Z
    1328:	80 68       	ori	r24, 0x80	; 128
    132a:	80 83       	st	Z, r24
    132c:	08 95       	ret

0000132e <_ZN15OrangutanSerial11receiveRingEhPch>:
    132e:	21 e0       	ldi	r18, 0x01	; 1
    1330:	0e 94 30 09 	call	0x1260	; 0x1260 <_ZN15OrangutanSerial14receive_inlineEhPchh>
    1334:	08 95       	ret

00001336 <serial_receive_ring>:
    1336:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN15OrangutanSerial11receiveRingEhPch>
    133a:	08 95       	ret

0000133c <__vector_20>:
    133c:	1f 92       	push	r1
    133e:	0f 92       	push	r0
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	0f 92       	push	r0
    1344:	0b b6       	in	r0, 0x3b	; 59
    1346:	0f 92       	push	r0
    1348:	11 24       	eor	r1, r1
    134a:	2f 93       	push	r18
    134c:	3f 93       	push	r19
    134e:	4f 93       	push	r20
    1350:	5f 93       	push	r21
    1352:	6f 93       	push	r22
    1354:	7f 93       	push	r23
    1356:	8f 93       	push	r24
    1358:	9f 93       	push	r25
    135a:	af 93       	push	r26
    135c:	bf 93       	push	r27
    135e:	ef 93       	push	r30
    1360:	ff 93       	push	r31
    1362:	60 91 c6 00 	lds	r22, 0x00C6
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	0e 94 c4 07 	call	0xf88	; 0xf88 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    136c:	ff 91       	pop	r31
    136e:	ef 91       	pop	r30
    1370:	bf 91       	pop	r27
    1372:	af 91       	pop	r26
    1374:	9f 91       	pop	r25
    1376:	8f 91       	pop	r24
    1378:	7f 91       	pop	r23
    137a:	6f 91       	pop	r22
    137c:	5f 91       	pop	r21
    137e:	4f 91       	pop	r20
    1380:	3f 91       	pop	r19
    1382:	2f 91       	pop	r18
    1384:	0f 90       	pop	r0
    1386:	0b be       	out	0x3b, r0	; 59
    1388:	0f 90       	pop	r0
    138a:	0f be       	out	0x3f, r0	; 63
    138c:	0f 90       	pop	r0
    138e:	1f 90       	pop	r1
    1390:	18 95       	reti

00001392 <__vector_28>:
    1392:	1f 92       	push	r1
    1394:	0f 92       	push	r0
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	0f 92       	push	r0
    139a:	0b b6       	in	r0, 0x3b	; 59
    139c:	0f 92       	push	r0
    139e:	11 24       	eor	r1, r1
    13a0:	2f 93       	push	r18
    13a2:	3f 93       	push	r19
    13a4:	4f 93       	push	r20
    13a6:	5f 93       	push	r21
    13a8:	6f 93       	push	r22
    13aa:	7f 93       	push	r23
    13ac:	8f 93       	push	r24
    13ae:	9f 93       	push	r25
    13b0:	af 93       	push	r26
    13b2:	bf 93       	push	r27
    13b4:	ef 93       	push	r30
    13b6:	ff 93       	push	r31
    13b8:	60 91 ce 00 	lds	r22, 0x00CE
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	0e 94 c4 07 	call	0xf88	; 0xf88 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    13c2:	ff 91       	pop	r31
    13c4:	ef 91       	pop	r30
    13c6:	bf 91       	pop	r27
    13c8:	af 91       	pop	r26
    13ca:	9f 91       	pop	r25
    13cc:	8f 91       	pop	r24
    13ce:	7f 91       	pop	r23
    13d0:	6f 91       	pop	r22
    13d2:	5f 91       	pop	r21
    13d4:	4f 91       	pop	r20
    13d6:	3f 91       	pop	r19
    13d8:	2f 91       	pop	r18
    13da:	0f 90       	pop	r0
    13dc:	0b be       	out	0x3b, r0	; 59
    13de:	0f 90       	pop	r0
    13e0:	0f be       	out	0x3f, r0	; 63
    13e2:	0f 90       	pop	r0
    13e4:	1f 90       	pop	r1
    13e6:	18 95       	reti

000013e8 <_Z24uart_enable_tx_interrupth>:
    13e8:	88 23       	and	r24, r24
    13ea:	19 f4       	brne	.+6      	; 0x13f2 <_Z24uart_enable_tx_interrupth+0xa>
    13ec:	e1 ec       	ldi	r30, 0xC1	; 193
    13ee:	f0 e0       	ldi	r31, 0x00	; 0
    13f0:	02 c0       	rjmp	.+4      	; 0x13f6 <_Z24uart_enable_tx_interrupth+0xe>
    13f2:	e9 ec       	ldi	r30, 0xC9	; 201
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	80 62       	ori	r24, 0x20	; 32
    13fa:	80 83       	st	Z, r24
    13fc:	08 95       	ret

000013fe <_Z25uart_disable_tx_interrupth>:
    13fe:	88 23       	and	r24, r24
    1400:	19 f4       	brne	.+6      	; 0x1408 <_Z25uart_disable_tx_interrupth+0xa>
    1402:	e1 ec       	ldi	r30, 0xC1	; 193
    1404:	f0 e0       	ldi	r31, 0x00	; 0
    1406:	02 c0       	rjmp	.+4      	; 0x140c <_Z25uart_disable_tx_interrupth+0xe>
    1408:	e9 ec       	ldi	r30, 0xC9	; 201
    140a:	f0 e0       	ldi	r31, 0x00	; 0
    140c:	80 81       	ld	r24, Z
    140e:	8f 7d       	andi	r24, 0xDF	; 223
    1410:	80 83       	st	Z, r24
    1412:	08 95       	ret

00001414 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    1414:	28 2f       	mov	r18, r24
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	f9 01       	movw	r30, r18
    141a:	ee 0f       	add	r30, r30
    141c:	ff 1f       	adc	r31, r31
    141e:	93 e0       	ldi	r25, 0x03	; 3
    1420:	22 0f       	add	r18, r18
    1422:	33 1f       	adc	r19, r19
    1424:	9a 95       	dec	r25
    1426:	e1 f7       	brne	.-8      	; 0x1420 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0xc>
    1428:	e2 0f       	add	r30, r18
    142a:	f3 1f       	adc	r31, r19
    142c:	ee 5f       	subi	r30, 0xFE	; 254
    142e:	fe 4f       	sbci	r31, 0xFE	; 254
    1430:	26 81       	ldd	r18, Z+6	; 0x06
    1432:	37 81       	ldd	r19, Z+7	; 0x07
    1434:	21 15       	cp	r18, r1
    1436:	31 05       	cpc	r19, r1
    1438:	a1 f1       	breq	.+104    	; 0x14a2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    143a:	28 2f       	mov	r18, r24
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	f9 01       	movw	r30, r18
    1440:	ee 0f       	add	r30, r30
    1442:	ff 1f       	adc	r31, r31
    1444:	a3 e0       	ldi	r26, 0x03	; 3
    1446:	22 0f       	add	r18, r18
    1448:	33 1f       	adc	r19, r19
    144a:	aa 95       	dec	r26
    144c:	e1 f7       	brne	.-8      	; 0x1446 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x32>
    144e:	e2 0f       	add	r30, r18
    1450:	f3 1f       	adc	r31, r19
    1452:	ee 5f       	subi	r30, 0xFE	; 254
    1454:	fe 4f       	sbci	r31, 0xFE	; 254
    1456:	41 81       	ldd	r20, Z+1	; 0x01
    1458:	28 2f       	mov	r18, r24
    145a:	30 e0       	ldi	r19, 0x00	; 0
    145c:	f9 01       	movw	r30, r18
    145e:	ee 0f       	add	r30, r30
    1460:	ff 1f       	adc	r31, r31
    1462:	63 e0       	ldi	r22, 0x03	; 3
    1464:	22 0f       	add	r18, r18
    1466:	33 1f       	adc	r19, r19
    1468:	6a 95       	dec	r22
    146a:	e1 f7       	brne	.-8      	; 0x1464 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x50>
    146c:	e2 0f       	add	r30, r18
    146e:	f3 1f       	adc	r31, r19
    1470:	ee 5f       	subi	r30, 0xFE	; 254
    1472:	fe 4f       	sbci	r31, 0xFE	; 254
    1474:	93 81       	ldd	r25, Z+3	; 0x03
    1476:	49 17       	cp	r20, r25
    1478:	a0 f4       	brcc	.+40     	; 0x14a2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    147a:	28 2f       	mov	r18, r24
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	f9 01       	movw	r30, r18
    1480:	ee 0f       	add	r30, r30
    1482:	ff 1f       	adc	r31, r31
    1484:	43 e0       	ldi	r20, 0x03	; 3
    1486:	22 0f       	add	r18, r18
    1488:	33 1f       	adc	r19, r19
    148a:	4a 95       	dec	r20
    148c:	e1 f7       	brne	.-8      	; 0x1486 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x72>
    148e:	e2 0f       	add	r30, r18
    1490:	f3 1f       	adc	r31, r19
    1492:	ee 5f       	subi	r30, 0xFE	; 254
    1494:	fe 4f       	sbci	r31, 0xFE	; 254
    1496:	90 81       	ld	r25, Z
    1498:	99 23       	and	r25, r25
    149a:	19 f4       	brne	.+6      	; 0x14a2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    149c:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <_Z24uart_enable_tx_interrupth>
    14a0:	08 95       	ret
    14a2:	0e 94 ff 09 	call	0x13fe	; 0x13fe <_Z25uart_disable_tx_interrupth>
    14a6:	08 95       	ret

000014a8 <_ZN15OrangutanSerial15initUART_inlineEh>:
    14a8:	82 30       	cpi	r24, 0x02	; 2
    14aa:	31 f1       	breq	.+76     	; 0x14f8 <_ZN15OrangutanSerial15initUART_inlineEh+0x50>
    14ac:	28 2f       	mov	r18, r24
    14ae:	30 e0       	ldi	r19, 0x00	; 0
    14b0:	f9 01       	movw	r30, r18
    14b2:	ee 0f       	add	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	53 e0       	ldi	r21, 0x03	; 3
    14b8:	22 0f       	add	r18, r18
    14ba:	33 1f       	adc	r19, r19
    14bc:	5a 95       	dec	r21
    14be:	e1 f7       	brne	.-8      	; 0x14b8 <_ZN15OrangutanSerial15initUART_inlineEh+0x10>
    14c0:	e2 0f       	add	r30, r18
    14c2:	f3 1f       	adc	r31, r19
    14c4:	ee 5f       	subi	r30, 0xFE	; 254
    14c6:	fe 4f       	sbci	r31, 0xFE	; 254
    14c8:	90 81       	ld	r25, Z
    14ca:	99 23       	and	r25, r25
    14cc:	49 f4       	brne	.+18     	; 0x14e0 <_ZN15OrangutanSerial15initUART_inlineEh+0x38>
    14ce:	88 23       	and	r24, r24
    14d0:	19 f4       	brne	.+6      	; 0x14d8 <_ZN15OrangutanSerial15initUART_inlineEh+0x30>
    14d2:	e1 ec       	ldi	r30, 0xC1	; 193
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <_ZN15OrangutanSerial15initUART_inlineEh+0x34>
    14d8:	e9 ec       	ldi	r30, 0xC9	; 201
    14da:	f0 e0       	ldi	r31, 0x00	; 0
    14dc:	98 e9       	ldi	r25, 0x98	; 152
    14de:	08 c0       	rjmp	.+16     	; 0x14f0 <_ZN15OrangutanSerial15initUART_inlineEh+0x48>
    14e0:	88 23       	and	r24, r24
    14e2:	19 f4       	brne	.+6      	; 0x14ea <_ZN15OrangutanSerial15initUART_inlineEh+0x42>
    14e4:	e1 ec       	ldi	r30, 0xC1	; 193
    14e6:	f0 e0       	ldi	r31, 0x00	; 0
    14e8:	02 c0       	rjmp	.+4      	; 0x14ee <_ZN15OrangutanSerial15initUART_inlineEh+0x46>
    14ea:	e9 ec       	ldi	r30, 0xC9	; 201
    14ec:	f0 e0       	ldi	r31, 0x00	; 0
    14ee:	98 e1       	ldi	r25, 0x18	; 24
    14f0:	90 83       	st	Z, r25
    14f2:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    14f6:	78 94       	sei
    14f8:	08 95       	ret

000014fa <_ZN15OrangutanSerial8initPortEh>:
    14fa:	88 23       	and	r24, r24
    14fc:	19 f0       	breq	.+6      	; 0x1504 <_ZN15OrangutanSerial8initPortEh+0xa>
    14fe:	81 30       	cpi	r24, 0x01	; 1
    1500:	41 f4       	brne	.+16     	; 0x1512 <_ZN15OrangutanSerial8initPortEh+0x18>
    1502:	04 c0       	rjmp	.+8      	; 0x150c <_ZN15OrangutanSerial8initPortEh+0x12>
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <_ZN15OrangutanSerial15initUART_inlineEh>
    150a:	08 95       	ret
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <_ZN15OrangutanSerial15initUART_inlineEh>
    1512:	08 95       	ret

00001514 <_ZN15OrangutanSerial11setBaudRateEhm>:
    1514:	a0 e0       	ldi	r26, 0x00	; 0
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	e0 e9       	ldi	r30, 0x90	; 144
    151a:	fa e0       	ldi	r31, 0x0A	; 10
    151c:	0c 94 26 0d 	jmp	0x1a4c	; 0x1a4c <__prologue_saves__+0x16>
    1520:	d8 2e       	mov	r13, r24
    1522:	7a 01       	movw	r14, r20
    1524:	8b 01       	movw	r16, r22
    1526:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <_ZN15OrangutanSerial8initPortEh>
    152a:	8d 2d       	mov	r24, r13
    152c:	82 30       	cpi	r24, 0x02	; 2
    152e:	01 f1       	breq	.+64     	; 0x1570 <_ZN15OrangutanSerial11setBaudRateEhm+0x5c>
    1530:	dd 20       	and	r13, r13
    1532:	19 f4       	brne	.+6      	; 0x153a <_ZN15OrangutanSerial11setBaudRateEhm+0x26>
    1534:	c4 ec       	ldi	r28, 0xC4	; 196
    1536:	d0 e0       	ldi	r29, 0x00	; 0
    1538:	02 c0       	rjmp	.+4      	; 0x153e <_ZN15OrangutanSerial11setBaudRateEhm+0x2a>
    153a:	cc ec       	ldi	r28, 0xCC	; 204
    153c:	d0 e0       	ldi	r29, 0x00	; 0
    153e:	c8 01       	movw	r24, r16
    1540:	b7 01       	movw	r22, r14
    1542:	28 ef       	ldi	r18, 0xF8	; 248
    1544:	3f ef       	ldi	r19, 0xFF	; 255
    1546:	4f ef       	ldi	r20, 0xFF	; 255
    1548:	5f ef       	ldi	r21, 0xFF	; 255
    154a:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__mulsi3>
    154e:	60 50       	subi	r22, 0x00	; 0
    1550:	73 4d       	sbci	r23, 0xD3	; 211
    1552:	8e 4c       	sbci	r24, 0xCE	; 206
    1554:	9e 4f       	sbci	r25, 0xFE	; 254
    1556:	a8 01       	movw	r20, r16
    1558:	97 01       	movw	r18, r14
    155a:	e4 e0       	ldi	r30, 0x04	; 4
    155c:	22 0f       	add	r18, r18
    155e:	33 1f       	adc	r19, r19
    1560:	44 1f       	adc	r20, r20
    1562:	55 1f       	adc	r21, r21
    1564:	ea 95       	dec	r30
    1566:	d1 f7       	brne	.-12     	; 0x155c <_ZN15OrangutanSerial11setBaudRateEhm+0x48>
    1568:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__udivmodsi4>
    156c:	39 83       	std	Y+1, r19	; 0x01
    156e:	28 83       	st	Y, r18
    1570:	cd b7       	in	r28, 0x3d	; 61
    1572:	de b7       	in	r29, 0x3e	; 62
    1574:	e7 e0       	ldi	r30, 0x07	; 7
    1576:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__epilogue_restores__+0x16>

0000157a <serial_set_baud_rate>:
    157a:	0e 94 8a 0a 	call	0x1514	; 0x1514 <_ZN15OrangutanSerial11setBaudRateEhm>
    157e:	08 95       	ret

00001580 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    1580:	28 2f       	mov	r18, r24
    1582:	30 e0       	ldi	r19, 0x00	; 0
    1584:	f9 01       	movw	r30, r18
    1586:	ee 0f       	add	r30, r30
    1588:	ff 1f       	adc	r31, r31
    158a:	73 e0       	ldi	r23, 0x03	; 3
    158c:	22 0f       	add	r18, r18
    158e:	33 1f       	adc	r19, r19
    1590:	7a 95       	dec	r23
    1592:	e1 f7       	brne	.-8      	; 0x158c <_ZN15OrangutanSerial11uart_tx_isrEh+0xc>
    1594:	e2 0f       	add	r30, r18
    1596:	f3 1f       	adc	r31, r19
    1598:	ee 5f       	subi	r30, 0xFE	; 254
    159a:	fe 4f       	sbci	r31, 0xFE	; 254
    159c:	46 81       	ldd	r20, Z+6	; 0x06
    159e:	57 81       	ldd	r21, Z+7	; 0x07
    15a0:	41 15       	cp	r20, r1
    15a2:	51 05       	cpc	r21, r1
    15a4:	09 f4       	brne	.+2      	; 0x15a8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x28>
    15a6:	65 c0       	rjmp	.+202    	; 0x1672 <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    15a8:	28 2f       	mov	r18, r24
    15aa:	30 e0       	ldi	r19, 0x00	; 0
    15ac:	f9 01       	movw	r30, r18
    15ae:	ee 0f       	add	r30, r30
    15b0:	ff 1f       	adc	r31, r31
    15b2:	93 e0       	ldi	r25, 0x03	; 3
    15b4:	22 0f       	add	r18, r18
    15b6:	33 1f       	adc	r19, r19
    15b8:	9a 95       	dec	r25
    15ba:	e1 f7       	brne	.-8      	; 0x15b4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x34>
    15bc:	e2 0f       	add	r30, r18
    15be:	f3 1f       	adc	r31, r19
    15c0:	ee 5f       	subi	r30, 0xFE	; 254
    15c2:	fe 4f       	sbci	r31, 0xFE	; 254
    15c4:	61 81       	ldd	r22, Z+1	; 0x01
    15c6:	28 2f       	mov	r18, r24
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	f9 01       	movw	r30, r18
    15cc:	ee 0f       	add	r30, r30
    15ce:	ff 1f       	adc	r31, r31
    15d0:	a3 e0       	ldi	r26, 0x03	; 3
    15d2:	22 0f       	add	r18, r18
    15d4:	33 1f       	adc	r19, r19
    15d6:	aa 95       	dec	r26
    15d8:	e1 f7       	brne	.-8      	; 0x15d2 <_ZN15OrangutanSerial11uart_tx_isrEh+0x52>
    15da:	e2 0f       	add	r30, r18
    15dc:	f3 1f       	adc	r31, r19
    15de:	ee 5f       	subi	r30, 0xFE	; 254
    15e0:	fe 4f       	sbci	r31, 0xFE	; 254
    15e2:	93 81       	ldd	r25, Z+3	; 0x03
    15e4:	69 17       	cp	r22, r25
    15e6:	08 f0       	brcs	.+2      	; 0x15ea <_ZN15OrangutanSerial11uart_tx_isrEh+0x6a>
    15e8:	44 c0       	rjmp	.+136    	; 0x1672 <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    15ea:	88 23       	and	r24, r24
    15ec:	19 f4       	brne	.+6      	; 0x15f4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x74>
    15ee:	e0 ec       	ldi	r30, 0xC0	; 192
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	02 c0       	rjmp	.+4      	; 0x15f8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x78>
    15f4:	e8 ec       	ldi	r30, 0xC8	; 200
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	90 81       	ld	r25, Z
    15fa:	95 ff       	sbrs	r25, 5
    15fc:	3a c0       	rjmp	.+116    	; 0x1672 <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    15fe:	88 23       	and	r24, r24
    1600:	19 f4       	brne	.+6      	; 0x1608 <_ZN15OrangutanSerial11uart_tx_isrEh+0x88>
    1602:	a6 ec       	ldi	r26, 0xC6	; 198
    1604:	b0 e0       	ldi	r27, 0x00	; 0
    1606:	02 c0       	rjmp	.+4      	; 0x160c <_ZN15OrangutanSerial11uart_tx_isrEh+0x8c>
    1608:	ae ec       	ldi	r26, 0xCE	; 206
    160a:	b0 e0       	ldi	r27, 0x00	; 0
    160c:	28 2f       	mov	r18, r24
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	f9 01       	movw	r30, r18
    1612:	ee 0f       	add	r30, r30
    1614:	ff 1f       	adc	r31, r31
    1616:	63 e0       	ldi	r22, 0x03	; 3
    1618:	22 0f       	add	r18, r18
    161a:	33 1f       	adc	r19, r19
    161c:	6a 95       	dec	r22
    161e:	e1 f7       	brne	.-8      	; 0x1618 <_ZN15OrangutanSerial11uart_tx_isrEh+0x98>
    1620:	e2 0f       	add	r30, r18
    1622:	f3 1f       	adc	r31, r19
    1624:	ee 5f       	subi	r30, 0xFE	; 254
    1626:	fe 4f       	sbci	r31, 0xFE	; 254
    1628:	91 81       	ldd	r25, Z+1	; 0x01
    162a:	49 0f       	add	r20, r25
    162c:	51 1d       	adc	r21, r1
    162e:	fa 01       	movw	r30, r20
    1630:	90 81       	ld	r25, Z
    1632:	9c 93       	st	X, r25
    1634:	28 2f       	mov	r18, r24
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	f9 01       	movw	r30, r18
    163a:	ee 0f       	add	r30, r30
    163c:	ff 1f       	adc	r31, r31
    163e:	93 e0       	ldi	r25, 0x03	; 3
    1640:	22 0f       	add	r18, r18
    1642:	33 1f       	adc	r19, r19
    1644:	9a 95       	dec	r25
    1646:	e1 f7       	brne	.-8      	; 0x1640 <_ZN15OrangutanSerial11uart_tx_isrEh+0xc0>
    1648:	e2 0f       	add	r30, r18
    164a:	f3 1f       	adc	r31, r19
    164c:	ee 5f       	subi	r30, 0xFE	; 254
    164e:	fe 4f       	sbci	r31, 0xFE	; 254
    1650:	91 81       	ldd	r25, Z+1	; 0x01
    1652:	9f 5f       	subi	r25, 0xFF	; 255
    1654:	28 2f       	mov	r18, r24
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	f9 01       	movw	r30, r18
    165a:	ee 0f       	add	r30, r30
    165c:	ff 1f       	adc	r31, r31
    165e:	a3 e0       	ldi	r26, 0x03	; 3
    1660:	22 0f       	add	r18, r18
    1662:	33 1f       	adc	r19, r19
    1664:	aa 95       	dec	r26
    1666:	e1 f7       	brne	.-8      	; 0x1660 <_ZN15OrangutanSerial11uart_tx_isrEh+0xe0>
    1668:	e2 0f       	add	r30, r18
    166a:	f3 1f       	adc	r31, r19
    166c:	ee 5f       	subi	r30, 0xFE	; 254
    166e:	fe 4f       	sbci	r31, 0xFE	; 254
    1670:	91 83       	std	Z+1, r25	; 0x01
    1672:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1676:	08 95       	ret

00001678 <_ZN15OrangutanSerial15serial_tx_checkEh>:
    1678:	1f 93       	push	r17
    167a:	18 2f       	mov	r17, r24
    167c:	82 30       	cpi	r24, 0x02	; 2
    167e:	31 f0       	breq	.+12     	; 0x168c <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    1680:	0e 94 ff 09 	call	0x13fe	; 0x13fe <_Z25uart_disable_tx_interrupth>
    1684:	81 2f       	mov	r24, r17
    1686:	0e 94 c0 0a 	call	0x1580	; 0x1580 <_ZN15OrangutanSerial11uart_tx_isrEh>
    168a:	1d c0       	rjmp	.+58     	; 0x16c6 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    168c:	80 91 1c 01 	lds	r24, 0x011C
    1690:	90 91 1d 01 	lds	r25, 0x011D
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	b9 f0       	breq	.+46     	; 0x16c6 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    1698:	30 91 17 01 	lds	r19, 0x0117
    169c:	20 91 19 01 	lds	r18, 0x0119
    16a0:	32 17       	cp	r19, r18
    16a2:	88 f4       	brcc	.+34     	; 0x16c6 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    16a4:	06 c0       	rjmp	.+12     	; 0x16b2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x3a>
    16a6:	80 91 17 01 	lds	r24, 0x0117
    16aa:	8f 5f       	subi	r24, 0xFF	; 255
    16ac:	80 93 17 01 	sts	0x0117, r24
    16b0:	ed cf       	rjmp	.-38     	; 0x168c <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    16b2:	20 91 17 01 	lds	r18, 0x0117
    16b6:	82 0f       	add	r24, r18
    16b8:	91 1d       	adc	r25, r1
    16ba:	fc 01       	movw	r30, r24
    16bc:	80 81       	ld	r24, Z
    16be:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <_ZN12OrangutanSVP17serialSendIfReadyEc>
    16c2:	88 23       	and	r24, r24
    16c4:	81 f7       	brne	.-32     	; 0x16a6 <_ZN15OrangutanSerial15serial_tx_checkEh+0x2e>
    16c6:	1f 91       	pop	r17
    16c8:	08 95       	ret

000016ca <_ZN15OrangutanSerial5checkEv>:
    16ca:	80 e0       	ldi	r24, 0x00	; 0
    16cc:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_ZN15OrangutanSerial15serial_tx_checkEh>
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_ZN15OrangutanSerial15serial_tx_checkEh>
    16d6:	82 e0       	ldi	r24, 0x02	; 2
    16d8:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_ZN15OrangutanSerial15serial_tx_checkEh>
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN15OrangutanSerial15serial_rx_checkEh>
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN15OrangutanSerial15serial_rx_checkEh>
    16e8:	82 e0       	ldi	r24, 0x02	; 2
    16ea:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN15OrangutanSerial15serial_rx_checkEh>
    16ee:	08 95       	ret

000016f0 <serial_check>:
    16f0:	0e 94 65 0b 	call	0x16ca	; 0x16ca <_ZN15OrangutanSerial5checkEv>
    16f4:	08 95       	ret

000016f6 <_ZN15OrangutanSerial4sendEhPch>:
    16f6:	28 2f       	mov	r18, r24
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	f9 01       	movw	r30, r18
    16fc:	ee 0f       	add	r30, r30
    16fe:	ff 1f       	adc	r31, r31
    1700:	93 e0       	ldi	r25, 0x03	; 3
    1702:	22 0f       	add	r18, r18
    1704:	33 1f       	adc	r19, r19
    1706:	9a 95       	dec	r25
    1708:	e1 f7       	brne	.-8      	; 0x1702 <_ZN15OrangutanSerial4sendEhPch+0xc>
    170a:	e2 0f       	add	r30, r18
    170c:	f3 1f       	adc	r31, r19
    170e:	ee 5f       	subi	r30, 0xFE	; 254
    1710:	fe 4f       	sbci	r31, 0xFE	; 254
    1712:	77 83       	std	Z+7, r23	; 0x07
    1714:	66 83       	std	Z+6, r22	; 0x06
    1716:	28 2f       	mov	r18, r24
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	f9 01       	movw	r30, r18
    171c:	ee 0f       	add	r30, r30
    171e:	ff 1f       	adc	r31, r31
    1720:	a3 e0       	ldi	r26, 0x03	; 3
    1722:	22 0f       	add	r18, r18
    1724:	33 1f       	adc	r19, r19
    1726:	aa 95       	dec	r26
    1728:	e1 f7       	brne	.-8      	; 0x1722 <_ZN15OrangutanSerial4sendEhPch+0x2c>
    172a:	e2 0f       	add	r30, r18
    172c:	f3 1f       	adc	r31, r19
    172e:	ee 5f       	subi	r30, 0xFE	; 254
    1730:	fe 4f       	sbci	r31, 0xFE	; 254
    1732:	11 82       	std	Z+1, r1	; 0x01
    1734:	28 2f       	mov	r18, r24
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	f9 01       	movw	r30, r18
    173a:	ee 0f       	add	r30, r30
    173c:	ff 1f       	adc	r31, r31
    173e:	63 e0       	ldi	r22, 0x03	; 3
    1740:	22 0f       	add	r18, r18
    1742:	33 1f       	adc	r19, r19
    1744:	6a 95       	dec	r22
    1746:	e1 f7       	brne	.-8      	; 0x1740 <_ZN15OrangutanSerial4sendEhPch+0x4a>
    1748:	e2 0f       	add	r30, r18
    174a:	f3 1f       	adc	r31, r19
    174c:	ee 5f       	subi	r30, 0xFE	; 254
    174e:	fe 4f       	sbci	r31, 0xFE	; 254
    1750:	43 83       	std	Z+3, r20	; 0x03
    1752:	82 30       	cpi	r24, 0x02	; 2
    1754:	11 f0       	breq	.+4      	; 0x175a <_ZN15OrangutanSerial4sendEhPch+0x64>
    1756:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    175a:	08 95       	ret

0000175c <serial_send>:
    175c:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <_ZN15OrangutanSerial4sendEhPch>
    1760:	08 95       	ret

00001762 <__vector_21>:
    1762:	1f 92       	push	r1
    1764:	0f 92       	push	r0
    1766:	0f b6       	in	r0, 0x3f	; 63
    1768:	0f 92       	push	r0
    176a:	0b b6       	in	r0, 0x3b	; 59
    176c:	0f 92       	push	r0
    176e:	11 24       	eor	r1, r1
    1770:	2f 93       	push	r18
    1772:	3f 93       	push	r19
    1774:	4f 93       	push	r20
    1776:	5f 93       	push	r21
    1778:	6f 93       	push	r22
    177a:	7f 93       	push	r23
    177c:	8f 93       	push	r24
    177e:	9f 93       	push	r25
    1780:	af 93       	push	r26
    1782:	bf 93       	push	r27
    1784:	ef 93       	push	r30
    1786:	ff 93       	push	r31
    1788:	80 e0       	ldi	r24, 0x00	; 0
    178a:	0e 94 c0 0a 	call	0x1580	; 0x1580 <_ZN15OrangutanSerial11uart_tx_isrEh>
    178e:	ff 91       	pop	r31
    1790:	ef 91       	pop	r30
    1792:	bf 91       	pop	r27
    1794:	af 91       	pop	r26
    1796:	9f 91       	pop	r25
    1798:	8f 91       	pop	r24
    179a:	7f 91       	pop	r23
    179c:	6f 91       	pop	r22
    179e:	5f 91       	pop	r21
    17a0:	4f 91       	pop	r20
    17a2:	3f 91       	pop	r19
    17a4:	2f 91       	pop	r18
    17a6:	0f 90       	pop	r0
    17a8:	0b be       	out	0x3b, r0	; 59
    17aa:	0f 90       	pop	r0
    17ac:	0f be       	out	0x3f, r0	; 63
    17ae:	0f 90       	pop	r0
    17b0:	1f 90       	pop	r1
    17b2:	18 95       	reti

000017b4 <__vector_29>:
    17b4:	1f 92       	push	r1
    17b6:	0f 92       	push	r0
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	0f 92       	push	r0
    17bc:	0b b6       	in	r0, 0x3b	; 59
    17be:	0f 92       	push	r0
    17c0:	11 24       	eor	r1, r1
    17c2:	2f 93       	push	r18
    17c4:	3f 93       	push	r19
    17c6:	4f 93       	push	r20
    17c8:	5f 93       	push	r21
    17ca:	6f 93       	push	r22
    17cc:	7f 93       	push	r23
    17ce:	8f 93       	push	r24
    17d0:	9f 93       	push	r25
    17d2:	af 93       	push	r26
    17d4:	bf 93       	push	r27
    17d6:	ef 93       	push	r30
    17d8:	ff 93       	push	r31
    17da:	81 e0       	ldi	r24, 0x01	; 1
    17dc:	0e 94 c0 0a 	call	0x1580	; 0x1580 <_ZN15OrangutanSerial11uart_tx_isrEh>
    17e0:	ff 91       	pop	r31
    17e2:	ef 91       	pop	r30
    17e4:	bf 91       	pop	r27
    17e6:	af 91       	pop	r26
    17e8:	9f 91       	pop	r25
    17ea:	8f 91       	pop	r24
    17ec:	7f 91       	pop	r23
    17ee:	6f 91       	pop	r22
    17f0:	5f 91       	pop	r21
    17f2:	4f 91       	pop	r20
    17f4:	3f 91       	pop	r19
    17f6:	2f 91       	pop	r18
    17f8:	0f 90       	pop	r0
    17fa:	0b be       	out	0x3b, r0	; 59
    17fc:	0f 90       	pop	r0
    17fe:	0f be       	out	0x3f, r0	; 63
    1800:	0f 90       	pop	r0
    1802:	1f 90       	pop	r1
    1804:	18 95       	reti

00001806 <_ZN13OrangutanTime17delayMicrosecondsEj>:
    1806:	6f 93       	push	r22
    1808:	64 e0       	ldi	r22, 0x04	; 4
    180a:	6a 95       	dec	r22
    180c:	f1 f7       	brne	.-4      	; 0x180a <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    180e:	6f 91       	pop	r22
    1810:	01 97       	sbiw	r24, 0x01	; 1
    1812:	c9 f7       	brne	.-14     	; 0x1806 <_ZN13OrangutanTime17delayMicrosecondsEj>
    1814:	08 95       	ret

00001816 <__vector_11>:
    1816:	2f 92       	push	r2
    1818:	8f 93       	push	r24
    181a:	9f 93       	push	r25
    181c:	2f b6       	in	r2, 0x3f	; 63
    181e:	80 91 6b 03 	lds	r24, 0x036B
    1822:	90 91 6c 03 	lds	r25, 0x036C
    1826:	01 96       	adiw	r24, 0x01	; 1
    1828:	80 93 6b 03 	sts	0x036B, r24
    182c:	90 93 6c 03 	sts	0x036C, r25
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	80 91 6d 03 	lds	r24, 0x036D
    1836:	89 1f       	adc	r24, r25
    1838:	80 93 6d 03 	sts	0x036D, r24
    183c:	90 91 73 03 	lds	r25, 0x0373
    1840:	9c 5f       	subi	r25, 0xFC	; 252
    1842:	90 93 73 03 	sts	0x0373, r25
    1846:	80 91 72 03 	lds	r24, 0x0372
    184a:	80 51       	subi	r24, 0x10	; 16
    184c:	97 42       	sbci	r25, 0x27	; 39
    184e:	c0 f0       	brcs	.+48     	; 0x1880 <end>
    1850:	90 93 73 03 	sts	0x0373, r25
    1854:	80 93 72 03 	sts	0x0372, r24
    1858:	80 91 6e 03 	lds	r24, 0x036E
    185c:	90 91 6f 03 	lds	r25, 0x036F
    1860:	01 96       	adiw	r24, 0x01	; 1
    1862:	80 93 6e 03 	sts	0x036E, r24
    1866:	90 93 6f 03 	sts	0x036F, r25
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	80 91 70 03 	lds	r24, 0x0370
    1870:	89 1f       	adc	r24, r25
    1872:	80 93 70 03 	sts	0x0370, r24
    1876:	80 91 71 03 	lds	r24, 0x0371
    187a:	89 1f       	adc	r24, r25
    187c:	80 93 71 03 	sts	0x0371, r24

00001880 <end>:
    1880:	2f be       	out	0x3f, r2	; 63
    1882:	9f 91       	pop	r25
    1884:	8f 91       	pop	r24
    1886:	2f 90       	pop	r2
    1888:	18 95       	reti

0000188a <_ZN13OrangutanTime17delayMillisecondsEj>:
    188a:	cf 93       	push	r28
    188c:	df 93       	push	r29
    188e:	ec 01       	movw	r28, r24
    1890:	05 c0       	rjmp	.+10     	; 0x189c <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    1892:	88 ee       	ldi	r24, 0xE8	; 232
    1894:	93 e0       	ldi	r25, 0x03	; 3
    1896:	0e 94 03 0c 	call	0x1806	; 0x1806 <_ZN13OrangutanTime17delayMicrosecondsEj>
    189a:	21 97       	sbiw	r28, 0x01	; 1
    189c:	20 97       	sbiw	r28, 0x00	; 0
    189e:	c9 f7       	brne	.-14     	; 0x1892 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    18a0:	df 91       	pop	r29
    18a2:	cf 91       	pop	r28
    18a4:	08 95       	ret

000018a6 <delay_ms>:
    18a6:	0e 94 45 0c 	call	0x188a	; 0x188a <_ZN13OrangutanTime17delayMillisecondsEj>
    18aa:	08 95       	ret

000018ac <_ZN12OrangutanSVP11getNextByteEv>:
    18ac:	8f ef       	ldi	r24, 0xFF	; 255
    18ae:	64 e0       	ldi	r22, 0x04	; 4
    18b0:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    18b4:	08 95       	ret

000018b6 <_ZN12OrangutanSVP15serialReadStartEv>:
    18b6:	83 e8       	ldi	r24, 0x83	; 131
    18b8:	67 e0       	ldi	r22, 0x07	; 7
    18ba:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    18be:	0e 94 56 0c 	call	0x18ac	; 0x18ac <_ZN12OrangutanSVP11getNextByteEv>
    18c2:	08 95       	ret

000018c4 <_ZN12OrangutanSVP17serialSendIfReadyEc>:
    18c4:	1f 93       	push	r17
    18c6:	18 2f       	mov	r17, r24
    18c8:	98 2f       	mov	r25, r24
    18ca:	90 95       	com	r25
    18cc:	99 1f       	adc	r25, r25
    18ce:	99 27       	eor	r25, r25
    18d0:	99 1f       	adc	r25, r25
    18d2:	85 e8       	ldi	r24, 0x85	; 133
    18d4:	89 1b       	sub	r24, r25
    18d6:	65 e0       	ldi	r22, 0x05	; 5
    18d8:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    18dc:	81 2f       	mov	r24, r17
    18de:	8f 77       	andi	r24, 0x7F	; 127
    18e0:	65 e0       	ldi	r22, 0x05	; 5
    18e2:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    18e6:	1f 91       	pop	r17
    18e8:	08 95       	ret

000018ea <delayMicroseconds>:
    18ea:	6f 93       	push	r22
    18ec:	64 e0       	ldi	r22, 0x04	; 4
    18ee:	6a 95       	dec	r22
    18f0:	f1 f7       	brne	.-4      	; 0x18ee <delayMicroseconds+0x4>
    18f2:	6f 91       	pop	r22
    18f4:	01 97       	sbiw	r24, 0x01	; 1
    18f6:	c9 f7       	brne	.-14     	; 0x18ea <delayMicroseconds>
    18f8:	08 95       	ret

000018fa <_ZN18OrangutanSPIMaster4initEhh>:
    18fa:	a1 e0       	ldi	r26, 0x01	; 1
    18fc:	b0 e0       	ldi	r27, 0x00	; 0
    18fe:	e3 e8       	ldi	r30, 0x83	; 131
    1900:	fc e0       	ldi	r31, 0x0C	; 12
    1902:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__prologue_saves__+0x1e>
    1906:	18 2f       	mov	r17, r24
    1908:	24 99       	sbic	0x04, 4	; 4
    190a:	09 c0       	rjmp	.+18     	; 0x191e <_ZN18OrangutanSPIMaster4initEhh+0x24>
    190c:	2c 99       	sbic	0x05, 4	; 5
    190e:	07 c0       	rjmp	.+14     	; 0x191e <_ZN18OrangutanSPIMaster4initEhh+0x24>
    1910:	2c 9a       	sbi	0x05, 4	; 5
    1912:	8e e1       	ldi	r24, 0x1E	; 30
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	69 83       	std	Y+1, r22	; 0x01
    1918:	0e 94 75 0c 	call	0x18ea	; 0x18ea <delayMicroseconds>
    191c:	69 81       	ldd	r22, Y+1	; 0x01
    191e:	84 b1       	in	r24, 0x04	; 4
    1920:	80 6a       	ori	r24, 0xA0	; 160
    1922:	84 b9       	out	0x04, r24	; 4
    1924:	26 98       	cbi	0x04, 6	; 4
    1926:	81 2f       	mov	r24, r17
    1928:	83 70       	andi	r24, 0x03	; 3
    192a:	80 65       	ori	r24, 0x50	; 80
    192c:	6c 7a       	andi	r22, 0xAC	; 172
    192e:	86 2b       	or	r24, r22
    1930:	8c bd       	out	0x2c, r24	; 44
    1932:	81 e0       	ldi	r24, 0x01	; 1
    1934:	12 ff       	sbrs	r17, 2
    1936:	80 e0       	ldi	r24, 0x00	; 0
    1938:	8d bd       	out	0x2d, r24	; 45
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	0e 94 45 0c 	call	0x188a	; 0x188a <_ZN13OrangutanTime17delayMillisecondsEj>
    1942:	21 96       	adiw	r28, 0x01	; 1
    1944:	e3 e0       	ldi	r30, 0x03	; 3
    1946:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__epilogue_restores__+0x1e>

0000194a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>:
    194a:	0f 93       	push	r16
    194c:	1f 93       	push	r17
    194e:	08 2f       	mov	r16, r24
    1950:	16 2f       	mov	r17, r22
    1952:	0c b4       	in	r0, 0x2c	; 44
    1954:	06 fc       	sbrc	r0, 6
    1956:	04 c0       	rjmp	.+8      	; 0x1960 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x16>
    1958:	80 e0       	ldi	r24, 0x00	; 0
    195a:	64 e0       	ldi	r22, 0x04	; 4
    195c:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <_ZN18OrangutanSPIMaster4initEhh>
    1960:	0c b4       	in	r0, 0x2c	; 44
    1962:	04 fc       	sbrc	r0, 4
    1964:	03 c0       	rjmp	.+6      	; 0x196c <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x22>
    1966:	8c b5       	in	r24, 0x2c	; 44
    1968:	80 61       	ori	r24, 0x10	; 16
    196a:	8c bd       	out	0x2c, r24	; 44
    196c:	0e bd       	out	0x2e, r16	; 46
    196e:	03 c0       	rjmp	.+6      	; 0x1976 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x2c>
    1970:	0c b4       	in	r0, 0x2c	; 44
    1972:	04 fe       	sbrs	r0, 4
    1974:	0b c0       	rjmp	.+22     	; 0x198c <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x42>
    1976:	0d b4       	in	r0, 0x2d	; 45
    1978:	07 fe       	sbrs	r0, 7
    197a:	fa cf       	rjmp	.-12     	; 0x1970 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x26>
    197c:	11 23       	and	r17, r17
    197e:	21 f0       	breq	.+8      	; 0x1988 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x3e>
    1980:	81 2f       	mov	r24, r17
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	0e 94 75 0c 	call	0x18ea	; 0x18ea <delayMicroseconds>
    1988:	8e b5       	in	r24, 0x2e	; 46
    198a:	01 c0       	rjmp	.+2      	; 0x198e <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x44>
    198c:	80 e0       	ldi	r24, 0x00	; 0
    198e:	1f 91       	pop	r17
    1990:	0f 91       	pop	r16
    1992:	08 95       	ret

00001994 <__mulsi3>:
    1994:	db 01       	movw	r26, r22
    1996:	8f 93       	push	r24
    1998:	9f 93       	push	r25
    199a:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__muluhisi3>
    199e:	bf 91       	pop	r27
    19a0:	af 91       	pop	r26
    19a2:	a2 9f       	mul	r26, r18
    19a4:	80 0d       	add	r24, r0
    19a6:	91 1d       	adc	r25, r1
    19a8:	a3 9f       	mul	r26, r19
    19aa:	90 0d       	add	r25, r0
    19ac:	b2 9f       	mul	r27, r18
    19ae:	90 0d       	add	r25, r0
    19b0:	11 24       	eor	r1, r1
    19b2:	08 95       	ret

000019b4 <__divmodhi4>:
    19b4:	97 fb       	bst	r25, 7
    19b6:	07 2e       	mov	r0, r23
    19b8:	16 f4       	brtc	.+4      	; 0x19be <__divmodhi4+0xa>
    19ba:	00 94       	com	r0
    19bc:	07 d0       	rcall	.+14     	; 0x19cc <__divmodhi4_neg1>
    19be:	77 fd       	sbrc	r23, 7
    19c0:	09 d0       	rcall	.+18     	; 0x19d4 <__divmodhi4_neg2>
    19c2:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__udivmodhi4>
    19c6:	07 fc       	sbrc	r0, 7
    19c8:	05 d0       	rcall	.+10     	; 0x19d4 <__divmodhi4_neg2>
    19ca:	3e f4       	brtc	.+14     	; 0x19da <__divmodhi4_exit>

000019cc <__divmodhi4_neg1>:
    19cc:	90 95       	com	r25
    19ce:	81 95       	neg	r24
    19d0:	9f 4f       	sbci	r25, 0xFF	; 255
    19d2:	08 95       	ret

000019d4 <__divmodhi4_neg2>:
    19d4:	70 95       	com	r23
    19d6:	61 95       	neg	r22
    19d8:	7f 4f       	sbci	r23, 0xFF	; 255

000019da <__divmodhi4_exit>:
    19da:	08 95       	ret

000019dc <__udivmodsi4>:
    19dc:	a1 e2       	ldi	r26, 0x21	; 33
    19de:	1a 2e       	mov	r1, r26
    19e0:	aa 1b       	sub	r26, r26
    19e2:	bb 1b       	sub	r27, r27
    19e4:	fd 01       	movw	r30, r26
    19e6:	0d c0       	rjmp	.+26     	; 0x1a02 <__udivmodsi4_ep>

000019e8 <__udivmodsi4_loop>:
    19e8:	aa 1f       	adc	r26, r26
    19ea:	bb 1f       	adc	r27, r27
    19ec:	ee 1f       	adc	r30, r30
    19ee:	ff 1f       	adc	r31, r31
    19f0:	a2 17       	cp	r26, r18
    19f2:	b3 07       	cpc	r27, r19
    19f4:	e4 07       	cpc	r30, r20
    19f6:	f5 07       	cpc	r31, r21
    19f8:	20 f0       	brcs	.+8      	; 0x1a02 <__udivmodsi4_ep>
    19fa:	a2 1b       	sub	r26, r18
    19fc:	b3 0b       	sbc	r27, r19
    19fe:	e4 0b       	sbc	r30, r20
    1a00:	f5 0b       	sbc	r31, r21

00001a02 <__udivmodsi4_ep>:
    1a02:	66 1f       	adc	r22, r22
    1a04:	77 1f       	adc	r23, r23
    1a06:	88 1f       	adc	r24, r24
    1a08:	99 1f       	adc	r25, r25
    1a0a:	1a 94       	dec	r1
    1a0c:	69 f7       	brne	.-38     	; 0x19e8 <__udivmodsi4_loop>
    1a0e:	60 95       	com	r22
    1a10:	70 95       	com	r23
    1a12:	80 95       	com	r24
    1a14:	90 95       	com	r25
    1a16:	9b 01       	movw	r18, r22
    1a18:	ac 01       	movw	r20, r24
    1a1a:	bd 01       	movw	r22, r26
    1a1c:	cf 01       	movw	r24, r30
    1a1e:	08 95       	ret

00001a20 <__muluhisi3>:
    1a20:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__umulhisi3>
    1a24:	a5 9f       	mul	r26, r21
    1a26:	90 0d       	add	r25, r0
    1a28:	b4 9f       	mul	r27, r20
    1a2a:	90 0d       	add	r25, r0
    1a2c:	a4 9f       	mul	r26, r20
    1a2e:	80 0d       	add	r24, r0
    1a30:	91 1d       	adc	r25, r1
    1a32:	11 24       	eor	r1, r1
    1a34:	08 95       	ret

00001a36 <__prologue_saves__>:
    1a36:	2f 92       	push	r2
    1a38:	3f 92       	push	r3
    1a3a:	4f 92       	push	r4
    1a3c:	5f 92       	push	r5
    1a3e:	6f 92       	push	r6
    1a40:	7f 92       	push	r7
    1a42:	8f 92       	push	r8
    1a44:	9f 92       	push	r9
    1a46:	af 92       	push	r10
    1a48:	bf 92       	push	r11
    1a4a:	cf 92       	push	r12
    1a4c:	df 92       	push	r13
    1a4e:	ef 92       	push	r14
    1a50:	ff 92       	push	r15
    1a52:	0f 93       	push	r16
    1a54:	1f 93       	push	r17
    1a56:	cf 93       	push	r28
    1a58:	df 93       	push	r29
    1a5a:	cd b7       	in	r28, 0x3d	; 61
    1a5c:	de b7       	in	r29, 0x3e	; 62
    1a5e:	ca 1b       	sub	r28, r26
    1a60:	db 0b       	sbc	r29, r27
    1a62:	0f b6       	in	r0, 0x3f	; 63
    1a64:	f8 94       	cli
    1a66:	de bf       	out	0x3e, r29	; 62
    1a68:	0f be       	out	0x3f, r0	; 63
    1a6a:	cd bf       	out	0x3d, r28	; 61
    1a6c:	09 94       	ijmp

00001a6e <__epilogue_restores__>:
    1a6e:	2a 88       	ldd	r2, Y+18	; 0x12
    1a70:	39 88       	ldd	r3, Y+17	; 0x11
    1a72:	48 88       	ldd	r4, Y+16	; 0x10
    1a74:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a76:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a78:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a7a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a7c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a7e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a80:	b9 84       	ldd	r11, Y+9	; 0x09
    1a82:	c8 84       	ldd	r12, Y+8	; 0x08
    1a84:	df 80       	ldd	r13, Y+7	; 0x07
    1a86:	ee 80       	ldd	r14, Y+6	; 0x06
    1a88:	fd 80       	ldd	r15, Y+5	; 0x05
    1a8a:	0c 81       	ldd	r16, Y+4	; 0x04
    1a8c:	1b 81       	ldd	r17, Y+3	; 0x03
    1a8e:	aa 81       	ldd	r26, Y+2	; 0x02
    1a90:	b9 81       	ldd	r27, Y+1	; 0x01
    1a92:	ce 0f       	add	r28, r30
    1a94:	d1 1d       	adc	r29, r1
    1a96:	0f b6       	in	r0, 0x3f	; 63
    1a98:	f8 94       	cli
    1a9a:	de bf       	out	0x3e, r29	; 62
    1a9c:	0f be       	out	0x3f, r0	; 63
    1a9e:	cd bf       	out	0x3d, r28	; 61
    1aa0:	ed 01       	movw	r28, r26
    1aa2:	08 95       	ret

00001aa4 <__udivmodhi4>:
    1aa4:	aa 1b       	sub	r26, r26
    1aa6:	bb 1b       	sub	r27, r27
    1aa8:	51 e1       	ldi	r21, 0x11	; 17
    1aaa:	07 c0       	rjmp	.+14     	; 0x1aba <__udivmodhi4_ep>

00001aac <__udivmodhi4_loop>:
    1aac:	aa 1f       	adc	r26, r26
    1aae:	bb 1f       	adc	r27, r27
    1ab0:	a6 17       	cp	r26, r22
    1ab2:	b7 07       	cpc	r27, r23
    1ab4:	10 f0       	brcs	.+4      	; 0x1aba <__udivmodhi4_ep>
    1ab6:	a6 1b       	sub	r26, r22
    1ab8:	b7 0b       	sbc	r27, r23

00001aba <__udivmodhi4_ep>:
    1aba:	88 1f       	adc	r24, r24
    1abc:	99 1f       	adc	r25, r25
    1abe:	5a 95       	dec	r21
    1ac0:	a9 f7       	brne	.-22     	; 0x1aac <__udivmodhi4_loop>
    1ac2:	80 95       	com	r24
    1ac4:	90 95       	com	r25
    1ac6:	bc 01       	movw	r22, r24
    1ac8:	cd 01       	movw	r24, r26
    1aca:	08 95       	ret

00001acc <__umulhisi3>:
    1acc:	a2 9f       	mul	r26, r18
    1ace:	b0 01       	movw	r22, r0
    1ad0:	b3 9f       	mul	r27, r19
    1ad2:	c0 01       	movw	r24, r0
    1ad4:	a3 9f       	mul	r26, r19
    1ad6:	70 0d       	add	r23, r0
    1ad8:	81 1d       	adc	r24, r1
    1ada:	11 24       	eor	r1, r1
    1adc:	91 1d       	adc	r25, r1
    1ade:	b2 9f       	mul	r27, r18
    1ae0:	70 0d       	add	r23, r0
    1ae2:	81 1d       	adc	r24, r1
    1ae4:	11 24       	eor	r1, r1
    1ae6:	91 1d       	adc	r25, r1
    1ae8:	08 95       	ret

00001aea <malloc>:
    1aea:	cf 93       	push	r28
    1aec:	df 93       	push	r29
    1aee:	82 30       	cpi	r24, 0x02	; 2
    1af0:	91 05       	cpc	r25, r1
    1af2:	10 f4       	brcc	.+4      	; 0x1af8 <malloc+0xe>
    1af4:	82 e0       	ldi	r24, 0x02	; 2
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	e0 91 d6 03 	lds	r30, 0x03D6
    1afc:	f0 91 d7 03 	lds	r31, 0x03D7
    1b00:	20 e0       	ldi	r18, 0x00	; 0
    1b02:	30 e0       	ldi	r19, 0x00	; 0
    1b04:	a0 e0       	ldi	r26, 0x00	; 0
    1b06:	b0 e0       	ldi	r27, 0x00	; 0
    1b08:	30 97       	sbiw	r30, 0x00	; 0
    1b0a:	39 f1       	breq	.+78     	; 0x1b5a <malloc+0x70>
    1b0c:	40 81       	ld	r20, Z
    1b0e:	51 81       	ldd	r21, Z+1	; 0x01
    1b10:	48 17       	cp	r20, r24
    1b12:	59 07       	cpc	r21, r25
    1b14:	b8 f0       	brcs	.+46     	; 0x1b44 <malloc+0x5a>
    1b16:	48 17       	cp	r20, r24
    1b18:	59 07       	cpc	r21, r25
    1b1a:	71 f4       	brne	.+28     	; 0x1b38 <malloc+0x4e>
    1b1c:	82 81       	ldd	r24, Z+2	; 0x02
    1b1e:	93 81       	ldd	r25, Z+3	; 0x03
    1b20:	10 97       	sbiw	r26, 0x00	; 0
    1b22:	29 f0       	breq	.+10     	; 0x1b2e <malloc+0x44>
    1b24:	13 96       	adiw	r26, 0x03	; 3
    1b26:	9c 93       	st	X, r25
    1b28:	8e 93       	st	-X, r24
    1b2a:	12 97       	sbiw	r26, 0x02	; 2
    1b2c:	2c c0       	rjmp	.+88     	; 0x1b86 <malloc+0x9c>
    1b2e:	90 93 d7 03 	sts	0x03D7, r25
    1b32:	80 93 d6 03 	sts	0x03D6, r24
    1b36:	27 c0       	rjmp	.+78     	; 0x1b86 <malloc+0x9c>
    1b38:	21 15       	cp	r18, r1
    1b3a:	31 05       	cpc	r19, r1
    1b3c:	31 f0       	breq	.+12     	; 0x1b4a <malloc+0x60>
    1b3e:	42 17       	cp	r20, r18
    1b40:	53 07       	cpc	r21, r19
    1b42:	18 f0       	brcs	.+6      	; 0x1b4a <malloc+0x60>
    1b44:	a9 01       	movw	r20, r18
    1b46:	db 01       	movw	r26, r22
    1b48:	01 c0       	rjmp	.+2      	; 0x1b4c <malloc+0x62>
    1b4a:	ef 01       	movw	r28, r30
    1b4c:	9a 01       	movw	r18, r20
    1b4e:	bd 01       	movw	r22, r26
    1b50:	df 01       	movw	r26, r30
    1b52:	02 80       	ldd	r0, Z+2	; 0x02
    1b54:	f3 81       	ldd	r31, Z+3	; 0x03
    1b56:	e0 2d       	mov	r30, r0
    1b58:	d7 cf       	rjmp	.-82     	; 0x1b08 <malloc+0x1e>
    1b5a:	21 15       	cp	r18, r1
    1b5c:	31 05       	cpc	r19, r1
    1b5e:	f9 f0       	breq	.+62     	; 0x1b9e <malloc+0xb4>
    1b60:	28 1b       	sub	r18, r24
    1b62:	39 0b       	sbc	r19, r25
    1b64:	24 30       	cpi	r18, 0x04	; 4
    1b66:	31 05       	cpc	r19, r1
    1b68:	80 f4       	brcc	.+32     	; 0x1b8a <malloc+0xa0>
    1b6a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b6c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b6e:	61 15       	cp	r22, r1
    1b70:	71 05       	cpc	r23, r1
    1b72:	21 f0       	breq	.+8      	; 0x1b7c <malloc+0x92>
    1b74:	fb 01       	movw	r30, r22
    1b76:	93 83       	std	Z+3, r25	; 0x03
    1b78:	82 83       	std	Z+2, r24	; 0x02
    1b7a:	04 c0       	rjmp	.+8      	; 0x1b84 <malloc+0x9a>
    1b7c:	90 93 d7 03 	sts	0x03D7, r25
    1b80:	80 93 d6 03 	sts	0x03D6, r24
    1b84:	fe 01       	movw	r30, r28
    1b86:	32 96       	adiw	r30, 0x02	; 2
    1b88:	44 c0       	rjmp	.+136    	; 0x1c12 <malloc+0x128>
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	e2 0f       	add	r30, r18
    1b8e:	f3 1f       	adc	r31, r19
    1b90:	81 93       	st	Z+, r24
    1b92:	91 93       	st	Z+, r25
    1b94:	22 50       	subi	r18, 0x02	; 2
    1b96:	31 09       	sbc	r19, r1
    1b98:	39 83       	std	Y+1, r19	; 0x01
    1b9a:	28 83       	st	Y, r18
    1b9c:	3a c0       	rjmp	.+116    	; 0x1c12 <malloc+0x128>
    1b9e:	20 91 d4 03 	lds	r18, 0x03D4
    1ba2:	30 91 d5 03 	lds	r19, 0x03D5
    1ba6:	23 2b       	or	r18, r19
    1ba8:	41 f4       	brne	.+16     	; 0x1bba <malloc+0xd0>
    1baa:	20 91 22 01 	lds	r18, 0x0122
    1bae:	30 91 23 01 	lds	r19, 0x0123
    1bb2:	30 93 d5 03 	sts	0x03D5, r19
    1bb6:	20 93 d4 03 	sts	0x03D4, r18
    1bba:	20 91 20 01 	lds	r18, 0x0120
    1bbe:	30 91 21 01 	lds	r19, 0x0121
    1bc2:	21 15       	cp	r18, r1
    1bc4:	31 05       	cpc	r19, r1
    1bc6:	41 f4       	brne	.+16     	; 0x1bd8 <malloc+0xee>
    1bc8:	2d b7       	in	r18, 0x3d	; 61
    1bca:	3e b7       	in	r19, 0x3e	; 62
    1bcc:	40 91 24 01 	lds	r20, 0x0124
    1bd0:	50 91 25 01 	lds	r21, 0x0125
    1bd4:	24 1b       	sub	r18, r20
    1bd6:	35 0b       	sbc	r19, r21
    1bd8:	e0 91 d4 03 	lds	r30, 0x03D4
    1bdc:	f0 91 d5 03 	lds	r31, 0x03D5
    1be0:	e2 17       	cp	r30, r18
    1be2:	f3 07       	cpc	r31, r19
    1be4:	a0 f4       	brcc	.+40     	; 0x1c0e <malloc+0x124>
    1be6:	2e 1b       	sub	r18, r30
    1be8:	3f 0b       	sbc	r19, r31
    1bea:	28 17       	cp	r18, r24
    1bec:	39 07       	cpc	r19, r25
    1bee:	78 f0       	brcs	.+30     	; 0x1c0e <malloc+0x124>
    1bf0:	ac 01       	movw	r20, r24
    1bf2:	4e 5f       	subi	r20, 0xFE	; 254
    1bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf6:	24 17       	cp	r18, r20
    1bf8:	35 07       	cpc	r19, r21
    1bfa:	48 f0       	brcs	.+18     	; 0x1c0e <malloc+0x124>
    1bfc:	4e 0f       	add	r20, r30
    1bfe:	5f 1f       	adc	r21, r31
    1c00:	50 93 d5 03 	sts	0x03D5, r21
    1c04:	40 93 d4 03 	sts	0x03D4, r20
    1c08:	81 93       	st	Z+, r24
    1c0a:	91 93       	st	Z+, r25
    1c0c:	02 c0       	rjmp	.+4      	; 0x1c12 <malloc+0x128>
    1c0e:	e0 e0       	ldi	r30, 0x00	; 0
    1c10:	f0 e0       	ldi	r31, 0x00	; 0
    1c12:	cf 01       	movw	r24, r30
    1c14:	df 91       	pop	r29
    1c16:	cf 91       	pop	r28
    1c18:	08 95       	ret

00001c1a <free>:
    1c1a:	cf 93       	push	r28
    1c1c:	df 93       	push	r29
    1c1e:	00 97       	sbiw	r24, 0x00	; 0
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <free+0xa>
    1c22:	87 c0       	rjmp	.+270    	; 0x1d32 <free+0x118>
    1c24:	fc 01       	movw	r30, r24
    1c26:	32 97       	sbiw	r30, 0x02	; 2
    1c28:	13 82       	std	Z+3, r1	; 0x03
    1c2a:	12 82       	std	Z+2, r1	; 0x02
    1c2c:	c0 91 d6 03 	lds	r28, 0x03D6
    1c30:	d0 91 d7 03 	lds	r29, 0x03D7
    1c34:	20 97       	sbiw	r28, 0x00	; 0
    1c36:	81 f4       	brne	.+32     	; 0x1c58 <free+0x3e>
    1c38:	20 81       	ld	r18, Z
    1c3a:	31 81       	ldd	r19, Z+1	; 0x01
    1c3c:	28 0f       	add	r18, r24
    1c3e:	39 1f       	adc	r19, r25
    1c40:	80 91 d4 03 	lds	r24, 0x03D4
    1c44:	90 91 d5 03 	lds	r25, 0x03D5
    1c48:	82 17       	cp	r24, r18
    1c4a:	93 07       	cpc	r25, r19
    1c4c:	79 f5       	brne	.+94     	; 0x1cac <free+0x92>
    1c4e:	f0 93 d5 03 	sts	0x03D5, r31
    1c52:	e0 93 d4 03 	sts	0x03D4, r30
    1c56:	6d c0       	rjmp	.+218    	; 0x1d32 <free+0x118>
    1c58:	de 01       	movw	r26, r28
    1c5a:	20 e0       	ldi	r18, 0x00	; 0
    1c5c:	30 e0       	ldi	r19, 0x00	; 0
    1c5e:	ae 17       	cp	r26, r30
    1c60:	bf 07       	cpc	r27, r31
    1c62:	50 f4       	brcc	.+20     	; 0x1c78 <free+0x5e>
    1c64:	12 96       	adiw	r26, 0x02	; 2
    1c66:	4d 91       	ld	r20, X+
    1c68:	5c 91       	ld	r21, X
    1c6a:	13 97       	sbiw	r26, 0x03	; 3
    1c6c:	9d 01       	movw	r18, r26
    1c6e:	41 15       	cp	r20, r1
    1c70:	51 05       	cpc	r21, r1
    1c72:	09 f1       	breq	.+66     	; 0x1cb6 <free+0x9c>
    1c74:	da 01       	movw	r26, r20
    1c76:	f3 cf       	rjmp	.-26     	; 0x1c5e <free+0x44>
    1c78:	b3 83       	std	Z+3, r27	; 0x03
    1c7a:	a2 83       	std	Z+2, r26	; 0x02
    1c7c:	40 81       	ld	r20, Z
    1c7e:	51 81       	ldd	r21, Z+1	; 0x01
    1c80:	84 0f       	add	r24, r20
    1c82:	95 1f       	adc	r25, r21
    1c84:	8a 17       	cp	r24, r26
    1c86:	9b 07       	cpc	r25, r27
    1c88:	71 f4       	brne	.+28     	; 0x1ca6 <free+0x8c>
    1c8a:	8d 91       	ld	r24, X+
    1c8c:	9c 91       	ld	r25, X
    1c8e:	11 97       	sbiw	r26, 0x01	; 1
    1c90:	84 0f       	add	r24, r20
    1c92:	95 1f       	adc	r25, r21
    1c94:	02 96       	adiw	r24, 0x02	; 2
    1c96:	91 83       	std	Z+1, r25	; 0x01
    1c98:	80 83       	st	Z, r24
    1c9a:	12 96       	adiw	r26, 0x02	; 2
    1c9c:	8d 91       	ld	r24, X+
    1c9e:	9c 91       	ld	r25, X
    1ca0:	13 97       	sbiw	r26, 0x03	; 3
    1ca2:	93 83       	std	Z+3, r25	; 0x03
    1ca4:	82 83       	std	Z+2, r24	; 0x02
    1ca6:	21 15       	cp	r18, r1
    1ca8:	31 05       	cpc	r19, r1
    1caa:	29 f4       	brne	.+10     	; 0x1cb6 <free+0x9c>
    1cac:	f0 93 d7 03 	sts	0x03D7, r31
    1cb0:	e0 93 d6 03 	sts	0x03D6, r30
    1cb4:	3e c0       	rjmp	.+124    	; 0x1d32 <free+0x118>
    1cb6:	d9 01       	movw	r26, r18
    1cb8:	13 96       	adiw	r26, 0x03	; 3
    1cba:	fc 93       	st	X, r31
    1cbc:	ee 93       	st	-X, r30
    1cbe:	12 97       	sbiw	r26, 0x02	; 2
    1cc0:	4d 91       	ld	r20, X+
    1cc2:	5d 91       	ld	r21, X+
    1cc4:	a4 0f       	add	r26, r20
    1cc6:	b5 1f       	adc	r27, r21
    1cc8:	ea 17       	cp	r30, r26
    1cca:	fb 07       	cpc	r31, r27
    1ccc:	79 f4       	brne	.+30     	; 0x1cec <free+0xd2>
    1cce:	80 81       	ld	r24, Z
    1cd0:	91 81       	ldd	r25, Z+1	; 0x01
    1cd2:	84 0f       	add	r24, r20
    1cd4:	95 1f       	adc	r25, r21
    1cd6:	02 96       	adiw	r24, 0x02	; 2
    1cd8:	d9 01       	movw	r26, r18
    1cda:	11 96       	adiw	r26, 0x01	; 1
    1cdc:	9c 93       	st	X, r25
    1cde:	8e 93       	st	-X, r24
    1ce0:	82 81       	ldd	r24, Z+2	; 0x02
    1ce2:	93 81       	ldd	r25, Z+3	; 0x03
    1ce4:	13 96       	adiw	r26, 0x03	; 3
    1ce6:	9c 93       	st	X, r25
    1ce8:	8e 93       	st	-X, r24
    1cea:	12 97       	sbiw	r26, 0x02	; 2
    1cec:	e0 e0       	ldi	r30, 0x00	; 0
    1cee:	f0 e0       	ldi	r31, 0x00	; 0
    1cf0:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf2:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf4:	00 97       	sbiw	r24, 0x00	; 0
    1cf6:	19 f0       	breq	.+6      	; 0x1cfe <free+0xe4>
    1cf8:	fe 01       	movw	r30, r28
    1cfa:	ec 01       	movw	r28, r24
    1cfc:	f9 cf       	rjmp	.-14     	; 0x1cf0 <free+0xd6>
    1cfe:	ce 01       	movw	r24, r28
    1d00:	02 96       	adiw	r24, 0x02	; 2
    1d02:	28 81       	ld	r18, Y
    1d04:	39 81       	ldd	r19, Y+1	; 0x01
    1d06:	82 0f       	add	r24, r18
    1d08:	93 1f       	adc	r25, r19
    1d0a:	20 91 d4 03 	lds	r18, 0x03D4
    1d0e:	30 91 d5 03 	lds	r19, 0x03D5
    1d12:	28 17       	cp	r18, r24
    1d14:	39 07       	cpc	r19, r25
    1d16:	69 f4       	brne	.+26     	; 0x1d32 <free+0x118>
    1d18:	30 97       	sbiw	r30, 0x00	; 0
    1d1a:	29 f4       	brne	.+10     	; 0x1d26 <free+0x10c>
    1d1c:	10 92 d7 03 	sts	0x03D7, r1
    1d20:	10 92 d6 03 	sts	0x03D6, r1
    1d24:	02 c0       	rjmp	.+4      	; 0x1d2a <free+0x110>
    1d26:	13 82       	std	Z+3, r1	; 0x03
    1d28:	12 82       	std	Z+2, r1	; 0x02
    1d2a:	d0 93 d5 03 	sts	0x03D5, r29
    1d2e:	c0 93 d4 03 	sts	0x03D4, r28
    1d32:	df 91       	pop	r29
    1d34:	cf 91       	pop	r28
    1d36:	08 95       	ret

00001d38 <fdevopen>:
    1d38:	0f 93       	push	r16
    1d3a:	1f 93       	push	r17
    1d3c:	cf 93       	push	r28
    1d3e:	df 93       	push	r29
    1d40:	ec 01       	movw	r28, r24
    1d42:	8b 01       	movw	r16, r22
    1d44:	00 97       	sbiw	r24, 0x00	; 0
    1d46:	31 f4       	brne	.+12     	; 0x1d54 <fdevopen+0x1c>
    1d48:	61 15       	cp	r22, r1
    1d4a:	71 05       	cpc	r23, r1
    1d4c:	19 f4       	brne	.+6      	; 0x1d54 <fdevopen+0x1c>
    1d4e:	80 e0       	ldi	r24, 0x00	; 0
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	38 c0       	rjmp	.+112    	; 0x1dc4 <fdevopen+0x8c>
    1d54:	6e e0       	ldi	r22, 0x0E	; 14
    1d56:	70 e0       	ldi	r23, 0x00	; 0
    1d58:	81 e0       	ldi	r24, 0x01	; 1
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	0e 94 46 14 	call	0x288c	; 0x288c <calloc>
    1d60:	fc 01       	movw	r30, r24
    1d62:	00 97       	sbiw	r24, 0x00	; 0
    1d64:	a1 f3       	breq	.-24     	; 0x1d4e <fdevopen+0x16>
    1d66:	80 e8       	ldi	r24, 0x80	; 128
    1d68:	83 83       	std	Z+3, r24	; 0x03
    1d6a:	01 15       	cp	r16, r1
    1d6c:	11 05       	cpc	r17, r1
    1d6e:	71 f0       	breq	.+28     	; 0x1d8c <fdevopen+0x54>
    1d70:	13 87       	std	Z+11, r17	; 0x0b
    1d72:	02 87       	std	Z+10, r16	; 0x0a
    1d74:	81 e8       	ldi	r24, 0x81	; 129
    1d76:	83 83       	std	Z+3, r24	; 0x03
    1d78:	80 91 d8 03 	lds	r24, 0x03D8
    1d7c:	90 91 d9 03 	lds	r25, 0x03D9
    1d80:	89 2b       	or	r24, r25
    1d82:	21 f4       	brne	.+8      	; 0x1d8c <fdevopen+0x54>
    1d84:	f0 93 d9 03 	sts	0x03D9, r31
    1d88:	e0 93 d8 03 	sts	0x03D8, r30
    1d8c:	20 97       	sbiw	r28, 0x00	; 0
    1d8e:	c9 f0       	breq	.+50     	; 0x1dc2 <fdevopen+0x8a>
    1d90:	d1 87       	std	Z+9, r29	; 0x09
    1d92:	c0 87       	std	Z+8, r28	; 0x08
    1d94:	83 81       	ldd	r24, Z+3	; 0x03
    1d96:	82 60       	ori	r24, 0x02	; 2
    1d98:	83 83       	std	Z+3, r24	; 0x03
    1d9a:	80 91 da 03 	lds	r24, 0x03DA
    1d9e:	90 91 db 03 	lds	r25, 0x03DB
    1da2:	89 2b       	or	r24, r25
    1da4:	71 f4       	brne	.+28     	; 0x1dc2 <fdevopen+0x8a>
    1da6:	f0 93 db 03 	sts	0x03DB, r31
    1daa:	e0 93 da 03 	sts	0x03DA, r30
    1dae:	80 91 dc 03 	lds	r24, 0x03DC
    1db2:	90 91 dd 03 	lds	r25, 0x03DD
    1db6:	89 2b       	or	r24, r25
    1db8:	21 f4       	brne	.+8      	; 0x1dc2 <fdevopen+0x8a>
    1dba:	f0 93 dd 03 	sts	0x03DD, r31
    1dbe:	e0 93 dc 03 	sts	0x03DC, r30
    1dc2:	cf 01       	movw	r24, r30
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	1f 91       	pop	r17
    1dca:	0f 91       	pop	r16
    1dcc:	08 95       	ret

00001dce <printf>:
    1dce:	cf 93       	push	r28
    1dd0:	df 93       	push	r29
    1dd2:	cd b7       	in	r28, 0x3d	; 61
    1dd4:	de b7       	in	r29, 0x3e	; 62
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	35 96       	adiw	r30, 0x05	; 5
    1dda:	61 91       	ld	r22, Z+
    1ddc:	71 91       	ld	r23, Z+
    1dde:	af 01       	movw	r20, r30
    1de0:	80 91 da 03 	lds	r24, 0x03DA
    1de4:	90 91 db 03 	lds	r25, 0x03DB
    1de8:	0e 94 77 0f 	call	0x1eee	; 0x1eee <vfprintf>
    1dec:	df 91       	pop	r29
    1dee:	cf 91       	pop	r28
    1df0:	08 95       	ret

00001df2 <puts>:
    1df2:	0f 93       	push	r16
    1df4:	1f 93       	push	r17
    1df6:	cf 93       	push	r28
    1df8:	df 93       	push	r29
    1dfa:	e0 91 da 03 	lds	r30, 0x03DA
    1dfe:	f0 91 db 03 	lds	r31, 0x03DB
    1e02:	23 81       	ldd	r18, Z+3	; 0x03
    1e04:	21 ff       	sbrs	r18, 1
    1e06:	1b c0       	rjmp	.+54     	; 0x1e3e <puts+0x4c>
    1e08:	ec 01       	movw	r28, r24
    1e0a:	00 e0       	ldi	r16, 0x00	; 0
    1e0c:	10 e0       	ldi	r17, 0x00	; 0
    1e0e:	89 91       	ld	r24, Y+
    1e10:	60 91 da 03 	lds	r22, 0x03DA
    1e14:	70 91 db 03 	lds	r23, 0x03DB
    1e18:	db 01       	movw	r26, r22
    1e1a:	18 96       	adiw	r26, 0x08	; 8
    1e1c:	ed 91       	ld	r30, X+
    1e1e:	fc 91       	ld	r31, X
    1e20:	19 97       	sbiw	r26, 0x09	; 9
    1e22:	88 23       	and	r24, r24
    1e24:	31 f0       	breq	.+12     	; 0x1e32 <puts+0x40>
    1e26:	09 95       	icall
    1e28:	89 2b       	or	r24, r25
    1e2a:	89 f3       	breq	.-30     	; 0x1e0e <puts+0x1c>
    1e2c:	0f ef       	ldi	r16, 0xFF	; 255
    1e2e:	1f ef       	ldi	r17, 0xFF	; 255
    1e30:	ee cf       	rjmp	.-36     	; 0x1e0e <puts+0x1c>
    1e32:	8a e0       	ldi	r24, 0x0A	; 10
    1e34:	09 95       	icall
    1e36:	89 2b       	or	r24, r25
    1e38:	11 f4       	brne	.+4      	; 0x1e3e <puts+0x4c>
    1e3a:	c8 01       	movw	r24, r16
    1e3c:	02 c0       	rjmp	.+4      	; 0x1e42 <puts+0x50>
    1e3e:	8f ef       	ldi	r24, 0xFF	; 255
    1e40:	9f ef       	ldi	r25, 0xFF	; 255
    1e42:	df 91       	pop	r29
    1e44:	cf 91       	pop	r28
    1e46:	1f 91       	pop	r17
    1e48:	0f 91       	pop	r16
    1e4a:	08 95       	ret

00001e4c <sprintf>:
    1e4c:	0f 93       	push	r16
    1e4e:	1f 93       	push	r17
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	cd b7       	in	r28, 0x3d	; 61
    1e56:	de b7       	in	r29, 0x3e	; 62
    1e58:	2e 97       	sbiw	r28, 0x0e	; 14
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	f8 94       	cli
    1e5e:	de bf       	out	0x3e, r29	; 62
    1e60:	0f be       	out	0x3f, r0	; 63
    1e62:	cd bf       	out	0x3d, r28	; 61
    1e64:	0d 89       	ldd	r16, Y+21	; 0x15
    1e66:	1e 89       	ldd	r17, Y+22	; 0x16
    1e68:	86 e0       	ldi	r24, 0x06	; 6
    1e6a:	8c 83       	std	Y+4, r24	; 0x04
    1e6c:	1a 83       	std	Y+2, r17	; 0x02
    1e6e:	09 83       	std	Y+1, r16	; 0x01
    1e70:	8f ef       	ldi	r24, 0xFF	; 255
    1e72:	9f e7       	ldi	r25, 0x7F	; 127
    1e74:	9e 83       	std	Y+6, r25	; 0x06
    1e76:	8d 83       	std	Y+5, r24	; 0x05
    1e78:	ae 01       	movw	r20, r28
    1e7a:	47 5e       	subi	r20, 0xE7	; 231
    1e7c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e7e:	6f 89       	ldd	r22, Y+23	; 0x17
    1e80:	78 8d       	ldd	r23, Y+24	; 0x18
    1e82:	ce 01       	movw	r24, r28
    1e84:	01 96       	adiw	r24, 0x01	; 1
    1e86:	0e 94 77 0f 	call	0x1eee	; 0x1eee <vfprintf>
    1e8a:	ef 81       	ldd	r30, Y+7	; 0x07
    1e8c:	f8 85       	ldd	r31, Y+8	; 0x08
    1e8e:	e0 0f       	add	r30, r16
    1e90:	f1 1f       	adc	r31, r17
    1e92:	10 82       	st	Z, r1
    1e94:	2e 96       	adiw	r28, 0x0e	; 14
    1e96:	0f b6       	in	r0, 0x3f	; 63
    1e98:	f8 94       	cli
    1e9a:	de bf       	out	0x3e, r29	; 62
    1e9c:	0f be       	out	0x3f, r0	; 63
    1e9e:	cd bf       	out	0x3d, r28	; 61
    1ea0:	df 91       	pop	r29
    1ea2:	cf 91       	pop	r28
    1ea4:	1f 91       	pop	r17
    1ea6:	0f 91       	pop	r16
    1ea8:	08 95       	ret

00001eaa <sscanf>:
    1eaa:	cf 93       	push	r28
    1eac:	df 93       	push	r29
    1eae:	cd b7       	in	r28, 0x3d	; 61
    1eb0:	de b7       	in	r29, 0x3e	; 62
    1eb2:	2e 97       	sbiw	r28, 0x0e	; 14
    1eb4:	0f b6       	in	r0, 0x3f	; 63
    1eb6:	f8 94       	cli
    1eb8:	de bf       	out	0x3e, r29	; 62
    1eba:	0f be       	out	0x3f, r0	; 63
    1ebc:	cd bf       	out	0x3d, r28	; 61
    1ebe:	85 e0       	ldi	r24, 0x05	; 5
    1ec0:	8c 83       	std	Y+4, r24	; 0x04
    1ec2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ec4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ec6:	9a 83       	std	Y+2, r25	; 0x02
    1ec8:	89 83       	std	Y+1, r24	; 0x01
    1eca:	ae 01       	movw	r20, r28
    1ecc:	49 5e       	subi	r20, 0xE9	; 233
    1ece:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed0:	6d 89       	ldd	r22, Y+21	; 0x15
    1ed2:	7e 89       	ldd	r23, Y+22	; 0x16
    1ed4:	ce 01       	movw	r24, r28
    1ed6:	01 96       	adiw	r24, 0x01	; 1
    1ed8:	0e 94 0f 13 	call	0x261e	; 0x261e <vfscanf>
    1edc:	2e 96       	adiw	r28, 0x0e	; 14
    1ede:	0f b6       	in	r0, 0x3f	; 63
    1ee0:	f8 94       	cli
    1ee2:	de bf       	out	0x3e, r29	; 62
    1ee4:	0f be       	out	0x3f, r0	; 63
    1ee6:	cd bf       	out	0x3d, r28	; 61
    1ee8:	df 91       	pop	r29
    1eea:	cf 91       	pop	r28
    1eec:	08 95       	ret

00001eee <vfprintf>:
    1eee:	2f 92       	push	r2
    1ef0:	3f 92       	push	r3
    1ef2:	4f 92       	push	r4
    1ef4:	5f 92       	push	r5
    1ef6:	6f 92       	push	r6
    1ef8:	7f 92       	push	r7
    1efa:	8f 92       	push	r8
    1efc:	9f 92       	push	r9
    1efe:	af 92       	push	r10
    1f00:	bf 92       	push	r11
    1f02:	cf 92       	push	r12
    1f04:	df 92       	push	r13
    1f06:	ef 92       	push	r14
    1f08:	ff 92       	push	r15
    1f0a:	0f 93       	push	r16
    1f0c:	1f 93       	push	r17
    1f0e:	cf 93       	push	r28
    1f10:	df 93       	push	r29
    1f12:	cd b7       	in	r28, 0x3d	; 61
    1f14:	de b7       	in	r29, 0x3e	; 62
    1f16:	2c 97       	sbiw	r28, 0x0c	; 12
    1f18:	0f b6       	in	r0, 0x3f	; 63
    1f1a:	f8 94       	cli
    1f1c:	de bf       	out	0x3e, r29	; 62
    1f1e:	0f be       	out	0x3f, r0	; 63
    1f20:	cd bf       	out	0x3d, r28	; 61
    1f22:	7c 01       	movw	r14, r24
    1f24:	6b 01       	movw	r12, r22
    1f26:	8a 01       	movw	r16, r20
    1f28:	fc 01       	movw	r30, r24
    1f2a:	17 82       	std	Z+7, r1	; 0x07
    1f2c:	16 82       	std	Z+6, r1	; 0x06
    1f2e:	83 81       	ldd	r24, Z+3	; 0x03
    1f30:	81 ff       	sbrs	r24, 1
    1f32:	bd c1       	rjmp	.+890    	; 0x22ae <vfprintf+0x3c0>
    1f34:	ce 01       	movw	r24, r28
    1f36:	01 96       	adiw	r24, 0x01	; 1
    1f38:	4c 01       	movw	r8, r24
    1f3a:	f7 01       	movw	r30, r14
    1f3c:	93 81       	ldd	r25, Z+3	; 0x03
    1f3e:	f6 01       	movw	r30, r12
    1f40:	93 fd       	sbrc	r25, 3
    1f42:	85 91       	lpm	r24, Z+
    1f44:	93 ff       	sbrs	r25, 3
    1f46:	81 91       	ld	r24, Z+
    1f48:	6f 01       	movw	r12, r30
    1f4a:	88 23       	and	r24, r24
    1f4c:	09 f4       	brne	.+2      	; 0x1f50 <vfprintf+0x62>
    1f4e:	ab c1       	rjmp	.+854    	; 0x22a6 <vfprintf+0x3b8>
    1f50:	85 32       	cpi	r24, 0x25	; 37
    1f52:	39 f4       	brne	.+14     	; 0x1f62 <vfprintf+0x74>
    1f54:	93 fd       	sbrc	r25, 3
    1f56:	85 91       	lpm	r24, Z+
    1f58:	93 ff       	sbrs	r25, 3
    1f5a:	81 91       	ld	r24, Z+
    1f5c:	6f 01       	movw	r12, r30
    1f5e:	85 32       	cpi	r24, 0x25	; 37
    1f60:	29 f4       	brne	.+10     	; 0x1f6c <vfprintf+0x7e>
    1f62:	b7 01       	movw	r22, r14
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    1f6a:	e7 cf       	rjmp	.-50     	; 0x1f3a <vfprintf+0x4c>
    1f6c:	51 2c       	mov	r5, r1
    1f6e:	31 2c       	mov	r3, r1
    1f70:	20 e0       	ldi	r18, 0x00	; 0
    1f72:	20 32       	cpi	r18, 0x20	; 32
    1f74:	a0 f4       	brcc	.+40     	; 0x1f9e <vfprintf+0xb0>
    1f76:	8b 32       	cpi	r24, 0x2B	; 43
    1f78:	69 f0       	breq	.+26     	; 0x1f94 <vfprintf+0xa6>
    1f7a:	30 f4       	brcc	.+12     	; 0x1f88 <vfprintf+0x9a>
    1f7c:	80 32       	cpi	r24, 0x20	; 32
    1f7e:	59 f0       	breq	.+22     	; 0x1f96 <vfprintf+0xa8>
    1f80:	83 32       	cpi	r24, 0x23	; 35
    1f82:	69 f4       	brne	.+26     	; 0x1f9e <vfprintf+0xb0>
    1f84:	20 61       	ori	r18, 0x10	; 16
    1f86:	2c c0       	rjmp	.+88     	; 0x1fe0 <vfprintf+0xf2>
    1f88:	8d 32       	cpi	r24, 0x2D	; 45
    1f8a:	39 f0       	breq	.+14     	; 0x1f9a <vfprintf+0xac>
    1f8c:	80 33       	cpi	r24, 0x30	; 48
    1f8e:	39 f4       	brne	.+14     	; 0x1f9e <vfprintf+0xb0>
    1f90:	21 60       	ori	r18, 0x01	; 1
    1f92:	26 c0       	rjmp	.+76     	; 0x1fe0 <vfprintf+0xf2>
    1f94:	22 60       	ori	r18, 0x02	; 2
    1f96:	24 60       	ori	r18, 0x04	; 4
    1f98:	23 c0       	rjmp	.+70     	; 0x1fe0 <vfprintf+0xf2>
    1f9a:	28 60       	ori	r18, 0x08	; 8
    1f9c:	21 c0       	rjmp	.+66     	; 0x1fe0 <vfprintf+0xf2>
    1f9e:	27 fd       	sbrc	r18, 7
    1fa0:	27 c0       	rjmp	.+78     	; 0x1ff0 <vfprintf+0x102>
    1fa2:	30 ed       	ldi	r19, 0xD0	; 208
    1fa4:	38 0f       	add	r19, r24
    1fa6:	3a 30       	cpi	r19, 0x0A	; 10
    1fa8:	78 f4       	brcc	.+30     	; 0x1fc8 <vfprintf+0xda>
    1faa:	26 ff       	sbrs	r18, 6
    1fac:	06 c0       	rjmp	.+12     	; 0x1fba <vfprintf+0xcc>
    1fae:	fa e0       	ldi	r31, 0x0A	; 10
    1fb0:	5f 9e       	mul	r5, r31
    1fb2:	30 0d       	add	r19, r0
    1fb4:	11 24       	eor	r1, r1
    1fb6:	53 2e       	mov	r5, r19
    1fb8:	13 c0       	rjmp	.+38     	; 0x1fe0 <vfprintf+0xf2>
    1fba:	8a e0       	ldi	r24, 0x0A	; 10
    1fbc:	38 9e       	mul	r3, r24
    1fbe:	30 0d       	add	r19, r0
    1fc0:	11 24       	eor	r1, r1
    1fc2:	33 2e       	mov	r3, r19
    1fc4:	20 62       	ori	r18, 0x20	; 32
    1fc6:	0c c0       	rjmp	.+24     	; 0x1fe0 <vfprintf+0xf2>
    1fc8:	8e 32       	cpi	r24, 0x2E	; 46
    1fca:	21 f4       	brne	.+8      	; 0x1fd4 <vfprintf+0xe6>
    1fcc:	26 fd       	sbrc	r18, 6
    1fce:	6b c1       	rjmp	.+726    	; 0x22a6 <vfprintf+0x3b8>
    1fd0:	20 64       	ori	r18, 0x40	; 64
    1fd2:	06 c0       	rjmp	.+12     	; 0x1fe0 <vfprintf+0xf2>
    1fd4:	8c 36       	cpi	r24, 0x6C	; 108
    1fd6:	11 f4       	brne	.+4      	; 0x1fdc <vfprintf+0xee>
    1fd8:	20 68       	ori	r18, 0x80	; 128
    1fda:	02 c0       	rjmp	.+4      	; 0x1fe0 <vfprintf+0xf2>
    1fdc:	88 36       	cpi	r24, 0x68	; 104
    1fde:	41 f4       	brne	.+16     	; 0x1ff0 <vfprintf+0x102>
    1fe0:	f6 01       	movw	r30, r12
    1fe2:	93 fd       	sbrc	r25, 3
    1fe4:	85 91       	lpm	r24, Z+
    1fe6:	93 ff       	sbrs	r25, 3
    1fe8:	81 91       	ld	r24, Z+
    1fea:	6f 01       	movw	r12, r30
    1fec:	81 11       	cpse	r24, r1
    1fee:	c1 cf       	rjmp	.-126    	; 0x1f72 <vfprintf+0x84>
    1ff0:	98 2f       	mov	r25, r24
    1ff2:	9f 7d       	andi	r25, 0xDF	; 223
    1ff4:	95 54       	subi	r25, 0x45	; 69
    1ff6:	93 30       	cpi	r25, 0x03	; 3
    1ff8:	28 f4       	brcc	.+10     	; 0x2004 <vfprintf+0x116>
    1ffa:	0c 5f       	subi	r16, 0xFC	; 252
    1ffc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ffe:	ff e3       	ldi	r31, 0x3F	; 63
    2000:	f9 83       	std	Y+1, r31	; 0x01
    2002:	0d c0       	rjmp	.+26     	; 0x201e <vfprintf+0x130>
    2004:	83 36       	cpi	r24, 0x63	; 99
    2006:	31 f0       	breq	.+12     	; 0x2014 <vfprintf+0x126>
    2008:	83 37       	cpi	r24, 0x73	; 115
    200a:	71 f0       	breq	.+28     	; 0x2028 <vfprintf+0x13a>
    200c:	83 35       	cpi	r24, 0x53	; 83
    200e:	09 f0       	breq	.+2      	; 0x2012 <vfprintf+0x124>
    2010:	5b c0       	rjmp	.+182    	; 0x20c8 <vfprintf+0x1da>
    2012:	22 c0       	rjmp	.+68     	; 0x2058 <vfprintf+0x16a>
    2014:	f8 01       	movw	r30, r16
    2016:	80 81       	ld	r24, Z
    2018:	89 83       	std	Y+1, r24	; 0x01
    201a:	0e 5f       	subi	r16, 0xFE	; 254
    201c:	1f 4f       	sbci	r17, 0xFF	; 255
    201e:	44 24       	eor	r4, r4
    2020:	43 94       	inc	r4
    2022:	51 2c       	mov	r5, r1
    2024:	54 01       	movw	r10, r8
    2026:	15 c0       	rjmp	.+42     	; 0x2052 <vfprintf+0x164>
    2028:	38 01       	movw	r6, r16
    202a:	f2 e0       	ldi	r31, 0x02	; 2
    202c:	6f 0e       	add	r6, r31
    202e:	71 1c       	adc	r7, r1
    2030:	f8 01       	movw	r30, r16
    2032:	a0 80       	ld	r10, Z
    2034:	b1 80       	ldd	r11, Z+1	; 0x01
    2036:	26 ff       	sbrs	r18, 6
    2038:	03 c0       	rjmp	.+6      	; 0x2040 <vfprintf+0x152>
    203a:	65 2d       	mov	r22, r5
    203c:	70 e0       	ldi	r23, 0x00	; 0
    203e:	02 c0       	rjmp	.+4      	; 0x2044 <vfprintf+0x156>
    2040:	6f ef       	ldi	r22, 0xFF	; 255
    2042:	7f ef       	ldi	r23, 0xFF	; 255
    2044:	c5 01       	movw	r24, r10
    2046:	2c 87       	std	Y+12, r18	; 0x0c
    2048:	0e 94 87 14 	call	0x290e	; 0x290e <strnlen>
    204c:	2c 01       	movw	r4, r24
    204e:	83 01       	movw	r16, r6
    2050:	2c 85       	ldd	r18, Y+12	; 0x0c
    2052:	2f 77       	andi	r18, 0x7F	; 127
    2054:	22 2e       	mov	r2, r18
    2056:	17 c0       	rjmp	.+46     	; 0x2086 <vfprintf+0x198>
    2058:	38 01       	movw	r6, r16
    205a:	f2 e0       	ldi	r31, 0x02	; 2
    205c:	6f 0e       	add	r6, r31
    205e:	71 1c       	adc	r7, r1
    2060:	f8 01       	movw	r30, r16
    2062:	a0 80       	ld	r10, Z
    2064:	b1 80       	ldd	r11, Z+1	; 0x01
    2066:	26 ff       	sbrs	r18, 6
    2068:	03 c0       	rjmp	.+6      	; 0x2070 <vfprintf+0x182>
    206a:	65 2d       	mov	r22, r5
    206c:	70 e0       	ldi	r23, 0x00	; 0
    206e:	02 c0       	rjmp	.+4      	; 0x2074 <vfprintf+0x186>
    2070:	6f ef       	ldi	r22, 0xFF	; 255
    2072:	7f ef       	ldi	r23, 0xFF	; 255
    2074:	c5 01       	movw	r24, r10
    2076:	2c 87       	std	Y+12, r18	; 0x0c
    2078:	0e 94 75 14 	call	0x28ea	; 0x28ea <strnlen_P>
    207c:	2c 01       	movw	r4, r24
    207e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2080:	20 68       	ori	r18, 0x80	; 128
    2082:	22 2e       	mov	r2, r18
    2084:	83 01       	movw	r16, r6
    2086:	23 fc       	sbrc	r2, 3
    2088:	1b c0       	rjmp	.+54     	; 0x20c0 <vfprintf+0x1d2>
    208a:	83 2d       	mov	r24, r3
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	48 16       	cp	r4, r24
    2090:	59 06       	cpc	r5, r25
    2092:	b0 f4       	brcc	.+44     	; 0x20c0 <vfprintf+0x1d2>
    2094:	b7 01       	movw	r22, r14
    2096:	80 e2       	ldi	r24, 0x20	; 32
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    209e:	3a 94       	dec	r3
    20a0:	f4 cf       	rjmp	.-24     	; 0x208a <vfprintf+0x19c>
    20a2:	f5 01       	movw	r30, r10
    20a4:	27 fc       	sbrc	r2, 7
    20a6:	85 91       	lpm	r24, Z+
    20a8:	27 fe       	sbrs	r2, 7
    20aa:	81 91       	ld	r24, Z+
    20ac:	5f 01       	movw	r10, r30
    20ae:	b7 01       	movw	r22, r14
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    20b6:	31 10       	cpse	r3, r1
    20b8:	3a 94       	dec	r3
    20ba:	f1 e0       	ldi	r31, 0x01	; 1
    20bc:	4f 1a       	sub	r4, r31
    20be:	51 08       	sbc	r5, r1
    20c0:	41 14       	cp	r4, r1
    20c2:	51 04       	cpc	r5, r1
    20c4:	71 f7       	brne	.-36     	; 0x20a2 <vfprintf+0x1b4>
    20c6:	e5 c0       	rjmp	.+458    	; 0x2292 <vfprintf+0x3a4>
    20c8:	84 36       	cpi	r24, 0x64	; 100
    20ca:	11 f0       	breq	.+4      	; 0x20d0 <vfprintf+0x1e2>
    20cc:	89 36       	cpi	r24, 0x69	; 105
    20ce:	39 f5       	brne	.+78     	; 0x211e <vfprintf+0x230>
    20d0:	f8 01       	movw	r30, r16
    20d2:	27 ff       	sbrs	r18, 7
    20d4:	07 c0       	rjmp	.+14     	; 0x20e4 <vfprintf+0x1f6>
    20d6:	60 81       	ld	r22, Z
    20d8:	71 81       	ldd	r23, Z+1	; 0x01
    20da:	82 81       	ldd	r24, Z+2	; 0x02
    20dc:	93 81       	ldd	r25, Z+3	; 0x03
    20de:	0c 5f       	subi	r16, 0xFC	; 252
    20e0:	1f 4f       	sbci	r17, 0xFF	; 255
    20e2:	08 c0       	rjmp	.+16     	; 0x20f4 <vfprintf+0x206>
    20e4:	60 81       	ld	r22, Z
    20e6:	71 81       	ldd	r23, Z+1	; 0x01
    20e8:	88 27       	eor	r24, r24
    20ea:	77 fd       	sbrc	r23, 7
    20ec:	80 95       	com	r24
    20ee:	98 2f       	mov	r25, r24
    20f0:	0e 5f       	subi	r16, 0xFE	; 254
    20f2:	1f 4f       	sbci	r17, 0xFF	; 255
    20f4:	2f 76       	andi	r18, 0x6F	; 111
    20f6:	b2 2e       	mov	r11, r18
    20f8:	97 ff       	sbrs	r25, 7
    20fa:	09 c0       	rjmp	.+18     	; 0x210e <vfprintf+0x220>
    20fc:	90 95       	com	r25
    20fe:	80 95       	com	r24
    2100:	70 95       	com	r23
    2102:	61 95       	neg	r22
    2104:	7f 4f       	sbci	r23, 0xFF	; 255
    2106:	8f 4f       	sbci	r24, 0xFF	; 255
    2108:	9f 4f       	sbci	r25, 0xFF	; 255
    210a:	20 68       	ori	r18, 0x80	; 128
    210c:	b2 2e       	mov	r11, r18
    210e:	2a e0       	ldi	r18, 0x0A	; 10
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	a4 01       	movw	r20, r8
    2114:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <__ultoa_invert>
    2118:	a8 2e       	mov	r10, r24
    211a:	a8 18       	sub	r10, r8
    211c:	44 c0       	rjmp	.+136    	; 0x21a6 <vfprintf+0x2b8>
    211e:	85 37       	cpi	r24, 0x75	; 117
    2120:	29 f4       	brne	.+10     	; 0x212c <vfprintf+0x23e>
    2122:	2f 7e       	andi	r18, 0xEF	; 239
    2124:	b2 2e       	mov	r11, r18
    2126:	2a e0       	ldi	r18, 0x0A	; 10
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	25 c0       	rjmp	.+74     	; 0x2176 <vfprintf+0x288>
    212c:	f2 2f       	mov	r31, r18
    212e:	f9 7f       	andi	r31, 0xF9	; 249
    2130:	bf 2e       	mov	r11, r31
    2132:	8f 36       	cpi	r24, 0x6F	; 111
    2134:	c1 f0       	breq	.+48     	; 0x2166 <vfprintf+0x278>
    2136:	18 f4       	brcc	.+6      	; 0x213e <vfprintf+0x250>
    2138:	88 35       	cpi	r24, 0x58	; 88
    213a:	79 f0       	breq	.+30     	; 0x215a <vfprintf+0x26c>
    213c:	b4 c0       	rjmp	.+360    	; 0x22a6 <vfprintf+0x3b8>
    213e:	80 37       	cpi	r24, 0x70	; 112
    2140:	19 f0       	breq	.+6      	; 0x2148 <vfprintf+0x25a>
    2142:	88 37       	cpi	r24, 0x78	; 120
    2144:	21 f0       	breq	.+8      	; 0x214e <vfprintf+0x260>
    2146:	af c0       	rjmp	.+350    	; 0x22a6 <vfprintf+0x3b8>
    2148:	2f 2f       	mov	r18, r31
    214a:	20 61       	ori	r18, 0x10	; 16
    214c:	b2 2e       	mov	r11, r18
    214e:	b4 fe       	sbrs	r11, 4
    2150:	0d c0       	rjmp	.+26     	; 0x216c <vfprintf+0x27e>
    2152:	8b 2d       	mov	r24, r11
    2154:	84 60       	ori	r24, 0x04	; 4
    2156:	b8 2e       	mov	r11, r24
    2158:	09 c0       	rjmp	.+18     	; 0x216c <vfprintf+0x27e>
    215a:	24 ff       	sbrs	r18, 4
    215c:	0a c0       	rjmp	.+20     	; 0x2172 <vfprintf+0x284>
    215e:	9f 2f       	mov	r25, r31
    2160:	96 60       	ori	r25, 0x06	; 6
    2162:	b9 2e       	mov	r11, r25
    2164:	06 c0       	rjmp	.+12     	; 0x2172 <vfprintf+0x284>
    2166:	28 e0       	ldi	r18, 0x08	; 8
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	05 c0       	rjmp	.+10     	; 0x2176 <vfprintf+0x288>
    216c:	20 e1       	ldi	r18, 0x10	; 16
    216e:	30 e0       	ldi	r19, 0x00	; 0
    2170:	02 c0       	rjmp	.+4      	; 0x2176 <vfprintf+0x288>
    2172:	20 e1       	ldi	r18, 0x10	; 16
    2174:	32 e0       	ldi	r19, 0x02	; 2
    2176:	f8 01       	movw	r30, r16
    2178:	b7 fe       	sbrs	r11, 7
    217a:	07 c0       	rjmp	.+14     	; 0x218a <vfprintf+0x29c>
    217c:	60 81       	ld	r22, Z
    217e:	71 81       	ldd	r23, Z+1	; 0x01
    2180:	82 81       	ldd	r24, Z+2	; 0x02
    2182:	93 81       	ldd	r25, Z+3	; 0x03
    2184:	0c 5f       	subi	r16, 0xFC	; 252
    2186:	1f 4f       	sbci	r17, 0xFF	; 255
    2188:	06 c0       	rjmp	.+12     	; 0x2196 <vfprintf+0x2a8>
    218a:	60 81       	ld	r22, Z
    218c:	71 81       	ldd	r23, Z+1	; 0x01
    218e:	80 e0       	ldi	r24, 0x00	; 0
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	0e 5f       	subi	r16, 0xFE	; 254
    2194:	1f 4f       	sbci	r17, 0xFF	; 255
    2196:	a4 01       	movw	r20, r8
    2198:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <__ultoa_invert>
    219c:	a8 2e       	mov	r10, r24
    219e:	a8 18       	sub	r10, r8
    21a0:	fb 2d       	mov	r31, r11
    21a2:	ff 77       	andi	r31, 0x7F	; 127
    21a4:	bf 2e       	mov	r11, r31
    21a6:	b6 fe       	sbrs	r11, 6
    21a8:	0b c0       	rjmp	.+22     	; 0x21c0 <vfprintf+0x2d2>
    21aa:	2b 2d       	mov	r18, r11
    21ac:	2e 7f       	andi	r18, 0xFE	; 254
    21ae:	a5 14       	cp	r10, r5
    21b0:	50 f4       	brcc	.+20     	; 0x21c6 <vfprintf+0x2d8>
    21b2:	b4 fe       	sbrs	r11, 4
    21b4:	0a c0       	rjmp	.+20     	; 0x21ca <vfprintf+0x2dc>
    21b6:	b2 fc       	sbrc	r11, 2
    21b8:	08 c0       	rjmp	.+16     	; 0x21ca <vfprintf+0x2dc>
    21ba:	2b 2d       	mov	r18, r11
    21bc:	2e 7e       	andi	r18, 0xEE	; 238
    21be:	05 c0       	rjmp	.+10     	; 0x21ca <vfprintf+0x2dc>
    21c0:	7a 2c       	mov	r7, r10
    21c2:	2b 2d       	mov	r18, r11
    21c4:	03 c0       	rjmp	.+6      	; 0x21cc <vfprintf+0x2de>
    21c6:	7a 2c       	mov	r7, r10
    21c8:	01 c0       	rjmp	.+2      	; 0x21cc <vfprintf+0x2de>
    21ca:	75 2c       	mov	r7, r5
    21cc:	24 ff       	sbrs	r18, 4
    21ce:	0d c0       	rjmp	.+26     	; 0x21ea <vfprintf+0x2fc>
    21d0:	fe 01       	movw	r30, r28
    21d2:	ea 0d       	add	r30, r10
    21d4:	f1 1d       	adc	r31, r1
    21d6:	80 81       	ld	r24, Z
    21d8:	80 33       	cpi	r24, 0x30	; 48
    21da:	11 f4       	brne	.+4      	; 0x21e0 <vfprintf+0x2f2>
    21dc:	29 7e       	andi	r18, 0xE9	; 233
    21de:	09 c0       	rjmp	.+18     	; 0x21f2 <vfprintf+0x304>
    21e0:	22 ff       	sbrs	r18, 2
    21e2:	06 c0       	rjmp	.+12     	; 0x21f0 <vfprintf+0x302>
    21e4:	73 94       	inc	r7
    21e6:	73 94       	inc	r7
    21e8:	04 c0       	rjmp	.+8      	; 0x21f2 <vfprintf+0x304>
    21ea:	82 2f       	mov	r24, r18
    21ec:	86 78       	andi	r24, 0x86	; 134
    21ee:	09 f0       	breq	.+2      	; 0x21f2 <vfprintf+0x304>
    21f0:	73 94       	inc	r7
    21f2:	23 fd       	sbrc	r18, 3
    21f4:	13 c0       	rjmp	.+38     	; 0x221c <vfprintf+0x32e>
    21f6:	20 ff       	sbrs	r18, 0
    21f8:	06 c0       	rjmp	.+12     	; 0x2206 <vfprintf+0x318>
    21fa:	5a 2c       	mov	r5, r10
    21fc:	73 14       	cp	r7, r3
    21fe:	18 f4       	brcc	.+6      	; 0x2206 <vfprintf+0x318>
    2200:	53 0c       	add	r5, r3
    2202:	57 18       	sub	r5, r7
    2204:	73 2c       	mov	r7, r3
    2206:	73 14       	cp	r7, r3
    2208:	68 f4       	brcc	.+26     	; 0x2224 <vfprintf+0x336>
    220a:	b7 01       	movw	r22, r14
    220c:	80 e2       	ldi	r24, 0x20	; 32
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	2c 87       	std	Y+12, r18	; 0x0c
    2212:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    2216:	73 94       	inc	r7
    2218:	2c 85       	ldd	r18, Y+12	; 0x0c
    221a:	f5 cf       	rjmp	.-22     	; 0x2206 <vfprintf+0x318>
    221c:	73 14       	cp	r7, r3
    221e:	10 f4       	brcc	.+4      	; 0x2224 <vfprintf+0x336>
    2220:	37 18       	sub	r3, r7
    2222:	01 c0       	rjmp	.+2      	; 0x2226 <vfprintf+0x338>
    2224:	31 2c       	mov	r3, r1
    2226:	24 ff       	sbrs	r18, 4
    2228:	12 c0       	rjmp	.+36     	; 0x224e <vfprintf+0x360>
    222a:	b7 01       	movw	r22, r14
    222c:	80 e3       	ldi	r24, 0x30	; 48
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	2c 87       	std	Y+12, r18	; 0x0c
    2232:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    2236:	2c 85       	ldd	r18, Y+12	; 0x0c
    2238:	22 ff       	sbrs	r18, 2
    223a:	17 c0       	rjmp	.+46     	; 0x226a <vfprintf+0x37c>
    223c:	21 ff       	sbrs	r18, 1
    223e:	03 c0       	rjmp	.+6      	; 0x2246 <vfprintf+0x358>
    2240:	88 e5       	ldi	r24, 0x58	; 88
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	02 c0       	rjmp	.+4      	; 0x224a <vfprintf+0x35c>
    2246:	88 e7       	ldi	r24, 0x78	; 120
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	b7 01       	movw	r22, r14
    224c:	0c c0       	rjmp	.+24     	; 0x2266 <vfprintf+0x378>
    224e:	82 2f       	mov	r24, r18
    2250:	86 78       	andi	r24, 0x86	; 134
    2252:	59 f0       	breq	.+22     	; 0x226a <vfprintf+0x37c>
    2254:	21 fd       	sbrc	r18, 1
    2256:	02 c0       	rjmp	.+4      	; 0x225c <vfprintf+0x36e>
    2258:	80 e2       	ldi	r24, 0x20	; 32
    225a:	01 c0       	rjmp	.+2      	; 0x225e <vfprintf+0x370>
    225c:	8b e2       	ldi	r24, 0x2B	; 43
    225e:	27 fd       	sbrc	r18, 7
    2260:	8d e2       	ldi	r24, 0x2D	; 45
    2262:	b7 01       	movw	r22, r14
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    226a:	a5 14       	cp	r10, r5
    226c:	38 f4       	brcc	.+14     	; 0x227c <vfprintf+0x38e>
    226e:	b7 01       	movw	r22, r14
    2270:	80 e3       	ldi	r24, 0x30	; 48
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    2278:	5a 94       	dec	r5
    227a:	f7 cf       	rjmp	.-18     	; 0x226a <vfprintf+0x37c>
    227c:	aa 94       	dec	r10
    227e:	f4 01       	movw	r30, r8
    2280:	ea 0d       	add	r30, r10
    2282:	f1 1d       	adc	r31, r1
    2284:	80 81       	ld	r24, Z
    2286:	b7 01       	movw	r22, r14
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    228e:	a1 10       	cpse	r10, r1
    2290:	f5 cf       	rjmp	.-22     	; 0x227c <vfprintf+0x38e>
    2292:	33 20       	and	r3, r3
    2294:	09 f4       	brne	.+2      	; 0x2298 <vfprintf+0x3aa>
    2296:	51 ce       	rjmp	.-862    	; 0x1f3a <vfprintf+0x4c>
    2298:	b7 01       	movw	r22, r14
    229a:	80 e2       	ldi	r24, 0x20	; 32
    229c:	90 e0       	ldi	r25, 0x00	; 0
    229e:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <fputc>
    22a2:	3a 94       	dec	r3
    22a4:	f6 cf       	rjmp	.-20     	; 0x2292 <vfprintf+0x3a4>
    22a6:	f7 01       	movw	r30, r14
    22a8:	86 81       	ldd	r24, Z+6	; 0x06
    22aa:	97 81       	ldd	r25, Z+7	; 0x07
    22ac:	02 c0       	rjmp	.+4      	; 0x22b2 <vfprintf+0x3c4>
    22ae:	8f ef       	ldi	r24, 0xFF	; 255
    22b0:	9f ef       	ldi	r25, 0xFF	; 255
    22b2:	2c 96       	adiw	r28, 0x0c	; 12
    22b4:	0f b6       	in	r0, 0x3f	; 63
    22b6:	f8 94       	cli
    22b8:	de bf       	out	0x3e, r29	; 62
    22ba:	0f be       	out	0x3f, r0	; 63
    22bc:	cd bf       	out	0x3d, r28	; 61
    22be:	df 91       	pop	r29
    22c0:	cf 91       	pop	r28
    22c2:	1f 91       	pop	r17
    22c4:	0f 91       	pop	r16
    22c6:	ff 90       	pop	r15
    22c8:	ef 90       	pop	r14
    22ca:	df 90       	pop	r13
    22cc:	cf 90       	pop	r12
    22ce:	bf 90       	pop	r11
    22d0:	af 90       	pop	r10
    22d2:	9f 90       	pop	r9
    22d4:	8f 90       	pop	r8
    22d6:	7f 90       	pop	r7
    22d8:	6f 90       	pop	r6
    22da:	5f 90       	pop	r5
    22dc:	4f 90       	pop	r4
    22de:	3f 90       	pop	r3
    22e0:	2f 90       	pop	r2
    22e2:	08 95       	ret

000022e4 <putval>:
    22e4:	20 fd       	sbrc	r18, 0
    22e6:	09 c0       	rjmp	.+18     	; 0x22fa <putval+0x16>
    22e8:	fc 01       	movw	r30, r24
    22ea:	23 fd       	sbrc	r18, 3
    22ec:	05 c0       	rjmp	.+10     	; 0x22f8 <putval+0x14>
    22ee:	22 ff       	sbrs	r18, 2
    22f0:	02 c0       	rjmp	.+4      	; 0x22f6 <putval+0x12>
    22f2:	73 83       	std	Z+3, r23	; 0x03
    22f4:	62 83       	std	Z+2, r22	; 0x02
    22f6:	51 83       	std	Z+1, r21	; 0x01
    22f8:	40 83       	st	Z, r20
    22fa:	08 95       	ret

000022fc <mulacc>:
    22fc:	44 fd       	sbrc	r20, 4
    22fe:	10 c0       	rjmp	.+32     	; 0x2320 <mulacc+0x24>
    2300:	46 fd       	sbrc	r20, 6
    2302:	10 c0       	rjmp	.+32     	; 0x2324 <mulacc+0x28>
    2304:	db 01       	movw	r26, r22
    2306:	fc 01       	movw	r30, r24
    2308:	aa 0f       	add	r26, r26
    230a:	bb 1f       	adc	r27, r27
    230c:	ee 1f       	adc	r30, r30
    230e:	ff 1f       	adc	r31, r31
    2310:	10 94       	com	r1
    2312:	d1 f7       	brne	.-12     	; 0x2308 <mulacc+0xc>
    2314:	6a 0f       	add	r22, r26
    2316:	7b 1f       	adc	r23, r27
    2318:	8e 1f       	adc	r24, r30
    231a:	9f 1f       	adc	r25, r31
    231c:	31 e0       	ldi	r19, 0x01	; 1
    231e:	03 c0       	rjmp	.+6      	; 0x2326 <mulacc+0x2a>
    2320:	33 e0       	ldi	r19, 0x03	; 3
    2322:	01 c0       	rjmp	.+2      	; 0x2326 <mulacc+0x2a>
    2324:	34 e0       	ldi	r19, 0x04	; 4
    2326:	66 0f       	add	r22, r22
    2328:	77 1f       	adc	r23, r23
    232a:	88 1f       	adc	r24, r24
    232c:	99 1f       	adc	r25, r25
    232e:	31 50       	subi	r19, 0x01	; 1
    2330:	d1 f7       	brne	.-12     	; 0x2326 <mulacc+0x2a>
    2332:	62 0f       	add	r22, r18
    2334:	71 1d       	adc	r23, r1
    2336:	81 1d       	adc	r24, r1
    2338:	91 1d       	adc	r25, r1
    233a:	08 95       	ret

0000233c <skip_spaces>:
    233c:	0f 93       	push	r16
    233e:	1f 93       	push	r17
    2340:	cf 93       	push	r28
    2342:	df 93       	push	r29
    2344:	8c 01       	movw	r16, r24
    2346:	c8 01       	movw	r24, r16
    2348:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    234c:	ec 01       	movw	r28, r24
    234e:	97 fd       	sbrc	r25, 7
    2350:	08 c0       	rjmp	.+16     	; 0x2362 <skip_spaces+0x26>
    2352:	0e 94 62 14 	call	0x28c4	; 0x28c4 <isspace>
    2356:	89 2b       	or	r24, r25
    2358:	b1 f7       	brne	.-20     	; 0x2346 <skip_spaces+0xa>
    235a:	b8 01       	movw	r22, r16
    235c:	ce 01       	movw	r24, r28
    235e:	0e 94 02 15 	call	0x2a04	; 0x2a04 <ungetc>
    2362:	ce 01       	movw	r24, r28
    2364:	df 91       	pop	r29
    2366:	cf 91       	pop	r28
    2368:	1f 91       	pop	r17
    236a:	0f 91       	pop	r16
    236c:	08 95       	ret

0000236e <conv_int>:
    236e:	8f 92       	push	r8
    2370:	9f 92       	push	r9
    2372:	af 92       	push	r10
    2374:	cf 92       	push	r12
    2376:	df 92       	push	r13
    2378:	ef 92       	push	r14
    237a:	ff 92       	push	r15
    237c:	0f 93       	push	r16
    237e:	1f 93       	push	r17
    2380:	cf 93       	push	r28
    2382:	df 93       	push	r29
    2384:	ec 01       	movw	r28, r24
    2386:	a6 2e       	mov	r10, r22
    2388:	4a 01       	movw	r8, r20
    238a:	02 2f       	mov	r16, r18
    238c:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    2390:	ac 01       	movw	r20, r24
    2392:	55 27       	eor	r21, r21
    2394:	4b 32       	cpi	r20, 0x2B	; 43
    2396:	51 05       	cpc	r21, r1
    2398:	21 f0       	breq	.+8      	; 0x23a2 <conv_int+0x34>
    239a:	4d 32       	cpi	r20, 0x2D	; 45
    239c:	51 05       	cpc	r21, r1
    239e:	51 f4       	brne	.+20     	; 0x23b4 <conv_int+0x46>
    23a0:	00 68       	ori	r16, 0x80	; 128
    23a2:	aa 94       	dec	r10
    23a4:	11 f4       	brne	.+4      	; 0x23aa <conv_int+0x3c>
    23a6:	80 e0       	ldi	r24, 0x00	; 0
    23a8:	67 c0       	rjmp	.+206    	; 0x2478 <conv_int+0x10a>
    23aa:	ce 01       	movw	r24, r28
    23ac:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    23b0:	97 fd       	sbrc	r25, 7
    23b2:	f9 cf       	rjmp	.-14     	; 0x23a6 <conv_int+0x38>
    23b4:	10 2f       	mov	r17, r16
    23b6:	1d 7f       	andi	r17, 0xFD	; 253
    23b8:	30 2f       	mov	r19, r16
    23ba:	30 73       	andi	r19, 0x30	; 48
    23bc:	01 f5       	brne	.+64     	; 0x23fe <conv_int+0x90>
    23be:	80 33       	cpi	r24, 0x30	; 48
    23c0:	f1 f4       	brne	.+60     	; 0x23fe <conv_int+0x90>
    23c2:	ff 24       	eor	r15, r15
    23c4:	fa 94       	dec	r15
    23c6:	fa 0c       	add	r15, r10
    23c8:	09 f4       	brne	.+2      	; 0x23cc <conv_int+0x5e>
    23ca:	42 c0       	rjmp	.+132    	; 0x2450 <conv_int+0xe2>
    23cc:	ce 01       	movw	r24, r28
    23ce:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    23d2:	97 fd       	sbrc	r25, 7
    23d4:	3d c0       	rjmp	.+122    	; 0x2450 <conv_int+0xe2>
    23d6:	38 2f       	mov	r19, r24
    23d8:	3f 7d       	andi	r19, 0xDF	; 223
    23da:	38 35       	cpi	r19, 0x58	; 88
    23dc:	51 f4       	brne	.+20     	; 0x23f2 <conv_int+0x84>
    23de:	12 64       	ori	r17, 0x42	; 66
    23e0:	aa 94       	dec	r10
    23e2:	aa 94       	dec	r10
    23e4:	a9 f1       	breq	.+106    	; 0x2450 <conv_int+0xe2>
    23e6:	ce 01       	movw	r24, r28
    23e8:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    23ec:	97 ff       	sbrs	r25, 7
    23ee:	07 c0       	rjmp	.+14     	; 0x23fe <conv_int+0x90>
    23f0:	2f c0       	rjmp	.+94     	; 0x2450 <conv_int+0xe2>
    23f2:	06 ff       	sbrs	r16, 6
    23f4:	02 c0       	rjmp	.+4      	; 0x23fa <conv_int+0x8c>
    23f6:	12 60       	ori	r17, 0x02	; 2
    23f8:	01 c0       	rjmp	.+2      	; 0x23fc <conv_int+0x8e>
    23fa:	12 61       	ori	r17, 0x12	; 18
    23fc:	af 2c       	mov	r10, r15
    23fe:	c1 2c       	mov	r12, r1
    2400:	d1 2c       	mov	r13, r1
    2402:	76 01       	movw	r14, r12
    2404:	20 ed       	ldi	r18, 0xD0	; 208
    2406:	28 0f       	add	r18, r24
    2408:	28 30       	cpi	r18, 0x08	; 8
    240a:	80 f0       	brcs	.+32     	; 0x242c <conv_int+0xbe>
    240c:	14 ff       	sbrs	r17, 4
    240e:	04 c0       	rjmp	.+8      	; 0x2418 <conv_int+0xaa>
    2410:	be 01       	movw	r22, r28
    2412:	0e 94 02 15 	call	0x2a04	; 0x2a04 <ungetc>
    2416:	19 c0       	rjmp	.+50     	; 0x244a <conv_int+0xdc>
    2418:	2a 30       	cpi	r18, 0x0A	; 10
    241a:	40 f0       	brcs	.+16     	; 0x242c <conv_int+0xbe>
    241c:	16 ff       	sbrs	r17, 6
    241e:	f8 cf       	rjmp	.-16     	; 0x2410 <conv_int+0xa2>
    2420:	2f 7d       	andi	r18, 0xDF	; 223
    2422:	3f ee       	ldi	r19, 0xEF	; 239
    2424:	32 0f       	add	r19, r18
    2426:	36 30       	cpi	r19, 0x06	; 6
    2428:	98 f7       	brcc	.-26     	; 0x2410 <conv_int+0xa2>
    242a:	27 50       	subi	r18, 0x07	; 7
    242c:	41 2f       	mov	r20, r17
    242e:	c7 01       	movw	r24, r14
    2430:	b6 01       	movw	r22, r12
    2432:	0e 94 7e 11 	call	0x22fc	; 0x22fc <mulacc>
    2436:	6b 01       	movw	r12, r22
    2438:	7c 01       	movw	r14, r24
    243a:	12 60       	ori	r17, 0x02	; 2
    243c:	aa 94       	dec	r10
    243e:	59 f0       	breq	.+22     	; 0x2456 <conv_int+0xe8>
    2440:	ce 01       	movw	r24, r28
    2442:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    2446:	97 ff       	sbrs	r25, 7
    2448:	dd cf       	rjmp	.-70     	; 0x2404 <conv_int+0x96>
    244a:	11 fd       	sbrc	r17, 1
    244c:	04 c0       	rjmp	.+8      	; 0x2456 <conv_int+0xe8>
    244e:	ab cf       	rjmp	.-170    	; 0x23a6 <conv_int+0x38>
    2450:	c1 2c       	mov	r12, r1
    2452:	d1 2c       	mov	r13, r1
    2454:	76 01       	movw	r14, r12
    2456:	17 ff       	sbrs	r17, 7
    2458:	08 c0       	rjmp	.+16     	; 0x246a <conv_int+0xfc>
    245a:	f0 94       	com	r15
    245c:	e0 94       	com	r14
    245e:	d0 94       	com	r13
    2460:	c0 94       	com	r12
    2462:	c1 1c       	adc	r12, r1
    2464:	d1 1c       	adc	r13, r1
    2466:	e1 1c       	adc	r14, r1
    2468:	f1 1c       	adc	r15, r1
    246a:	21 2f       	mov	r18, r17
    246c:	b7 01       	movw	r22, r14
    246e:	a6 01       	movw	r20, r12
    2470:	c4 01       	movw	r24, r8
    2472:	0e 94 72 11 	call	0x22e4	; 0x22e4 <putval>
    2476:	81 e0       	ldi	r24, 0x01	; 1
    2478:	df 91       	pop	r29
    247a:	cf 91       	pop	r28
    247c:	1f 91       	pop	r17
    247e:	0f 91       	pop	r16
    2480:	ff 90       	pop	r15
    2482:	ef 90       	pop	r14
    2484:	df 90       	pop	r13
    2486:	cf 90       	pop	r12
    2488:	af 90       	pop	r10
    248a:	9f 90       	pop	r9
    248c:	8f 90       	pop	r8
    248e:	08 95       	ret

00002490 <conv_brk>:
    2490:	7f 92       	push	r7
    2492:	8f 92       	push	r8
    2494:	9f 92       	push	r9
    2496:	af 92       	push	r10
    2498:	bf 92       	push	r11
    249a:	cf 92       	push	r12
    249c:	df 92       	push	r13
    249e:	ef 92       	push	r14
    24a0:	ff 92       	push	r15
    24a2:	0f 93       	push	r16
    24a4:	1f 93       	push	r17
    24a6:	cf 93       	push	r28
    24a8:	df 93       	push	r29
    24aa:	cd b7       	in	r28, 0x3d	; 61
    24ac:	de b7       	in	r29, 0x3e	; 62
    24ae:	a1 97       	sbiw	r28, 0x21	; 33
    24b0:	0f b6       	in	r0, 0x3f	; 63
    24b2:	f8 94       	cli
    24b4:	de bf       	out	0x3e, r29	; 62
    24b6:	0f be       	out	0x3f, r0	; 63
    24b8:	cd bf       	out	0x3d, r28	; 61
    24ba:	5c 01       	movw	r10, r24
    24bc:	7a 01       	movw	r14, r20
    24be:	8e 01       	movw	r16, r28
    24c0:	0f 5f       	subi	r16, 0xFF	; 255
    24c2:	1f 4f       	sbci	r17, 0xFF	; 255
    24c4:	68 01       	movw	r12, r16
    24c6:	80 e2       	ldi	r24, 0x20	; 32
    24c8:	d8 01       	movw	r26, r16
    24ca:	1d 92       	st	X+, r1
    24cc:	8a 95       	dec	r24
    24ce:	e9 f7       	brne	.-6      	; 0x24ca <conv_brk+0x3a>
    24d0:	f5 01       	movw	r30, r10
    24d2:	73 80       	ldd	r7, Z+3	; 0x03
    24d4:	40 e0       	ldi	r20, 0x00	; 0
    24d6:	50 e0       	ldi	r21, 0x00	; 0
    24d8:	81 2c       	mov	r8, r1
    24da:	b0 e0       	ldi	r27, 0x00	; 0
    24dc:	91 2c       	mov	r9, r1
    24de:	81 e0       	ldi	r24, 0x01	; 1
    24e0:	90 e0       	ldi	r25, 0x00	; 0
    24e2:	f9 01       	movw	r30, r18
    24e4:	73 fc       	sbrc	r7, 3
    24e6:	a5 91       	lpm	r26, Z+
    24e8:	73 fe       	sbrs	r7, 3
    24ea:	a1 91       	ld	r26, Z+
    24ec:	8f 01       	movw	r16, r30
    24ee:	7a 2f       	mov	r23, r26
    24f0:	9f 01       	movw	r18, r30
    24f2:	a1 11       	cpse	r26, r1
    24f4:	03 c0       	rjmp	.+6      	; 0x24fc <conv_brk+0x6c>
    24f6:	80 e0       	ldi	r24, 0x00	; 0
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	7d c0       	rjmp	.+250    	; 0x25f6 <conv_brk+0x166>
    24fc:	ae 35       	cpi	r26, 0x5E	; 94
    24fe:	19 f4       	brne	.+6      	; 0x2506 <conv_brk+0x76>
    2500:	41 15       	cp	r20, r1
    2502:	51 05       	cpc	r21, r1
    2504:	59 f1       	breq	.+86     	; 0x255c <conv_brk+0xcc>
    2506:	e9 2d       	mov	r30, r9
    2508:	f0 e0       	ldi	r31, 0x00	; 0
    250a:	e4 17       	cp	r30, r20
    250c:	f5 07       	cpc	r31, r21
    250e:	3c f4       	brge	.+14     	; 0x251e <conv_brk+0x8e>
    2510:	ad 35       	cpi	r26, 0x5D	; 93
    2512:	69 f1       	breq	.+90     	; 0x256e <conv_brk+0xde>
    2514:	ad 32       	cpi	r26, 0x2D	; 45
    2516:	19 f4       	brne	.+6      	; 0x251e <conv_brk+0x8e>
    2518:	bb 23       	and	r27, r27
    251a:	19 f1       	breq	.+70     	; 0x2562 <conv_brk+0xd2>
    251c:	03 c0       	rjmp	.+6      	; 0x2524 <conv_brk+0x94>
    251e:	b1 11       	cpse	r27, r1
    2520:	01 c0       	rjmp	.+2      	; 0x2524 <conv_brk+0x94>
    2522:	8a 2e       	mov	r8, r26
    2524:	e7 2f       	mov	r30, r23
    2526:	e6 95       	lsr	r30
    2528:	e6 95       	lsr	r30
    252a:	e6 95       	lsr	r30
    252c:	86 01       	movw	r16, r12
    252e:	0e 0f       	add	r16, r30
    2530:	11 1d       	adc	r17, r1
    2532:	f8 01       	movw	r30, r16
    2534:	a7 2f       	mov	r26, r23
    2536:	a7 70       	andi	r26, 0x07	; 7
    2538:	8c 01       	movw	r16, r24
    253a:	02 c0       	rjmp	.+4      	; 0x2540 <conv_brk+0xb0>
    253c:	00 0f       	add	r16, r16
    253e:	11 1f       	adc	r17, r17
    2540:	aa 95       	dec	r26
    2542:	e2 f7       	brpl	.-8      	; 0x253c <conv_brk+0xac>
    2544:	d8 01       	movw	r26, r16
    2546:	b0 81       	ld	r27, Z
    2548:	ba 2b       	or	r27, r26
    254a:	b0 83       	st	Z, r27
    254c:	78 15       	cp	r23, r8
    254e:	59 f0       	breq	.+22     	; 0x2566 <conv_brk+0xd6>
    2550:	78 15       	cp	r23, r8
    2552:	10 f4       	brcc	.+4      	; 0x2558 <conv_brk+0xc8>
    2554:	7f 5f       	subi	r23, 0xFF	; 255
    2556:	e6 cf       	rjmp	.-52     	; 0x2524 <conv_brk+0x94>
    2558:	71 50       	subi	r23, 0x01	; 1
    255a:	e4 cf       	rjmp	.-56     	; 0x2524 <conv_brk+0x94>
    255c:	99 24       	eor	r9, r9
    255e:	93 94       	inc	r9
    2560:	03 c0       	rjmp	.+6      	; 0x2568 <conv_brk+0xd8>
    2562:	b1 e0       	ldi	r27, 0x01	; 1
    2564:	01 c0       	rjmp	.+2      	; 0x2568 <conv_brk+0xd8>
    2566:	b0 e0       	ldi	r27, 0x00	; 0
    2568:	4f 5f       	subi	r20, 0xFF	; 255
    256a:	5f 4f       	sbci	r21, 0xFF	; 255
    256c:	ba cf       	rjmp	.-140    	; 0x24e2 <conv_brk+0x52>
    256e:	bb 23       	and	r27, r27
    2570:	19 f0       	breq	.+6      	; 0x2578 <conv_brk+0xe8>
    2572:	8e 81       	ldd	r24, Y+6	; 0x06
    2574:	80 62       	ori	r24, 0x20	; 32
    2576:	8e 83       	std	Y+6, r24	; 0x06
    2578:	91 10       	cpse	r9, r1
    257a:	03 c0       	rjmp	.+6      	; 0x2582 <conv_brk+0xf2>
    257c:	99 24       	eor	r9, r9
    257e:	93 94       	inc	r9
    2580:	15 c0       	rjmp	.+42     	; 0x25ac <conv_brk+0x11c>
    2582:	f6 01       	movw	r30, r12
    2584:	ce 01       	movw	r24, r28
    2586:	81 96       	adiw	r24, 0x21	; 33
    2588:	20 81       	ld	r18, Z
    258a:	20 95       	com	r18
    258c:	21 93       	st	Z+, r18
    258e:	e8 17       	cp	r30, r24
    2590:	f9 07       	cpc	r31, r25
    2592:	d1 f7       	brne	.-12     	; 0x2588 <conv_brk+0xf8>
    2594:	f3 cf       	rjmp	.-26     	; 0x257c <conv_brk+0xec>
    2596:	e1 14       	cp	r14, r1
    2598:	f1 04       	cpc	r15, r1
    259a:	29 f0       	breq	.+10     	; 0x25a6 <conv_brk+0x116>
    259c:	d7 01       	movw	r26, r14
    259e:	8c 93       	st	X, r24
    25a0:	f7 01       	movw	r30, r14
    25a2:	31 96       	adiw	r30, 0x01	; 1
    25a4:	7f 01       	movw	r14, r30
    25a6:	61 50       	subi	r22, 0x01	; 1
    25a8:	01 f1       	breq	.+64     	; 0x25ea <conv_brk+0x15a>
    25aa:	91 2c       	mov	r9, r1
    25ac:	c5 01       	movw	r24, r10
    25ae:	69 a3       	std	Y+33, r22	; 0x21
    25b0:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    25b4:	69 a1       	ldd	r22, Y+33	; 0x21
    25b6:	97 fd       	sbrc	r25, 7
    25b8:	16 c0       	rjmp	.+44     	; 0x25e6 <conv_brk+0x156>
    25ba:	28 2f       	mov	r18, r24
    25bc:	26 95       	lsr	r18
    25be:	26 95       	lsr	r18
    25c0:	26 95       	lsr	r18
    25c2:	f6 01       	movw	r30, r12
    25c4:	e2 0f       	add	r30, r18
    25c6:	f1 1d       	adc	r31, r1
    25c8:	20 81       	ld	r18, Z
    25ca:	30 e0       	ldi	r19, 0x00	; 0
    25cc:	ac 01       	movw	r20, r24
    25ce:	47 70       	andi	r20, 0x07	; 7
    25d0:	55 27       	eor	r21, r21
    25d2:	02 c0       	rjmp	.+4      	; 0x25d8 <conv_brk+0x148>
    25d4:	35 95       	asr	r19
    25d6:	27 95       	ror	r18
    25d8:	4a 95       	dec	r20
    25da:	e2 f7       	brpl	.-8      	; 0x25d4 <conv_brk+0x144>
    25dc:	20 fd       	sbrc	r18, 0
    25de:	db cf       	rjmp	.-74     	; 0x2596 <conv_brk+0x106>
    25e0:	b5 01       	movw	r22, r10
    25e2:	0e 94 02 15 	call	0x2a04	; 0x2a04 <ungetc>
    25e6:	91 10       	cpse	r9, r1
    25e8:	86 cf       	rjmp	.-244    	; 0x24f6 <conv_brk+0x66>
    25ea:	e1 14       	cp	r14, r1
    25ec:	f1 04       	cpc	r15, r1
    25ee:	11 f0       	breq	.+4      	; 0x25f4 <conv_brk+0x164>
    25f0:	d7 01       	movw	r26, r14
    25f2:	1c 92       	st	X, r1
    25f4:	c8 01       	movw	r24, r16
    25f6:	a1 96       	adiw	r28, 0x21	; 33
    25f8:	0f b6       	in	r0, 0x3f	; 63
    25fa:	f8 94       	cli
    25fc:	de bf       	out	0x3e, r29	; 62
    25fe:	0f be       	out	0x3f, r0	; 63
    2600:	cd bf       	out	0x3d, r28	; 61
    2602:	df 91       	pop	r29
    2604:	cf 91       	pop	r28
    2606:	1f 91       	pop	r17
    2608:	0f 91       	pop	r16
    260a:	ff 90       	pop	r15
    260c:	ef 90       	pop	r14
    260e:	df 90       	pop	r13
    2610:	cf 90       	pop	r12
    2612:	bf 90       	pop	r11
    2614:	af 90       	pop	r10
    2616:	9f 90       	pop	r9
    2618:	8f 90       	pop	r8
    261a:	7f 90       	pop	r7
    261c:	08 95       	ret

0000261e <vfscanf>:
    261e:	4f 92       	push	r4
    2620:	5f 92       	push	r5
    2622:	7f 92       	push	r7
    2624:	8f 92       	push	r8
    2626:	9f 92       	push	r9
    2628:	af 92       	push	r10
    262a:	bf 92       	push	r11
    262c:	cf 92       	push	r12
    262e:	df 92       	push	r13
    2630:	ef 92       	push	r14
    2632:	ff 92       	push	r15
    2634:	0f 93       	push	r16
    2636:	1f 93       	push	r17
    2638:	cf 93       	push	r28
    263a:	df 93       	push	r29
    263c:	1f 92       	push	r1
    263e:	cd b7       	in	r28, 0x3d	; 61
    2640:	de b7       	in	r29, 0x3e	; 62
    2642:	8c 01       	movw	r16, r24
    2644:	2b 01       	movw	r4, r22
    2646:	7a 01       	movw	r14, r20
    2648:	fc 01       	movw	r30, r24
    264a:	17 82       	std	Z+7, r1	; 0x07
    264c:	16 82       	std	Z+6, r1	; 0x06
    264e:	a1 2c       	mov	r10, r1
    2650:	f8 01       	movw	r30, r16
    2652:	d3 80       	ldd	r13, Z+3	; 0x03
    2654:	f2 01       	movw	r30, r4
    2656:	d3 fc       	sbrc	r13, 3
    2658:	85 91       	lpm	r24, Z+
    265a:	d3 fe       	sbrs	r13, 3
    265c:	81 91       	ld	r24, Z+
    265e:	38 2f       	mov	r19, r24
    2660:	2f 01       	movw	r4, r30
    2662:	88 23       	and	r24, r24
    2664:	09 f4       	brne	.+2      	; 0x2668 <vfscanf+0x4a>
    2666:	fc c0       	rjmp	.+504    	; 0x2860 <vfscanf+0x242>
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	39 83       	std	Y+1, r19	; 0x01
    266c:	0e 94 62 14 	call	0x28c4	; 0x28c4 <isspace>
    2670:	39 81       	ldd	r19, Y+1	; 0x01
    2672:	89 2b       	or	r24, r25
    2674:	21 f0       	breq	.+8      	; 0x267e <vfscanf+0x60>
    2676:	c8 01       	movw	r24, r16
    2678:	0e 94 9e 11 	call	0x233c	; 0x233c <skip_spaces>
    267c:	e9 cf       	rjmp	.-46     	; 0x2650 <vfscanf+0x32>
    267e:	35 32       	cpi	r19, 0x25	; 37
    2680:	41 f4       	brne	.+16     	; 0x2692 <vfscanf+0x74>
    2682:	f2 01       	movw	r30, r4
    2684:	d3 fc       	sbrc	r13, 3
    2686:	35 91       	lpm	r19, Z+
    2688:	d3 fe       	sbrs	r13, 3
    268a:	31 91       	ld	r19, Z+
    268c:	2f 01       	movw	r4, r30
    268e:	35 32       	cpi	r19, 0x25	; 37
    2690:	69 f4       	brne	.+26     	; 0x26ac <vfscanf+0x8e>
    2692:	c8 01       	movw	r24, r16
    2694:	39 83       	std	Y+1, r19	; 0x01
    2696:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    269a:	39 81       	ldd	r19, Y+1	; 0x01
    269c:	97 fd       	sbrc	r25, 7
    269e:	de c0       	rjmp	.+444    	; 0x285c <vfscanf+0x23e>
    26a0:	38 17       	cp	r19, r24
    26a2:	b1 f2       	breq	.-84     	; 0x2650 <vfscanf+0x32>
    26a4:	b8 01       	movw	r22, r16
    26a6:	0e 94 02 15 	call	0x2a04	; 0x2a04 <ungetc>
    26aa:	da c0       	rjmp	.+436    	; 0x2860 <vfscanf+0x242>
    26ac:	3a 32       	cpi	r19, 0x2A	; 42
    26ae:	41 f4       	brne	.+16     	; 0x26c0 <vfscanf+0xa2>
    26b0:	d3 fc       	sbrc	r13, 3
    26b2:	35 91       	lpm	r19, Z+
    26b4:	d3 fe       	sbrs	r13, 3
    26b6:	31 91       	ld	r19, Z+
    26b8:	2f 01       	movw	r4, r30
    26ba:	bb 24       	eor	r11, r11
    26bc:	b3 94       	inc	r11
    26be:	01 c0       	rjmp	.+2      	; 0x26c2 <vfscanf+0xa4>
    26c0:	b1 2c       	mov	r11, r1
    26c2:	71 2c       	mov	r7, r1
    26c4:	20 ed       	ldi	r18, 0xD0	; 208
    26c6:	23 0f       	add	r18, r19
    26c8:	2a 30       	cpi	r18, 0x0A	; 10
    26ca:	90 f4       	brcc	.+36     	; 0x26f0 <vfscanf+0xd2>
    26cc:	fb 2d       	mov	r31, r11
    26ce:	f2 60       	ori	r31, 0x02	; 2
    26d0:	bf 2e       	mov	r11, r31
    26d2:	67 2d       	mov	r22, r7
    26d4:	70 e0       	ldi	r23, 0x00	; 0
    26d6:	80 e0       	ldi	r24, 0x00	; 0
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	40 e2       	ldi	r20, 0x20	; 32
    26dc:	0e 94 7e 11 	call	0x22fc	; 0x22fc <mulacc>
    26e0:	76 2e       	mov	r7, r22
    26e2:	f2 01       	movw	r30, r4
    26e4:	d3 fc       	sbrc	r13, 3
    26e6:	35 91       	lpm	r19, Z+
    26e8:	d3 fe       	sbrs	r13, 3
    26ea:	31 91       	ld	r19, Z+
    26ec:	2f 01       	movw	r4, r30
    26ee:	ea cf       	rjmp	.-44     	; 0x26c4 <vfscanf+0xa6>
    26f0:	b1 fe       	sbrs	r11, 1
    26f2:	03 c0       	rjmp	.+6      	; 0x26fa <vfscanf+0xdc>
    26f4:	71 10       	cpse	r7, r1
    26f6:	03 c0       	rjmp	.+6      	; 0x26fe <vfscanf+0xe0>
    26f8:	b3 c0       	rjmp	.+358    	; 0x2860 <vfscanf+0x242>
    26fa:	77 24       	eor	r7, r7
    26fc:	7a 94       	dec	r7
    26fe:	38 36       	cpi	r19, 0x68	; 104
    2700:	19 f0       	breq	.+6      	; 0x2708 <vfscanf+0xea>
    2702:	3c 36       	cpi	r19, 0x6C	; 108
    2704:	61 f0       	breq	.+24     	; 0x271e <vfscanf+0x100>
    2706:	14 c0       	rjmp	.+40     	; 0x2730 <vfscanf+0x112>
    2708:	f2 01       	movw	r30, r4
    270a:	d3 fc       	sbrc	r13, 3
    270c:	35 91       	lpm	r19, Z+
    270e:	d3 fe       	sbrs	r13, 3
    2710:	31 91       	ld	r19, Z+
    2712:	2f 01       	movw	r4, r30
    2714:	38 36       	cpi	r19, 0x68	; 104
    2716:	61 f4       	brne	.+24     	; 0x2730 <vfscanf+0x112>
    2718:	fb 2d       	mov	r31, r11
    271a:	f8 60       	ori	r31, 0x08	; 8
    271c:	bf 2e       	mov	r11, r31
    271e:	8b 2d       	mov	r24, r11
    2720:	84 60       	ori	r24, 0x04	; 4
    2722:	b8 2e       	mov	r11, r24
    2724:	f2 01       	movw	r30, r4
    2726:	d3 fc       	sbrc	r13, 3
    2728:	35 91       	lpm	r19, Z+
    272a:	d3 fe       	sbrs	r13, 3
    272c:	31 91       	ld	r19, Z+
    272e:	2f 01       	movw	r4, r30
    2730:	33 23       	and	r19, r19
    2732:	09 f4       	brne	.+2      	; 0x2736 <vfscanf+0x118>
    2734:	95 c0       	rjmp	.+298    	; 0x2860 <vfscanf+0x242>
    2736:	63 2f       	mov	r22, r19
    2738:	70 e0       	ldi	r23, 0x00	; 0
    273a:	8c e8       	ldi	r24, 0x8C	; 140
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	39 83       	std	Y+1, r19	; 0x01
    2740:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <strchr_P>
    2744:	39 81       	ldd	r19, Y+1	; 0x01
    2746:	89 2b       	or	r24, r25
    2748:	09 f4       	brne	.+2      	; 0x274c <vfscanf+0x12e>
    274a:	8a c0       	rjmp	.+276    	; 0x2860 <vfscanf+0x242>
    274c:	b0 fc       	sbrc	r11, 0
    274e:	07 c0       	rjmp	.+14     	; 0x275e <vfscanf+0x140>
    2750:	f7 01       	movw	r30, r14
    2752:	c0 80       	ld	r12, Z
    2754:	d1 80       	ldd	r13, Z+1	; 0x01
    2756:	c7 01       	movw	r24, r14
    2758:	02 96       	adiw	r24, 0x02	; 2
    275a:	7c 01       	movw	r14, r24
    275c:	02 c0       	rjmp	.+4      	; 0x2762 <vfscanf+0x144>
    275e:	c1 2c       	mov	r12, r1
    2760:	d1 2c       	mov	r13, r1
    2762:	3e 36       	cpi	r19, 0x6E	; 110
    2764:	51 f4       	brne	.+20     	; 0x277a <vfscanf+0x15c>
    2766:	f8 01       	movw	r30, r16
    2768:	46 81       	ldd	r20, Z+6	; 0x06
    276a:	57 81       	ldd	r21, Z+7	; 0x07
    276c:	60 e0       	ldi	r22, 0x00	; 0
    276e:	70 e0       	ldi	r23, 0x00	; 0
    2770:	2b 2d       	mov	r18, r11
    2772:	c6 01       	movw	r24, r12
    2774:	0e 94 72 11 	call	0x22e4	; 0x22e4 <putval>
    2778:	6b cf       	rjmp	.-298    	; 0x2650 <vfscanf+0x32>
    277a:	33 36       	cpi	r19, 0x63	; 99
    277c:	a1 f4       	brne	.+40     	; 0x27a6 <vfscanf+0x188>
    277e:	b1 fc       	sbrc	r11, 1
    2780:	02 c0       	rjmp	.+4      	; 0x2786 <vfscanf+0x168>
    2782:	77 24       	eor	r7, r7
    2784:	73 94       	inc	r7
    2786:	c8 01       	movw	r24, r16
    2788:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    278c:	97 fd       	sbrc	r25, 7
    278e:	66 c0       	rjmp	.+204    	; 0x285c <vfscanf+0x23e>
    2790:	c1 14       	cp	r12, r1
    2792:	d1 04       	cpc	r13, r1
    2794:	29 f0       	breq	.+10     	; 0x27a0 <vfscanf+0x182>
    2796:	f6 01       	movw	r30, r12
    2798:	80 83       	st	Z, r24
    279a:	c6 01       	movw	r24, r12
    279c:	01 96       	adiw	r24, 0x01	; 1
    279e:	6c 01       	movw	r12, r24
    27a0:	7a 94       	dec	r7
    27a2:	89 f7       	brne	.-30     	; 0x2786 <vfscanf+0x168>
    27a4:	57 c0       	rjmp	.+174    	; 0x2854 <vfscanf+0x236>
    27a6:	3b 35       	cpi	r19, 0x5B	; 91
    27a8:	59 f4       	brne	.+22     	; 0x27c0 <vfscanf+0x1a2>
    27aa:	92 01       	movw	r18, r4
    27ac:	a6 01       	movw	r20, r12
    27ae:	67 2d       	mov	r22, r7
    27b0:	c8 01       	movw	r24, r16
    27b2:	0e 94 48 12 	call	0x2490	; 0x2490 <conv_brk>
    27b6:	2c 01       	movw	r4, r24
    27b8:	00 97       	sbiw	r24, 0x00	; 0
    27ba:	09 f0       	breq	.+2      	; 0x27be <vfscanf+0x1a0>
    27bc:	4b c0       	rjmp	.+150    	; 0x2854 <vfscanf+0x236>
    27be:	45 c0       	rjmp	.+138    	; 0x284a <vfscanf+0x22c>
    27c0:	c8 01       	movw	r24, r16
    27c2:	39 83       	std	Y+1, r19	; 0x01
    27c4:	0e 94 9e 11 	call	0x233c	; 0x233c <skip_spaces>
    27c8:	39 81       	ldd	r19, Y+1	; 0x01
    27ca:	97 fd       	sbrc	r25, 7
    27cc:	47 c0       	rjmp	.+142    	; 0x285c <vfscanf+0x23e>
    27ce:	3f 36       	cpi	r19, 0x6F	; 111
    27d0:	69 f1       	breq	.+90     	; 0x282c <vfscanf+0x20e>
    27d2:	28 f4       	brcc	.+10     	; 0x27de <vfscanf+0x1c0>
    27d4:	34 36       	cpi	r19, 0x64	; 100
    27d6:	31 f1       	breq	.+76     	; 0x2824 <vfscanf+0x206>
    27d8:	39 36       	cpi	r19, 0x69	; 105
    27da:	79 f1       	breq	.+94     	; 0x283a <vfscanf+0x21c>
    27dc:	2b c0       	rjmp	.+86     	; 0x2834 <vfscanf+0x216>
    27de:	33 37       	cpi	r19, 0x73	; 115
    27e0:	69 f0       	breq	.+26     	; 0x27fc <vfscanf+0x1de>
    27e2:	35 37       	cpi	r19, 0x75	; 117
    27e4:	f9 f0       	breq	.+62     	; 0x2824 <vfscanf+0x206>
    27e6:	26 c0       	rjmp	.+76     	; 0x2834 <vfscanf+0x216>
    27e8:	c1 14       	cp	r12, r1
    27ea:	d1 04       	cpc	r13, r1
    27ec:	29 f0       	breq	.+10     	; 0x27f8 <vfscanf+0x1da>
    27ee:	f6 01       	movw	r30, r12
    27f0:	80 82       	st	Z, r8
    27f2:	c6 01       	movw	r24, r12
    27f4:	01 96       	adiw	r24, 0x01	; 1
    27f6:	6c 01       	movw	r12, r24
    27f8:	7a 94       	dec	r7
    27fa:	71 f0       	breq	.+28     	; 0x2818 <vfscanf+0x1fa>
    27fc:	c8 01       	movw	r24, r16
    27fe:	0e 94 92 14 	call	0x2924	; 0x2924 <fgetc>
    2802:	4c 01       	movw	r8, r24
    2804:	97 fd       	sbrc	r25, 7
    2806:	08 c0       	rjmp	.+16     	; 0x2818 <vfscanf+0x1fa>
    2808:	0e 94 62 14 	call	0x28c4	; 0x28c4 <isspace>
    280c:	89 2b       	or	r24, r25
    280e:	61 f3       	breq	.-40     	; 0x27e8 <vfscanf+0x1ca>
    2810:	b8 01       	movw	r22, r16
    2812:	c4 01       	movw	r24, r8
    2814:	0e 94 02 15 	call	0x2a04	; 0x2a04 <ungetc>
    2818:	c1 14       	cp	r12, r1
    281a:	d1 04       	cpc	r13, r1
    281c:	d9 f0       	breq	.+54     	; 0x2854 <vfscanf+0x236>
    281e:	f6 01       	movw	r30, r12
    2820:	10 82       	st	Z, r1
    2822:	18 c0       	rjmp	.+48     	; 0x2854 <vfscanf+0x236>
    2824:	fb 2d       	mov	r31, r11
    2826:	f0 62       	ori	r31, 0x20	; 32
    2828:	bf 2e       	mov	r11, r31
    282a:	07 c0       	rjmp	.+14     	; 0x283a <vfscanf+0x21c>
    282c:	8b 2d       	mov	r24, r11
    282e:	80 61       	ori	r24, 0x10	; 16
    2830:	b8 2e       	mov	r11, r24
    2832:	03 c0       	rjmp	.+6      	; 0x283a <vfscanf+0x21c>
    2834:	9b 2d       	mov	r25, r11
    2836:	90 64       	ori	r25, 0x40	; 64
    2838:	b9 2e       	mov	r11, r25
    283a:	2b 2d       	mov	r18, r11
    283c:	a6 01       	movw	r20, r12
    283e:	67 2d       	mov	r22, r7
    2840:	c8 01       	movw	r24, r16
    2842:	0e 94 b7 11 	call	0x236e	; 0x236e <conv_int>
    2846:	81 11       	cpse	r24, r1
    2848:	05 c0       	rjmp	.+10     	; 0x2854 <vfscanf+0x236>
    284a:	f8 01       	movw	r30, r16
    284c:	83 81       	ldd	r24, Z+3	; 0x03
    284e:	80 73       	andi	r24, 0x30	; 48
    2850:	29 f4       	brne	.+10     	; 0x285c <vfscanf+0x23e>
    2852:	06 c0       	rjmp	.+12     	; 0x2860 <vfscanf+0x242>
    2854:	b0 fc       	sbrc	r11, 0
    2856:	fc ce       	rjmp	.-520    	; 0x2650 <vfscanf+0x32>
    2858:	a3 94       	inc	r10
    285a:	fa ce       	rjmp	.-524    	; 0x2650 <vfscanf+0x32>
    285c:	aa 20       	and	r10, r10
    285e:	19 f0       	breq	.+6      	; 0x2866 <vfscanf+0x248>
    2860:	8a 2d       	mov	r24, r10
    2862:	90 e0       	ldi	r25, 0x00	; 0
    2864:	02 c0       	rjmp	.+4      	; 0x286a <vfscanf+0x24c>
    2866:	8f ef       	ldi	r24, 0xFF	; 255
    2868:	9f ef       	ldi	r25, 0xFF	; 255
    286a:	0f 90       	pop	r0
    286c:	df 91       	pop	r29
    286e:	cf 91       	pop	r28
    2870:	1f 91       	pop	r17
    2872:	0f 91       	pop	r16
    2874:	ff 90       	pop	r15
    2876:	ef 90       	pop	r14
    2878:	df 90       	pop	r13
    287a:	cf 90       	pop	r12
    287c:	bf 90       	pop	r11
    287e:	af 90       	pop	r10
    2880:	9f 90       	pop	r9
    2882:	8f 90       	pop	r8
    2884:	7f 90       	pop	r7
    2886:	5f 90       	pop	r5
    2888:	4f 90       	pop	r4
    288a:	08 95       	ret

0000288c <calloc>:
    288c:	0f 93       	push	r16
    288e:	1f 93       	push	r17
    2890:	cf 93       	push	r28
    2892:	df 93       	push	r29
    2894:	86 9f       	mul	r24, r22
    2896:	80 01       	movw	r16, r0
    2898:	87 9f       	mul	r24, r23
    289a:	10 0d       	add	r17, r0
    289c:	96 9f       	mul	r25, r22
    289e:	10 0d       	add	r17, r0
    28a0:	11 24       	eor	r1, r1
    28a2:	c8 01       	movw	r24, r16
    28a4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <malloc>
    28a8:	ec 01       	movw	r28, r24
    28aa:	00 97       	sbiw	r24, 0x00	; 0
    28ac:	29 f0       	breq	.+10     	; 0x28b8 <calloc+0x2c>
    28ae:	a8 01       	movw	r20, r16
    28b0:	60 e0       	ldi	r22, 0x00	; 0
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	0e 94 80 14 	call	0x2900	; 0x2900 <memset>
    28b8:	ce 01       	movw	r24, r28
    28ba:	df 91       	pop	r29
    28bc:	cf 91       	pop	r28
    28be:	1f 91       	pop	r17
    28c0:	0f 91       	pop	r16
    28c2:	08 95       	ret

000028c4 <isspace>:
    28c4:	91 11       	cpse	r25, r1
    28c6:	15 c1       	rjmp	.+554    	; 0x2af2 <__ctype_isfalse>
    28c8:	80 32       	cpi	r24, 0x20	; 32
    28ca:	19 f0       	breq	.+6      	; 0x28d2 <isspace+0xe>
    28cc:	89 50       	subi	r24, 0x09	; 9
    28ce:	85 50       	subi	r24, 0x05	; 5
    28d0:	d0 f7       	brcc	.-12     	; 0x28c6 <isspace+0x2>
    28d2:	08 95       	ret

000028d4 <strchr_P>:
    28d4:	fc 01       	movw	r30, r24
    28d6:	05 90       	lpm	r0, Z+
    28d8:	06 16       	cp	r0, r22
    28da:	21 f0       	breq	.+8      	; 0x28e4 <strchr_P+0x10>
    28dc:	00 20       	and	r0, r0
    28de:	d9 f7       	brne	.-10     	; 0x28d6 <strchr_P+0x2>
    28e0:	c0 01       	movw	r24, r0
    28e2:	08 95       	ret
    28e4:	31 97       	sbiw	r30, 0x01	; 1
    28e6:	cf 01       	movw	r24, r30
    28e8:	08 95       	ret

000028ea <strnlen_P>:
    28ea:	fc 01       	movw	r30, r24
    28ec:	05 90       	lpm	r0, Z+
    28ee:	61 50       	subi	r22, 0x01	; 1
    28f0:	70 40       	sbci	r23, 0x00	; 0
    28f2:	01 10       	cpse	r0, r1
    28f4:	d8 f7       	brcc	.-10     	; 0x28ec <strnlen_P+0x2>
    28f6:	80 95       	com	r24
    28f8:	90 95       	com	r25
    28fa:	8e 0f       	add	r24, r30
    28fc:	9f 1f       	adc	r25, r31
    28fe:	08 95       	ret

00002900 <memset>:
    2900:	dc 01       	movw	r26, r24
    2902:	01 c0       	rjmp	.+2      	; 0x2906 <memset+0x6>
    2904:	6d 93       	st	X+, r22
    2906:	41 50       	subi	r20, 0x01	; 1
    2908:	50 40       	sbci	r21, 0x00	; 0
    290a:	e0 f7       	brcc	.-8      	; 0x2904 <memset+0x4>
    290c:	08 95       	ret

0000290e <strnlen>:
    290e:	fc 01       	movw	r30, r24
    2910:	61 50       	subi	r22, 0x01	; 1
    2912:	70 40       	sbci	r23, 0x00	; 0
    2914:	01 90       	ld	r0, Z+
    2916:	01 10       	cpse	r0, r1
    2918:	d8 f7       	brcc	.-10     	; 0x2910 <strnlen+0x2>
    291a:	80 95       	com	r24
    291c:	90 95       	com	r25
    291e:	8e 0f       	add	r24, r30
    2920:	9f 1f       	adc	r25, r31
    2922:	08 95       	ret

00002924 <fgetc>:
    2924:	cf 93       	push	r28
    2926:	df 93       	push	r29
    2928:	ec 01       	movw	r28, r24
    292a:	2b 81       	ldd	r18, Y+3	; 0x03
    292c:	20 ff       	sbrs	r18, 0
    292e:	33 c0       	rjmp	.+102    	; 0x2996 <fgetc+0x72>
    2930:	26 ff       	sbrs	r18, 6
    2932:	0a c0       	rjmp	.+20     	; 0x2948 <fgetc+0x24>
    2934:	2f 7b       	andi	r18, 0xBF	; 191
    2936:	2b 83       	std	Y+3, r18	; 0x03
    2938:	8e 81       	ldd	r24, Y+6	; 0x06
    293a:	9f 81       	ldd	r25, Y+7	; 0x07
    293c:	01 96       	adiw	r24, 0x01	; 1
    293e:	9f 83       	std	Y+7, r25	; 0x07
    2940:	8e 83       	std	Y+6, r24	; 0x06
    2942:	8a 81       	ldd	r24, Y+2	; 0x02
    2944:	90 e0       	ldi	r25, 0x00	; 0
    2946:	29 c0       	rjmp	.+82     	; 0x299a <fgetc+0x76>
    2948:	22 ff       	sbrs	r18, 2
    294a:	0f c0       	rjmp	.+30     	; 0x296a <fgetc+0x46>
    294c:	e8 81       	ld	r30, Y
    294e:	f9 81       	ldd	r31, Y+1	; 0x01
    2950:	80 81       	ld	r24, Z
    2952:	99 27       	eor	r25, r25
    2954:	87 fd       	sbrc	r24, 7
    2956:	90 95       	com	r25
    2958:	00 97       	sbiw	r24, 0x00	; 0
    295a:	19 f4       	brne	.+6      	; 0x2962 <fgetc+0x3e>
    295c:	20 62       	ori	r18, 0x20	; 32
    295e:	2b 83       	std	Y+3, r18	; 0x03
    2960:	1a c0       	rjmp	.+52     	; 0x2996 <fgetc+0x72>
    2962:	31 96       	adiw	r30, 0x01	; 1
    2964:	f9 83       	std	Y+1, r31	; 0x01
    2966:	e8 83       	st	Y, r30
    2968:	0e c0       	rjmp	.+28     	; 0x2986 <fgetc+0x62>
    296a:	ea 85       	ldd	r30, Y+10	; 0x0a
    296c:	fb 85       	ldd	r31, Y+11	; 0x0b
    296e:	09 95       	icall
    2970:	97 ff       	sbrs	r25, 7
    2972:	09 c0       	rjmp	.+18     	; 0x2986 <fgetc+0x62>
    2974:	2b 81       	ldd	r18, Y+3	; 0x03
    2976:	01 96       	adiw	r24, 0x01	; 1
    2978:	11 f4       	brne	.+4      	; 0x297e <fgetc+0x5a>
    297a:	80 e1       	ldi	r24, 0x10	; 16
    297c:	01 c0       	rjmp	.+2      	; 0x2980 <fgetc+0x5c>
    297e:	80 e2       	ldi	r24, 0x20	; 32
    2980:	82 2b       	or	r24, r18
    2982:	8b 83       	std	Y+3, r24	; 0x03
    2984:	08 c0       	rjmp	.+16     	; 0x2996 <fgetc+0x72>
    2986:	2e 81       	ldd	r18, Y+6	; 0x06
    2988:	3f 81       	ldd	r19, Y+7	; 0x07
    298a:	2f 5f       	subi	r18, 0xFF	; 255
    298c:	3f 4f       	sbci	r19, 0xFF	; 255
    298e:	3f 83       	std	Y+7, r19	; 0x07
    2990:	2e 83       	std	Y+6, r18	; 0x06
    2992:	99 27       	eor	r25, r25
    2994:	02 c0       	rjmp	.+4      	; 0x299a <fgetc+0x76>
    2996:	8f ef       	ldi	r24, 0xFF	; 255
    2998:	9f ef       	ldi	r25, 0xFF	; 255
    299a:	df 91       	pop	r29
    299c:	cf 91       	pop	r28
    299e:	08 95       	ret

000029a0 <fputc>:
    29a0:	0f 93       	push	r16
    29a2:	1f 93       	push	r17
    29a4:	cf 93       	push	r28
    29a6:	df 93       	push	r29
    29a8:	18 2f       	mov	r17, r24
    29aa:	09 2f       	mov	r16, r25
    29ac:	eb 01       	movw	r28, r22
    29ae:	8b 81       	ldd	r24, Y+3	; 0x03
    29b0:	81 fd       	sbrc	r24, 1
    29b2:	03 c0       	rjmp	.+6      	; 0x29ba <fputc+0x1a>
    29b4:	8f ef       	ldi	r24, 0xFF	; 255
    29b6:	9f ef       	ldi	r25, 0xFF	; 255
    29b8:	20 c0       	rjmp	.+64     	; 0x29fa <fputc+0x5a>
    29ba:	82 ff       	sbrs	r24, 2
    29bc:	10 c0       	rjmp	.+32     	; 0x29de <fputc+0x3e>
    29be:	4e 81       	ldd	r20, Y+6	; 0x06
    29c0:	5f 81       	ldd	r21, Y+7	; 0x07
    29c2:	2c 81       	ldd	r18, Y+4	; 0x04
    29c4:	3d 81       	ldd	r19, Y+5	; 0x05
    29c6:	42 17       	cp	r20, r18
    29c8:	53 07       	cpc	r21, r19
    29ca:	7c f4       	brge	.+30     	; 0x29ea <fputc+0x4a>
    29cc:	e8 81       	ld	r30, Y
    29ce:	f9 81       	ldd	r31, Y+1	; 0x01
    29d0:	9f 01       	movw	r18, r30
    29d2:	2f 5f       	subi	r18, 0xFF	; 255
    29d4:	3f 4f       	sbci	r19, 0xFF	; 255
    29d6:	39 83       	std	Y+1, r19	; 0x01
    29d8:	28 83       	st	Y, r18
    29da:	10 83       	st	Z, r17
    29dc:	06 c0       	rjmp	.+12     	; 0x29ea <fputc+0x4a>
    29de:	e8 85       	ldd	r30, Y+8	; 0x08
    29e0:	f9 85       	ldd	r31, Y+9	; 0x09
    29e2:	81 2f       	mov	r24, r17
    29e4:	09 95       	icall
    29e6:	89 2b       	or	r24, r25
    29e8:	29 f7       	brne	.-54     	; 0x29b4 <fputc+0x14>
    29ea:	2e 81       	ldd	r18, Y+6	; 0x06
    29ec:	3f 81       	ldd	r19, Y+7	; 0x07
    29ee:	2f 5f       	subi	r18, 0xFF	; 255
    29f0:	3f 4f       	sbci	r19, 0xFF	; 255
    29f2:	3f 83       	std	Y+7, r19	; 0x07
    29f4:	2e 83       	std	Y+6, r18	; 0x06
    29f6:	81 2f       	mov	r24, r17
    29f8:	90 2f       	mov	r25, r16
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	1f 91       	pop	r17
    2a00:	0f 91       	pop	r16
    2a02:	08 95       	ret

00002a04 <ungetc>:
    2a04:	fb 01       	movw	r30, r22
    2a06:	23 81       	ldd	r18, Z+3	; 0x03
    2a08:	20 ff       	sbrs	r18, 0
    2a0a:	12 c0       	rjmp	.+36     	; 0x2a30 <ungetc+0x2c>
    2a0c:	26 fd       	sbrc	r18, 6
    2a0e:	10 c0       	rjmp	.+32     	; 0x2a30 <ungetc+0x2c>
    2a10:	8f 3f       	cpi	r24, 0xFF	; 255
    2a12:	3f ef       	ldi	r19, 0xFF	; 255
    2a14:	93 07       	cpc	r25, r19
    2a16:	61 f0       	breq	.+24     	; 0x2a30 <ungetc+0x2c>
    2a18:	82 83       	std	Z+2, r24	; 0x02
    2a1a:	2f 7d       	andi	r18, 0xDF	; 223
    2a1c:	20 64       	ori	r18, 0x40	; 64
    2a1e:	23 83       	std	Z+3, r18	; 0x03
    2a20:	26 81       	ldd	r18, Z+6	; 0x06
    2a22:	37 81       	ldd	r19, Z+7	; 0x07
    2a24:	21 50       	subi	r18, 0x01	; 1
    2a26:	31 09       	sbc	r19, r1
    2a28:	37 83       	std	Z+7, r19	; 0x07
    2a2a:	26 83       	std	Z+6, r18	; 0x06
    2a2c:	99 27       	eor	r25, r25
    2a2e:	08 95       	ret
    2a30:	8f ef       	ldi	r24, 0xFF	; 255
    2a32:	9f ef       	ldi	r25, 0xFF	; 255
    2a34:	08 95       	ret

00002a36 <__ultoa_invert>:
    2a36:	fa 01       	movw	r30, r20
    2a38:	aa 27       	eor	r26, r26
    2a3a:	28 30       	cpi	r18, 0x08	; 8
    2a3c:	51 f1       	breq	.+84     	; 0x2a92 <__ultoa_invert+0x5c>
    2a3e:	20 31       	cpi	r18, 0x10	; 16
    2a40:	81 f1       	breq	.+96     	; 0x2aa2 <__ultoa_invert+0x6c>
    2a42:	e8 94       	clt
    2a44:	6f 93       	push	r22
    2a46:	6e 7f       	andi	r22, 0xFE	; 254
    2a48:	6e 5f       	subi	r22, 0xFE	; 254
    2a4a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a4c:	8f 4f       	sbci	r24, 0xFF	; 255
    2a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a50:	af 4f       	sbci	r26, 0xFF	; 255
    2a52:	b1 e0       	ldi	r27, 0x01	; 1
    2a54:	3e d0       	rcall	.+124    	; 0x2ad2 <__ultoa_invert+0x9c>
    2a56:	b4 e0       	ldi	r27, 0x04	; 4
    2a58:	3c d0       	rcall	.+120    	; 0x2ad2 <__ultoa_invert+0x9c>
    2a5a:	67 0f       	add	r22, r23
    2a5c:	78 1f       	adc	r23, r24
    2a5e:	89 1f       	adc	r24, r25
    2a60:	9a 1f       	adc	r25, r26
    2a62:	a1 1d       	adc	r26, r1
    2a64:	68 0f       	add	r22, r24
    2a66:	79 1f       	adc	r23, r25
    2a68:	8a 1f       	adc	r24, r26
    2a6a:	91 1d       	adc	r25, r1
    2a6c:	a1 1d       	adc	r26, r1
    2a6e:	6a 0f       	add	r22, r26
    2a70:	71 1d       	adc	r23, r1
    2a72:	81 1d       	adc	r24, r1
    2a74:	91 1d       	adc	r25, r1
    2a76:	a1 1d       	adc	r26, r1
    2a78:	20 d0       	rcall	.+64     	; 0x2aba <__ultoa_invert+0x84>
    2a7a:	09 f4       	brne	.+2      	; 0x2a7e <__ultoa_invert+0x48>
    2a7c:	68 94       	set
    2a7e:	3f 91       	pop	r19
    2a80:	2a e0       	ldi	r18, 0x0A	; 10
    2a82:	26 9f       	mul	r18, r22
    2a84:	11 24       	eor	r1, r1
    2a86:	30 19       	sub	r19, r0
    2a88:	30 5d       	subi	r19, 0xD0	; 208
    2a8a:	31 93       	st	Z+, r19
    2a8c:	de f6       	brtc	.-74     	; 0x2a44 <__ultoa_invert+0xe>
    2a8e:	cf 01       	movw	r24, r30
    2a90:	08 95       	ret
    2a92:	46 2f       	mov	r20, r22
    2a94:	47 70       	andi	r20, 0x07	; 7
    2a96:	40 5d       	subi	r20, 0xD0	; 208
    2a98:	41 93       	st	Z+, r20
    2a9a:	b3 e0       	ldi	r27, 0x03	; 3
    2a9c:	0f d0       	rcall	.+30     	; 0x2abc <__ultoa_invert+0x86>
    2a9e:	c9 f7       	brne	.-14     	; 0x2a92 <__ultoa_invert+0x5c>
    2aa0:	f6 cf       	rjmp	.-20     	; 0x2a8e <__ultoa_invert+0x58>
    2aa2:	46 2f       	mov	r20, r22
    2aa4:	4f 70       	andi	r20, 0x0F	; 15
    2aa6:	40 5d       	subi	r20, 0xD0	; 208
    2aa8:	4a 33       	cpi	r20, 0x3A	; 58
    2aaa:	18 f0       	brcs	.+6      	; 0x2ab2 <__ultoa_invert+0x7c>
    2aac:	49 5d       	subi	r20, 0xD9	; 217
    2aae:	31 fd       	sbrc	r19, 1
    2ab0:	40 52       	subi	r20, 0x20	; 32
    2ab2:	41 93       	st	Z+, r20
    2ab4:	02 d0       	rcall	.+4      	; 0x2aba <__ultoa_invert+0x84>
    2ab6:	a9 f7       	brne	.-22     	; 0x2aa2 <__ultoa_invert+0x6c>
    2ab8:	ea cf       	rjmp	.-44     	; 0x2a8e <__ultoa_invert+0x58>
    2aba:	b4 e0       	ldi	r27, 0x04	; 4
    2abc:	a6 95       	lsr	r26
    2abe:	97 95       	ror	r25
    2ac0:	87 95       	ror	r24
    2ac2:	77 95       	ror	r23
    2ac4:	67 95       	ror	r22
    2ac6:	ba 95       	dec	r27
    2ac8:	c9 f7       	brne	.-14     	; 0x2abc <__ultoa_invert+0x86>
    2aca:	00 97       	sbiw	r24, 0x00	; 0
    2acc:	61 05       	cpc	r22, r1
    2ace:	71 05       	cpc	r23, r1
    2ad0:	08 95       	ret
    2ad2:	9b 01       	movw	r18, r22
    2ad4:	ac 01       	movw	r20, r24
    2ad6:	0a 2e       	mov	r0, r26
    2ad8:	06 94       	lsr	r0
    2ada:	57 95       	ror	r21
    2adc:	47 95       	ror	r20
    2ade:	37 95       	ror	r19
    2ae0:	27 95       	ror	r18
    2ae2:	ba 95       	dec	r27
    2ae4:	c9 f7       	brne	.-14     	; 0x2ad8 <__ultoa_invert+0xa2>
    2ae6:	62 0f       	add	r22, r18
    2ae8:	73 1f       	adc	r23, r19
    2aea:	84 1f       	adc	r24, r20
    2aec:	95 1f       	adc	r25, r21
    2aee:	a0 1d       	adc	r26, r0
    2af0:	08 95       	ret

00002af2 <__ctype_isfalse>:
    2af2:	99 27       	eor	r25, r25
    2af4:	88 27       	eor	r24, r24

00002af6 <__ctype_istrue>:
    2af6:	08 95       	ret

00002af8 <_exit>:
    2af8:	f8 94       	cli

00002afa <__stop_program>:
    2afa:	ff cf       	rjmp	.-2      	; 0x2afa <__stop_program>
