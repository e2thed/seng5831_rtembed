
Lab_Assignment_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000258  00800100  00002b60  00002bf4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b60  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000086  00800358  00800358  00002e4c  2**0
                  ALLOC
  3 .stab         0000351c  00000000  00000000  00002e4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000569f  00000000  00000000  00006368  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  0000ba07  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000d8  00000000  00000000  0000ba63  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000c7d  00000000  00000000  0000bb3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000620  00000000  00000000  0000c7b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000083b  00000000  00000000  0000cdd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002c4  00000000  00000000  0000d614  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000046e  00000000  00000000  0000d8d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000074b  00000000  00000000  0000dd46  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000098  00000000  00000000  0000e491  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
       4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      2c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__vector_11>
      30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      34:	0c 94 3e 02 	jmp	0x47c	; 0x47c <__vector_13>
      38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      40:	0c 94 bb 04 	jmp	0x976	; 0x976 <__vector_16>
      44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      50:	0c 94 d0 09 	jmp	0x13a0	; 0x13a0 <__vector_20>
      54:	0c 94 e3 0b 	jmp	0x17c6	; 0x17c6 <__vector_21>
      58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      70:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <__vector_28>
      74:	0c 94 0c 0c 	jmp	0x1818	; 0x1818 <__vector_29>
      78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      80:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__vector_32>
      84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e4       	ldi	r29, 0x40	; 64
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	13 e0       	ldi	r17, 0x03	; 3
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	e0 e6       	ldi	r30, 0x60	; 96
      ac:	fb e2       	ldi	r31, 0x2B	; 43
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	a8 35       	cpi	r26, 0x58	; 88
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	23 e0       	ldi	r18, 0x03	; 3
      c0:	a8 e5       	ldi	r26, 0x58	; 88
      c2:	b3 e0       	ldi	r27, 0x03	; 3
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	ae 3d       	cpi	r26, 0xDE	; 222
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	0e 94 6d 00 	call	0xda	; 0xda <main>
      d2:	0c 94 ae 15 	jmp	0x2b5c	; 0x2b5c <_exit>

000000d6 <__bad_interrupt>:
      d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <main>:


	// Used to print to serial comm window
	char tempBuffer[32];
	int length = 0;
	clear();
      da:	0e 94 30 06 	call	0xc60	; 0xc60 <clear>
	print("here");
      de:	82 e3       	ldi	r24, 0x32	; 50
      e0:	91 e0       	ldi	r25, 0x01	; 1
      e2:	0e 94 47 06 	call	0xc8e	; 0xc8e <print>
	// Initialization here.
	lcd_init_printf();	// required if we want to use printf() for LCD printing
      e6:	0e 94 c1 07 	call	0xf82	; 0xf82 <lcd_init_printf>
	init_LEDs();
      ea:	0e 94 ae 00 	call	0x15c	; 0x15c <init_LEDs>
	
	init_timers();
      ee:	0e 94 29 04 	call	0x852	; 0x852 <init_timers>
	init_menu();	// this is initialization of serial comm through USB
      f2:	0e 94 73 02 	call	0x4e6	; 0x4e6 <init_menu>
	
	clear();	// clear the LCD
      f6:	0e 94 30 06 	call	0xc60	; 0xc60 <clear>

	//enable interrupts
	sei();
      fa:	78 94       	sei

		// ONCE THAT WORKS, Comment out the above and use a software timer
		//	to "schedule" the RED LED toggle.
		///*
		if (G_release_red) {
		LED_TOGGLE(RED);
      fc:	c4 e0       	ldi	r28, 0x04	; 4
		*/

		// ONCE THAT WORKS, Comment out the above and use a software timer
		//	to "schedule" the RED LED toggle.
		///*
		if (G_release_red) {
      fe:	80 91 81 03 	lds	r24, 0x0381
     102:	90 91 82 03 	lds	r25, 0x0382
     106:	a0 91 83 03 	lds	r26, 0x0383
     10a:	b0 91 84 03 	lds	r27, 0x0384
     10e:	89 2b       	or	r24, r25
     110:	8a 2b       	or	r24, r26
     112:	8b 2b       	or	r24, r27
     114:	f1 f0       	breq	.+60     	; 0x152 <main+0x78>
		LED_TOGGLE(RED);
     116:	82 b1       	in	r24, 0x02	; 2
     118:	8c 27       	eor	r24, r28
     11a:	82 b9       	out	0x02, r24	; 2
		G_red_toggles++;
     11c:	80 91 7d 03 	lds	r24, 0x037D
     120:	90 91 7e 03 	lds	r25, 0x037E
     124:	a0 91 7f 03 	lds	r26, 0x037F
     128:	b0 91 80 03 	lds	r27, 0x0380
     12c:	01 96       	adiw	r24, 0x01	; 1
     12e:	a1 1d       	adc	r26, r1
     130:	b1 1d       	adc	r27, r1
     132:	80 93 7d 03 	sts	0x037D, r24
     136:	90 93 7e 03 	sts	0x037E, r25
     13a:	a0 93 7f 03 	sts	0x037F, r26
     13e:	b0 93 80 03 	sts	0x0380, r27
		G_release_red = 0;
     142:	10 92 81 03 	sts	0x0381, r1
     146:	10 92 82 03 	sts	0x0382, r1
     14a:	10 92 83 03 	sts	0x0383, r1
     14e:	10 92 84 03 	sts	0x0384, r1
		//*/

		// Whenever you are ready, add in the menu task.
		// Think of this as an external interrupt "releasing" the task.
		
		serial_check();
     152:	0e 94 aa 0b 	call	0x1754	; 0x1754 <serial_check>
		check_for_new_bytes_received();
     156:	0e 94 db 03 	call	0x7b6	; 0x7b6 <check_for_new_bytes_received>
		
		
	} //end while loop
     15a:	d1 cf       	rjmp	.-94     	; 0xfe <main+0x24>

0000015c <init_LEDs>:

extern uint32_t G_red_toggles;
extern uint32_t G_green_toggles;
extern uint32_t G_yellow_toggles;

void init_LEDs() {
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	00 d0       	rcall	.+0      	; 0x162 <init_LEDs+0x6>
     162:	cd b7       	in	r28, 0x3d	; 61
     164:	de b7       	in	r29, 0x3e	; 62

	volatile int i;

	// Clear all data direction ports
	DD_REG_RED    = 0;
     166:	11 b8       	out	0x01, r1	; 1
	DD_REG_YELLOW = 0;
     168:	11 b8       	out	0x01, r1	; 1
	DD_REG_GREEN  = 0;
     16a:	1a b8       	out	0x0a, r1	; 10

	// Configure data direction as output
	DD_REG_RED    |= BIT_RED;
     16c:	0a 9a       	sbi	0x01, 2	; 1
	DD_REG_YELLOW |= BIT_YELLOW;
     16e:	08 9a       	sbi	0x01, 0	; 1
	DD_REG_GREEN  |= BIT_GREEN;
     170:	55 9a       	sbi	0x0a, 5	; 10
	
	PORT_RED    |= BIT_RED;
     172:	12 9a       	sbi	0x02, 2	; 2
	PORT_YELLOW |= BIT_YELLOW;
     174:	10 9a       	sbi	0x02, 0	; 2
	PORT_GREEN  |= BIT_GREEN;
     176:	5d 9a       	sbi	0x0b, 5	; 11

	// Turn LEDs on to make sure they are working
	LED_ON(RED);
     178:	12 9a       	sbi	0x02, 2	; 2
	LED_ON(YELLOW);
     17a:	10 9a       	sbi	0x02, 0	; 2
	LED_ON(GREEN);
     17c:	5d 9a       	sbi	0x0b, 5	; 11
	
	// leave on for 2 seconds
	//TODO THIS DON'T WORK, BUT IN MAIN IT DO
	for (i=0;i<200;i++){
     17e:	1a 82       	std	Y+2, r1	; 0x02
     180:	19 82       	std	Y+1, r1	; 0x01
     182:	89 81       	ldd	r24, Y+1	; 0x01
     184:	9a 81       	ldd	r25, Y+2	; 0x02
     186:	88 3c       	cpi	r24, 0xC8	; 200
     188:	91 05       	cpc	r25, r1
     18a:	7c f5       	brge	.+94     	; 0x1ea <init_LEDs+0x8e>
		WAIT_10MS;
     18c:	10 92 8f 03 	sts	0x038F, r1
     190:	10 92 90 03 	sts	0x0390, r1
     194:	10 92 91 03 	sts	0x0391, r1
     198:	10 92 92 03 	sts	0x0392, r1
     19c:	80 91 8f 03 	lds	r24, 0x038F
     1a0:	90 91 90 03 	lds	r25, 0x0390
     1a4:	a0 91 91 03 	lds	r26, 0x0391
     1a8:	b0 91 92 03 	lds	r27, 0x0392
     1ac:	8e 3f       	cpi	r24, 0xFE	; 254
     1ae:	95 41       	sbci	r25, 0x15	; 21
     1b0:	a1 05       	cpc	r26, r1
     1b2:	b1 05       	cpc	r27, r1
     1b4:	a0 f4       	brcc	.+40     	; 0x1de <init_LEDs+0x82>
     1b6:	80 91 8f 03 	lds	r24, 0x038F
     1ba:	90 91 90 03 	lds	r25, 0x0390
     1be:	a0 91 91 03 	lds	r26, 0x0391
     1c2:	b0 91 92 03 	lds	r27, 0x0392
     1c6:	01 96       	adiw	r24, 0x01	; 1
     1c8:	a1 1d       	adc	r26, r1
     1ca:	b1 1d       	adc	r27, r1
     1cc:	80 93 8f 03 	sts	0x038F, r24
     1d0:	90 93 90 03 	sts	0x0390, r25
     1d4:	a0 93 91 03 	sts	0x0391, r26
     1d8:	b0 93 92 03 	sts	0x0392, r27
     1dc:	df cf       	rjmp	.-66     	; 0x19c <init_LEDs+0x40>
	LED_ON(YELLOW);
	LED_ON(GREEN);
	
	// leave on for 2 seconds
	//TODO THIS DON'T WORK, BUT IN MAIN IT DO
	for (i=0;i<200;i++){
     1de:	89 81       	ldd	r24, Y+1	; 0x01
     1e0:	9a 81       	ldd	r25, Y+2	; 0x02
     1e2:	01 96       	adiw	r24, 0x01	; 1
     1e4:	9a 83       	std	Y+2, r25	; 0x02
     1e6:	89 83       	std	Y+1, r24	; 0x01
     1e8:	cc cf       	rjmp	.-104    	; 0x182 <init_LEDs+0x26>
		WAIT_10MS;
	}
	// Start all LEDs off
	LED_OFF(RED);
     1ea:	12 98       	cbi	0x02, 2	; 2
	LED_OFF(YELLOW);
     1ec:	10 98       	cbi	0x02, 0	; 2
	LED_OFF(GREEN);
     1ee:	5d 98       	cbi	0x0b, 5	; 11

	// clear toggle counters
	G_green_toggles = 0;
     1f0:	10 92 79 03 	sts	0x0379, r1
     1f4:	10 92 7a 03 	sts	0x037A, r1
     1f8:	10 92 7b 03 	sts	0x037B, r1
     1fc:	10 92 7c 03 	sts	0x037C, r1
	G_red_toggles = 0;
     200:	10 92 7d 03 	sts	0x037D, r1
     204:	10 92 7e 03 	sts	0x037E, r1
     208:	10 92 7f 03 	sts	0x037F, r1
     20c:	10 92 80 03 	sts	0x0380, r1
	G_yellow_toggles = 0;
     210:	10 92 75 03 	sts	0x0375, r1
     214:	10 92 76 03 	sts	0x0376, r1
     218:	10 92 77 03 	sts	0x0377, r1
     21c:	10 92 78 03 	sts	0x0378, r1
	
}
     220:	0f 90       	pop	r0
     222:	0f 90       	pop	r0
     224:	df 91       	pop	r29
     226:	cf 91       	pop	r28
     228:	08 95       	ret

0000022a <set_toggle>:


void set_toggle(char color, int ms) {
     22a:	1f 93       	push	r17
     22c:	cf 93       	push	r28
     22e:	df 93       	push	r29
     230:	18 2f       	mov	r17, r24
     232:	eb 01       	movw	r28, r22

	// check toggle ms is positive and multiple of 100
	if (ms<0) {
     234:	77 ff       	sbrs	r23, 7
     236:	07 c0       	rjmp	.+14     	; 0x246 <set_toggle+0x1c>
		printf("Cannot toggle negative ms.\n");
     238:	87 e3       	ldi	r24, 0x37	; 55
     23a:	91 e0       	ldi	r25, 0x01	; 1
			ICR1 = 19 * G_green_period;
			OCR1A = (uint32_t) ICR1 / 2 ;
			//printf("Green to toggle at freq %luHz (period %lu ms)\n", XXXXX ,G_green_period);
		}
	}
}
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17

void set_toggle(char color, int ms) {

	// check toggle ms is positive and multiple of 100
	if (ms<0) {
		printf("Cannot toggle negative ms.\n");
     242:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <puts>
		return;
	}

	if (~((ms%100)==0)) {
		ms = ms - (ms%100);
     246:	cb 01       	movw	r24, r22
     248:	64 e6       	ldi	r22, 0x64	; 100
     24a:	70 e0       	ldi	r23, 0x00	; 0
     24c:	0e 94 0c 0d 	call	0x1a18	; 0x1a18 <__divmodhi4>
     250:	c8 1b       	sub	r28, r24
     252:	d9 0b       	sbc	r29, r25
		printf("Converted to toggle period: %lu.\n",ms);
     254:	df 93       	push	r29
     256:	cf 93       	push	r28
     258:	22 e5       	ldi	r18, 0x52	; 82
     25a:	31 e0       	ldi	r19, 0x01	; 1
     25c:	3f 93       	push	r19
     25e:	2f 93       	push	r18
     260:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <printf>
	}

	// For each color, if ms is 0, turn it off by changing data direction to input.
	// If it is >0, set data direction to output.
	if ((color=='R') || (color=='A')) {
     264:	0f 90       	pop	r0
     266:	0f 90       	pop	r0
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	12 35       	cpi	r17, 0x52	; 82
     26e:	19 f0       	breq	.+6      	; 0x276 <set_toggle+0x4c>
     270:	11 34       	cpi	r17, 0x41	; 65
     272:	09 f0       	breq	.+2      	; 0x276 <set_toggle+0x4c>
     274:	69 c0       	rjmp	.+210    	; 0x348 <set_toggle+0x11e>
		if (ms==0)
     276:	20 97       	sbiw	r28, 0x00	; 0
     278:	11 f4       	brne	.+4      	; 0x27e <set_toggle+0x54>
		DD_REG_OFF(RED);
     27a:	0a 98       	cbi	0x01, 2	; 1
     27c:	01 c0       	rjmp	.+2      	; 0x280 <set_toggle+0x56>
		else
		DD_REG_ON(RED);
     27e:	0a 9a       	sbi	0x01, 2	; 1
		G_red_period = ms;
     280:	ae 01       	movw	r20, r28
     282:	66 27       	eor	r22, r22
     284:	57 fd       	sbrc	r21, 7
     286:	60 95       	com	r22
     288:	76 2f       	mov	r23, r22
     28a:	40 93 2e 01 	sts	0x012E, r20
     28e:	50 93 2f 01 	sts	0x012F, r21
     292:	60 93 30 01 	sts	0x0130, r22
     296:	70 93 31 01 	sts	0x0131, r23
	}

	if ((color=='Y') || (color=='A')) {
     29a:	19 35       	cpi	r17, 0x59	; 89
     29c:	21 f4       	brne	.+8      	; 0x2a6 <set_toggle+0x7c>
		if (ms==0)
     29e:	20 97       	sbiw	r28, 0x00	; 0
     2a0:	31 f4       	brne	.+12     	; 0x2ae <set_toggle+0x84>
		DD_REG_OFF(YELLOW);
     2a2:	08 98       	cbi	0x01, 0	; 1
     2a4:	05 c0       	rjmp	.+10     	; 0x2b0 <set_toggle+0x86>
		else
		DD_REG_ON(RED);
		G_red_period = ms;
	}

	if ((color=='Y') || (color=='A')) {
     2a6:	11 34       	cpi	r17, 0x41	; 65
     2a8:	09 f0       	breq	.+2      	; 0x2ac <set_toggle+0x82>
     2aa:	51 c0       	rjmp	.+162    	; 0x34e <set_toggle+0x124>
     2ac:	f8 cf       	rjmp	.-16     	; 0x29e <set_toggle+0x74>
		if (ms==0)
		DD_REG_OFF(YELLOW);
		else
		DD_REG_ON(YELLOW);
     2ae:	08 9a       	sbi	0x01, 0	; 1
		G_yellow_period = ms / 100;
     2b0:	ce 01       	movw	r24, r28
     2b2:	64 e6       	ldi	r22, 0x64	; 100
     2b4:	70 e0       	ldi	r23, 0x00	; 0
     2b6:	0e 94 0c 0d 	call	0x1a18	; 0x1a18 <__divmodhi4>
     2ba:	ab 01       	movw	r20, r22
     2bc:	66 27       	eor	r22, r22
     2be:	57 fd       	sbrc	r21, 7
     2c0:	60 95       	com	r22
     2c2:	76 2f       	mov	r23, r22
     2c4:	40 93 26 01 	sts	0x0126, r20
     2c8:	50 93 27 01 	sts	0x0127, r21
     2cc:	60 93 28 01 	sts	0x0128, r22
     2d0:	70 93 29 01 	sts	0x0129, r23
	}

	if ((color=='G') || (color=='A')) {
     2d4:	17 34       	cpi	r17, 0x47	; 71
     2d6:	31 f4       	brne	.+12     	; 0x2e4 <set_toggle+0xba>
		if (ms==0)
     2d8:	20 97       	sbiw	r28, 0x00	; 0
     2da:	39 f4       	brne	.+14     	; 0x2ea <set_toggle+0xc0>
		{
			DD_REG_OFF(GREEN);
     2dc:	55 98       	cbi	0x0a, 5	; 10
			TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1); // Turn off ISR
     2de:	10 92 6f 00 	sts	0x006F, r1
     2e2:	0d c0       	rjmp	.+26     	; 0x2fe <set_toggle+0xd4>
		else
		DD_REG_ON(YELLOW);
		G_yellow_period = ms / 100;
	}

	if ((color=='G') || (color=='A')) {
     2e4:	11 34       	cpi	r17, 0x41	; 65
     2e6:	a9 f5       	brne	.+106    	; 0x352 <set_toggle+0x128>
     2e8:	f7 cf       	rjmp	.-18     	; 0x2d8 <set_toggle+0xae>
			DD_REG_OFF(GREEN);
			TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1); // Turn off ISR
		}
		else
		{
			DD_REG_ON(GREEN);
     2ea:	55 9a       	sbi	0x0a, 5	; 10
			TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (1<<OCIE1A) | (0<<TOIE1); // Turn on ISR
     2ec:	82 e0       	ldi	r24, 0x02	; 2
     2ee:	80 93 6f 00 	sts	0x006F, r24
			G_green_period = ms;
		}

		// green has a limit on its period.
		if ( ms > 4000) ms = 4000;
     2f2:	c1 3a       	cpi	r28, 0xA1	; 161
     2f4:	8f e0       	ldi	r24, 0x0F	; 15
     2f6:	d8 07       	cpc	r29, r24
     2f8:	14 f0       	brlt	.+4      	; 0x2fe <set_toggle+0xd4>
     2fa:	c0 ea       	ldi	r28, 0xA0	; 160
     2fc:	df e0       	ldi	r29, 0x0F	; 15
		G_green_period = ms;
     2fe:	ae 01       	movw	r20, r28
     300:	66 27       	eor	r22, r22
     302:	57 fd       	sbrc	r21, 7
     304:	60 95       	com	r22
     306:	76 2f       	mov	r23, r22
     308:	40 93 2a 01 	sts	0x012A, r20
     30c:	50 93 2b 01 	sts	0x012B, r21
     310:	60 93 2c 01 	sts	0x012C, r22
     314:	70 93 2d 01 	sts	0x012D, r23

		// set the OCR1A (TOP) to get (approximately) the requested frequency.
		if ( ms > 0 ) {
     318:	1c 16       	cp	r1, r28
     31a:	1d 06       	cpc	r1, r29
     31c:	d4 f4       	brge	.+52     	; 0x352 <set_toggle+0x128>
			ICR1 = 19 * G_green_period;
     31e:	23 e1       	ldi	r18, 0x13	; 19
     320:	2c 9f       	mul	r18, r28
     322:	c0 01       	movw	r24, r0
     324:	2d 9f       	mul	r18, r29
     326:	90 0d       	add	r25, r0
     328:	11 24       	eor	r1, r1
     32a:	90 93 87 00 	sts	0x0087, r25
     32e:	80 93 86 00 	sts	0x0086, r24
			OCR1A = (uint32_t) ICR1 / 2 ;
     332:	80 91 86 00 	lds	r24, 0x0086
     336:	90 91 87 00 	lds	r25, 0x0087
     33a:	96 95       	lsr	r25
     33c:	87 95       	ror	r24
     33e:	90 93 89 00 	sts	0x0089, r25
     342:	80 93 88 00 	sts	0x0088, r24
     346:	05 c0       	rjmp	.+10     	; 0x352 <set_toggle+0x128>
		else
		DD_REG_ON(RED);
		G_red_period = ms;
	}

	if ((color=='Y') || (color=='A')) {
     348:	19 35       	cpi	r17, 0x59	; 89
     34a:	09 f4       	brne	.+2      	; 0x34e <set_toggle+0x124>
     34c:	a8 cf       	rjmp	.-176    	; 0x29e <set_toggle+0x74>
		else
		DD_REG_ON(YELLOW);
		G_yellow_period = ms / 100;
	}

	if ((color=='G') || (color=='A')) {
     34e:	17 34       	cpi	r17, 0x47	; 71
     350:	19 f2       	breq	.-122    	; 0x2d8 <set_toggle+0xae>
			ICR1 = 19 * G_green_period;
			OCR1A = (uint32_t) ICR1 / 2 ;
			//printf("Green to toggle at freq %luHz (period %lu ms)\n", XXXXX ,G_green_period);
		}
	}
}
     352:	df 91       	pop	r29
     354:	cf 91       	pop	r28
     356:	1f 91       	pop	r17
     358:	08 95       	ret

0000035a <__vector_32>:


// INTERRUPT Names are defined in iom1284p.h

// INTERRUPT HANDLER for yellow LED
ISR(TIMER3_COMPA_vect) {
     35a:	1f 92       	push	r1
     35c:	0f 92       	push	r0
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	0f 92       	push	r0
     362:	11 24       	eor	r1, r1
     364:	0b b6       	in	r0, 0x3b	; 59
     366:	0f 92       	push	r0
     368:	2f 93       	push	r18
     36a:	3f 93       	push	r19
     36c:	4f 93       	push	r20
     36e:	5f 93       	push	r21
     370:	6f 93       	push	r22
     372:	7f 93       	push	r23
     374:	8f 93       	push	r24
     376:	9f 93       	push	r25
     378:	af 93       	push	r26
     37a:	bf 93       	push	r27
     37c:	ef 93       	push	r30
     37e:	ff 93       	push	r31
	cli();
     380:	f8 94       	cli
	// This the Interrupt Service Routine for Toggling the yellow LED.
	// Each time the TCNT count is equal to the OCRxx register, this interrupt is enabled.
	// At creation of this file, it was initialized to interrupt every 100ms (10Hz).
	//
	// Increment ticks. If it is time, toggle YELLOW and increment toggle counter.
	G_yellow_ticks++;
     382:	60 91 89 03 	lds	r22, 0x0389
     386:	70 91 8a 03 	lds	r23, 0x038A
     38a:	80 91 8b 03 	lds	r24, 0x038B
     38e:	90 91 8c 03 	lds	r25, 0x038C
     392:	6f 5f       	subi	r22, 0xFF	; 255
     394:	7f 4f       	sbci	r23, 0xFF	; 255
     396:	8f 4f       	sbci	r24, 0xFF	; 255
     398:	9f 4f       	sbci	r25, 0xFF	; 255
     39a:	60 93 89 03 	sts	0x0389, r22
     39e:	70 93 8a 03 	sts	0x038A, r23
     3a2:	80 93 8b 03 	sts	0x038B, r24
     3a6:	90 93 8c 03 	sts	0x038C, r25
	if ( ( G_yellow_ticks % G_yellow_period ) == 0 )
     3aa:	20 91 26 01 	lds	r18, 0x0126
     3ae:	30 91 27 01 	lds	r19, 0x0127
     3b2:	40 91 28 01 	lds	r20, 0x0128
     3b6:	50 91 29 01 	lds	r21, 0x0129
     3ba:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__udivmodsi4>
     3be:	67 2b       	or	r22, r23
     3c0:	68 2b       	or	r22, r24
     3c2:	69 2b       	or	r22, r25
     3c4:	b9 f4       	brne	.+46     	; 0x3f4 <__vector_32+0x9a>
	{
		LED_TOGGLE(YELLOW);
     3c6:	82 b1       	in	r24, 0x02	; 2
     3c8:	91 e0       	ldi	r25, 0x01	; 1
     3ca:	89 27       	eor	r24, r25
     3cc:	82 b9       	out	0x02, r24	; 2
		G_yellow_toggles++;
     3ce:	80 91 75 03 	lds	r24, 0x0375
     3d2:	90 91 76 03 	lds	r25, 0x0376
     3d6:	a0 91 77 03 	lds	r26, 0x0377
     3da:	b0 91 78 03 	lds	r27, 0x0378
     3de:	01 96       	adiw	r24, 0x01	; 1
     3e0:	a1 1d       	adc	r26, r1
     3e2:	b1 1d       	adc	r27, r1
     3e4:	80 93 75 03 	sts	0x0375, r24
     3e8:	90 93 76 03 	sts	0x0376, r25
     3ec:	a0 93 77 03 	sts	0x0377, r26
     3f0:	b0 93 78 03 	sts	0x0378, r27


// INTERRUPT Names are defined in iom1284p.h

// INTERRUPT HANDLER for yellow LED
ISR(TIMER3_COMPA_vect) {
     3f4:	20 e0       	ldi	r18, 0x00	; 0
     3f6:	30 e0       	ldi	r19, 0x00	; 0
	{
		LED_TOGGLE(YELLOW);
		G_yellow_toggles++;
	}
	for (uint32_t i = 0; i < 51; i++) {
		WAIT_10MS;
     3f8:	10 92 8f 03 	sts	0x038F, r1
     3fc:	10 92 90 03 	sts	0x0390, r1
     400:	10 92 91 03 	sts	0x0391, r1
     404:	10 92 92 03 	sts	0x0392, r1
     408:	80 91 8f 03 	lds	r24, 0x038F
     40c:	90 91 90 03 	lds	r25, 0x0390
     410:	a0 91 91 03 	lds	r26, 0x0391
     414:	b0 91 92 03 	lds	r27, 0x0392
     418:	8e 3f       	cpi	r24, 0xFE	; 254
     41a:	95 41       	sbci	r25, 0x15	; 21
     41c:	a1 05       	cpc	r26, r1
     41e:	b1 05       	cpc	r27, r1
     420:	a0 f4       	brcc	.+40     	; 0x44a <__vector_32+0xf0>
     422:	80 91 8f 03 	lds	r24, 0x038F
     426:	90 91 90 03 	lds	r25, 0x0390
     42a:	a0 91 91 03 	lds	r26, 0x0391
     42e:	b0 91 92 03 	lds	r27, 0x0392
     432:	01 96       	adiw	r24, 0x01	; 1
     434:	a1 1d       	adc	r26, r1
     436:	b1 1d       	adc	r27, r1
     438:	80 93 8f 03 	sts	0x038F, r24
     43c:	90 93 90 03 	sts	0x0390, r25
     440:	a0 93 91 03 	sts	0x0391, r26
     444:	b0 93 92 03 	sts	0x0392, r27
     448:	df cf       	rjmp	.-66     	; 0x408 <__vector_32+0xae>
     44a:	2f 5f       	subi	r18, 0xFF	; 255
     44c:	3f 4f       	sbci	r19, 0xFF	; 255
	if ( ( G_yellow_ticks % G_yellow_period ) == 0 )
	{
		LED_TOGGLE(YELLOW);
		G_yellow_toggles++;
	}
	for (uint32_t i = 0; i < 51; i++) {
     44e:	23 33       	cpi	r18, 0x33	; 51
     450:	31 05       	cpc	r19, r1
     452:	91 f6       	brne	.-92     	; 0x3f8 <__vector_32+0x9e>
		WAIT_10MS;
	}
	sei();
     454:	78 94       	sei
}
     456:	ff 91       	pop	r31
     458:	ef 91       	pop	r30
     45a:	bf 91       	pop	r27
     45c:	af 91       	pop	r26
     45e:	9f 91       	pop	r25
     460:	8f 91       	pop	r24
     462:	7f 91       	pop	r23
     464:	6f 91       	pop	r22
     466:	5f 91       	pop	r21
     468:	4f 91       	pop	r20
     46a:	3f 91       	pop	r19
     46c:	2f 91       	pop	r18
     46e:	0f 90       	pop	r0
     470:	0b be       	out	0x3b, r0	; 59
     472:	0f 90       	pop	r0
     474:	0f be       	out	0x3f, r0	; 63
     476:	0f 90       	pop	r0
     478:	1f 90       	pop	r1
     47a:	18 95       	reti

0000047c <__vector_13>:

// INTERRUPT HANDLER for green LED
ISR(TIMER1_COMPA_vect) {
     47c:	1f 92       	push	r1
     47e:	0f 92       	push	r0
     480:	0f b6       	in	r0, 0x3f	; 63
     482:	0f 92       	push	r0
     484:	11 24       	eor	r1, r1
     486:	8f 93       	push	r24
     488:	9f 93       	push	r25
     48a:	af 93       	push	r26
     48c:	bf 93       	push	r27

	// This the Interrupt Service Routine for tracking green toggles. The toggling is done in hardware.
	// Each time the TCNT count is equal to the OCRxx register, this interrupt is enabled.
	// This interrupts at the user-specified frequency for the green LED.
	
	G_green_toggles++;
     48e:	80 91 79 03 	lds	r24, 0x0379
     492:	90 91 7a 03 	lds	r25, 0x037A
     496:	a0 91 7b 03 	lds	r26, 0x037B
     49a:	b0 91 7c 03 	lds	r27, 0x037C
     49e:	01 96       	adiw	r24, 0x01	; 1
     4a0:	a1 1d       	adc	r26, r1
     4a2:	b1 1d       	adc	r27, r1
     4a4:	80 93 79 03 	sts	0x0379, r24
     4a8:	90 93 7a 03 	sts	0x037A, r25
     4ac:	a0 93 7b 03 	sts	0x037B, r26
     4b0:	b0 93 7c 03 	sts	0x037C, r27
	
}
     4b4:	bf 91       	pop	r27
     4b6:	af 91       	pop	r26
     4b8:	9f 91       	pop	r25
     4ba:	8f 91       	pop	r24
     4bc:	0f 90       	pop	r0
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	0f 90       	pop	r0
     4c2:	1f 90       	pop	r1
     4c4:	18 95       	reti

000004c6 <wait_for_sending_to_finish>:
// finish transmitting on USB_COMM.  We must call this before modifying
// send_buffer or trying to send more bytes, because otherwise we could
// corrupt an existing transmission.
void wait_for_sending_to_finish()
{
	while(!serial_send_buffer_empty(USB_COMM))
     4c6:	82 e0       	ldi	r24, 0x02	; 2
     4c8:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <serial_send_buffer_empty>
     4cc:	81 11       	cpse	r24, r1
     4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <wait_for_sending_to_finish+0x10>
		serial_check();		// USB_COMM port is always in SERIAL_CHECK mode
     4d0:	0e 94 aa 0b 	call	0x1754	; 0x1754 <serial_check>
     4d4:	f8 cf       	rjmp	.-16     	; 0x4c6 <wait_for_sending_to_finish>
}
     4d6:	08 95       	ret

000004d8 <print_usb>:
char send_buffer[32];

// A generic function for whenever you want to print to your serial comm window.
// Provide a string and the length of that string. My serial comm likes "\r\n" at 
// the end of each string (be sure to include in length) for proper linefeed.
void print_usb( char *buffer, int n ) {
     4d8:	46 2f       	mov	r20, r22
	serial_send( USB_COMM, buffer, n );
     4da:	bc 01       	movw	r22, r24
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <serial_send>
	wait_for_sending_to_finish();
     4e2:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <wait_for_sending_to_finish>

000004e6 <init_menu>:
	
	char printBuffer[32];
	
	// Set the baud rate to 9600 bits per second.  Each byte takes ten bit
	// times, so you can get at most 960 bytes per second at this speed.
	serial_set_baud_rate(USB_COMM, 9600);
     4e6:	40 e8       	ldi	r20, 0x80	; 128
     4e8:	55 e2       	ldi	r21, 0x25	; 37
     4ea:	60 e0       	ldi	r22, 0x00	; 0
     4ec:	70 e0       	ldi	r23, 0x00	; 0
     4ee:	82 e0       	ldi	r24, 0x02	; 2
     4f0:	0e 94 ef 0a 	call	0x15de	; 0x15de <serial_set_baud_rate>

	// Start receiving bytes in the ring buffer.
	serial_receive_ring(USB_COMM, receive_buffer, sizeof(receive_buffer));
     4f4:	40 e2       	ldi	r20, 0x20	; 32
     4f6:	63 e9       	ldi	r22, 0x93	; 147
     4f8:	73 e0       	ldi	r23, 0x03	; 3
     4fa:	82 e0       	ldi	r24, 0x02	; 2
     4fc:	0e 94 cd 09 	call	0x139a	; 0x139a <serial_receive_ring>

	//memcpy_P( send_buffer, PSTR("USB Serial Initialized\r\n"), 24 );
	//snprintf( printBuffer, 24, "USB Serial Initialized\r\n");
	//print_usb( printBuffer, 24 );
	print_usb( "USB Serial Initialized\r\n", 24);
     500:	68 e1       	ldi	r22, 0x18	; 24
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	84 e7       	ldi	r24, 0x74	; 116
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>

	//memcpy_P( send_buffer, MENU, MENU_LENGTH );
	print_usb( MENU, MENU_LENGTH );
     50c:	6b e1       	ldi	r22, 0x1B	; 27
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	8d e8       	ldi	r24, 0x8D	; 141
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <print_usb>

00000518 <process_received_string>:
//------------------------------------------------------------------------------------------
// process_received_byte: Parses a menu command (series of keystrokes) that 
// has been received on USB_COMM and processes it accordingly.
// The menu command is buffered in check_for_new_bytes_received (which calls this function).
void process_received_string(const char* buffer)
{
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	a4 97       	sbiw	r28, 0x24	; 36
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
	// parse and echo back to serial comm window (and optionally the LCD)
	char color;
	char op_char;
	int value;
	int parsed;
	parsed = sscanf(buffer, "%c %c %d", &op_char, &color, &value);
     530:	9e 01       	movw	r18, r28
     532:	2f 5d       	subi	r18, 0xDF	; 223
     534:	3f 4f       	sbci	r19, 0xFF	; 255
     536:	3f 93       	push	r19
     538:	2f 93       	push	r18
     53a:	2d 5f       	subi	r18, 0xFD	; 253
     53c:	3f 4f       	sbci	r19, 0xFF	; 255
     53e:	3f 93       	push	r19
     540:	2f 93       	push	r18
     542:	21 50       	subi	r18, 0x01	; 1
     544:	31 09       	sbc	r19, r1
     546:	3f 93       	push	r19
     548:	2f 93       	push	r18
     54a:	29 ea       	ldi	r18, 0xA9	; 169
     54c:	31 e0       	ldi	r19, 0x01	; 1
     54e:	3f 93       	push	r19
     550:	2f 93       	push	r18
     552:	9f 93       	push	r25
     554:	8f 93       	push	r24
     556:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <sscanf>
#ifdef ECHO2LCD
	lcd_goto_xy(0,0);
	printf("Got %c %c %lu\n", op_char, color, value);
#endif
	length = sprintf( tempBuffer, "Op:%c C:%c V:%lu\r\n", op_char, color, value );
     55a:	8a a1       	ldd	r24, Y+34	; 0x22
     55c:	8f 93       	push	r24
     55e:	89 a1       	ldd	r24, Y+33	; 0x21
     560:	8f 93       	push	r24
     562:	8c a1       	ldd	r24, Y+36	; 0x24
     564:	1f 92       	push	r1
     566:	8f 93       	push	r24
     568:	8b a1       	ldd	r24, Y+35	; 0x23
     56a:	1f 92       	push	r1
     56c:	8f 93       	push	r24
     56e:	82 eb       	ldi	r24, 0xB2	; 178
     570:	91 e0       	ldi	r25, 0x01	; 1
     572:	9f 93       	push	r25
     574:	8f 93       	push	r24
     576:	8e 01       	movw	r16, r28
     578:	0f 5f       	subi	r16, 0xFF	; 255
     57a:	1f 4f       	sbci	r17, 0xFF	; 255
     57c:	1f 93       	push	r17
     57e:	0f 93       	push	r16
     580:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <sprintf>
	print_usb( tempBuffer, length );
     584:	bc 01       	movw	r22, r24
     586:	c8 01       	movw	r24, r16
     588:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>
	
	// convert color to upper and check if valid
	color -= 32*(color>='a' && color<='z');
     58c:	8c a1       	ldd	r24, Y+36	; 0x24
     58e:	9f e9       	ldi	r25, 0x9F	; 159
     590:	98 0f       	add	r25, r24
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	f8 94       	cli
     596:	de bf       	out	0x3e, r29	; 62
     598:	0f be       	out	0x3f, r0	; 63
     59a:	cd bf       	out	0x3d, r28	; 61
     59c:	9a 31       	cpi	r25, 0x1A	; 26
     59e:	10 f4       	brcc	.+4      	; 0x5a4 <process_received_string+0x8c>
     5a0:	90 e2       	ldi	r25, 0x20	; 32
     5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <process_received_string+0x8e>
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	89 1b       	sub	r24, r25
     5a8:	8c a3       	std	Y+36, r24	; 0x24
	switch (color) {
     5aa:	87 34       	cpi	r24, 0x47	; 71
     5ac:	11 f1       	breq	.+68     	; 0x5f2 <process_received_string+0xda>
     5ae:	18 f4       	brcc	.+6      	; 0x5b6 <process_received_string+0x9e>
     5b0:	81 34       	cpi	r24, 0x41	; 65
     5b2:	f9 f0       	breq	.+62     	; 0x5f2 <process_received_string+0xda>
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <process_received_string+0xa6>
     5b6:	82 35       	cpi	r24, 0x52	; 82
     5b8:	e1 f0       	breq	.+56     	; 0x5f2 <process_received_string+0xda>
     5ba:	89 35       	cpi	r24, 0x59	; 89
     5bc:	d1 f0       	breq	.+52     	; 0x5f2 <process_received_string+0xda>
		case 'R':
		case 'G':
		case 'Y': 
		case 'A': break;
		default:
			print_usb( "Bad Color. Try {RGYA}\r\n", 23 );
     5be:	67 e1       	ldi	r22, 0x17	; 23
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	85 ec       	ldi	r24, 0xC5	; 197
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>
			printf("Color: %c", color);
     5ca:	8c a1       	ldd	r24, Y+36	; 0x24
     5cc:	1f 92       	push	r1
     5ce:	8f 93       	push	r24
     5d0:	8d ed       	ldi	r24, 0xDD	; 221
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	9f 93       	push	r25
     5d6:	8f 93       	push	r24
     5d8:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <printf>
			print_usb( MENU, MENU_LENGTH);
     5dc:	6b e1       	ldi	r22, 0x1B	; 27
     5de:	70 e0       	ldi	r23, 0x00	; 0
     5e0:	8d e8       	ldi	r24, 0x8D	; 141
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>
			return;
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	d7 c0       	rjmp	.+430    	; 0x7a0 <process_received_string+0x288>
	}

	// Check valid command and implement
	switch (op_char) {
     5f2:	9b a1       	ldd	r25, Y+35	; 0x23
     5f4:	9a 35       	cpi	r25, 0x5A	; 90
     5f6:	09 f4       	brne	.+2      	; 0x5fa <process_received_string+0xe2>
     5f8:	8d c0       	rjmp	.+282    	; 0x714 <process_received_string+0x1fc>
     5fa:	28 f4       	brcc	.+10     	; 0x606 <process_received_string+0xee>
     5fc:	90 35       	cpi	r25, 0x50	; 80
     5fe:	89 f0       	breq	.+34     	; 0x622 <process_received_string+0x10a>
     600:	94 35       	cpi	r25, 0x54	; 84
     602:	51 f0       	breq	.+20     	; 0x618 <process_received_string+0x100>
     604:	c1 c0       	rjmp	.+386    	; 0x788 <process_received_string+0x270>
     606:	94 37       	cpi	r25, 0x74	; 116
     608:	39 f0       	breq	.+14     	; 0x618 <process_received_string+0x100>
     60a:	9a 37       	cpi	r25, 0x7A	; 122
     60c:	09 f4       	brne	.+2      	; 0x610 <process_received_string+0xf8>
     60e:	82 c0       	rjmp	.+260    	; 0x714 <process_received_string+0x1fc>
     610:	90 37       	cpi	r25, 0x70	; 112
     612:	09 f0       	breq	.+2      	; 0x616 <process_received_string+0xfe>
     614:	b9 c0       	rjmp	.+370    	; 0x788 <process_received_string+0x270>
     616:	05 c0       	rjmp	.+10     	; 0x622 <process_received_string+0x10a>
		// change toggle frequency for <color> LED
		case 'T':
		case 't':
			set_toggle(color,value);
     618:	69 a1       	ldd	r22, Y+33	; 0x21
     61a:	7a a1       	ldd	r23, Y+34	; 0x22
     61c:	0e 94 15 01 	call	0x22a	; 0x22a <set_toggle>
			break; 
     620:	b9 c0       	rjmp	.+370    	; 0x794 <process_received_string+0x27c>
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
     622:	87 34       	cpi	r24, 0x47	; 71
     624:	09 f4       	brne	.+2      	; 0x628 <process_received_string+0x110>
     626:	53 c0       	rjmp	.+166    	; 0x6ce <process_received_string+0x1b6>
     628:	80 f5       	brcc	.+96     	; 0x68a <process_received_string+0x172>
     62a:	81 34       	cpi	r24, 0x41	; 65
     62c:	09 f0       	breq	.+2      	; 0x630 <process_received_string+0x118>
     62e:	6d c0       	rjmp	.+218    	; 0x70a <process_received_string+0x1f2>
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %lu\r\n", G_yellow_toggles );
					print_usb( tempBuffer, length ); 
					break;
				case 'A': 
					length = sprintf( tempBuffer, "Toggles R:%lu G:%lu Y:%lu\r\n", G_red_toggles, G_green_toggles, G_yellow_toggles );
     630:	80 91 78 03 	lds	r24, 0x0378
     634:	8f 93       	push	r24
     636:	80 91 77 03 	lds	r24, 0x0377
     63a:	8f 93       	push	r24
     63c:	80 91 76 03 	lds	r24, 0x0376
     640:	8f 93       	push	r24
     642:	80 91 75 03 	lds	r24, 0x0375
     646:	8f 93       	push	r24
     648:	80 91 7c 03 	lds	r24, 0x037C
     64c:	8f 93       	push	r24
     64e:	80 91 7b 03 	lds	r24, 0x037B
     652:	8f 93       	push	r24
     654:	80 91 7a 03 	lds	r24, 0x037A
     658:	8f 93       	push	r24
     65a:	80 91 79 03 	lds	r24, 0x0379
     65e:	8f 93       	push	r24
     660:	80 91 80 03 	lds	r24, 0x0380
     664:	8f 93       	push	r24
     666:	80 91 7f 03 	lds	r24, 0x037F
     66a:	8f 93       	push	r24
     66c:	80 91 7e 03 	lds	r24, 0x037E
     670:	8f 93       	push	r24
     672:	80 91 7d 03 	lds	r24, 0x037D
     676:	8f 93       	push	r24
     678:	8a e1       	ldi	r24, 0x1A	; 26
     67a:	92 e0       	ldi	r25, 0x02	; 2
     67c:	9f 93       	push	r25
     67e:	8f 93       	push	r24
     680:	1f 93       	push	r17
     682:	0f 93       	push	r16
     684:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <sprintf>
     688:	36 c0       	rjmp	.+108    	; 0x6f6 <process_received_string+0x1de>
			set_toggle(color,value);
			break; 
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
     68a:	82 35       	cpi	r24, 0x52	; 82
     68c:	89 f0       	breq	.+34     	; 0x6b0 <process_received_string+0x198>
     68e:	89 35       	cpi	r24, 0x59	; 89
     690:	e1 f5       	brne	.+120    	; 0x70a <process_received_string+0x1f2>
				case 'G': 
					length = sprintf( tempBuffer, "G toggles: %lu\r\n", G_green_toggles );
					print_usb( tempBuffer, length ); 
					break;
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %lu\r\n", G_yellow_toggles );
     692:	80 91 78 03 	lds	r24, 0x0378
     696:	8f 93       	push	r24
     698:	80 91 77 03 	lds	r24, 0x0377
     69c:	8f 93       	push	r24
     69e:	80 91 76 03 	lds	r24, 0x0376
     6a2:	8f 93       	push	r24
     6a4:	80 91 75 03 	lds	r24, 0x0375
     6a8:	8f 93       	push	r24
     6aa:	89 e0       	ldi	r24, 0x09	; 9
     6ac:	92 e0       	ldi	r25, 0x02	; 2
     6ae:	1d c0       	rjmp	.+58     	; 0x6ea <process_received_string+0x1d2>
		// print counter for <color> LED 
		case 'P':
		case 'p':
			switch(color) {
				case 'R': 
					length = sprintf( tempBuffer, "R toggles: %lu\r\n", G_red_toggles );
     6b0:	80 91 80 03 	lds	r24, 0x0380
     6b4:	8f 93       	push	r24
     6b6:	80 91 7f 03 	lds	r24, 0x037F
     6ba:	8f 93       	push	r24
     6bc:	80 91 7e 03 	lds	r24, 0x037E
     6c0:	8f 93       	push	r24
     6c2:	80 91 7d 03 	lds	r24, 0x037D
     6c6:	8f 93       	push	r24
     6c8:	87 ee       	ldi	r24, 0xE7	; 231
     6ca:	91 e0       	ldi	r25, 0x01	; 1
     6cc:	0e c0       	rjmp	.+28     	; 0x6ea <process_received_string+0x1d2>
					print_usb( tempBuffer, length ); 
					break;
				case 'G': 
					length = sprintf( tempBuffer, "G toggles: %lu\r\n", G_green_toggles );
     6ce:	80 91 7c 03 	lds	r24, 0x037C
     6d2:	8f 93       	push	r24
     6d4:	80 91 7b 03 	lds	r24, 0x037B
     6d8:	8f 93       	push	r24
     6da:	80 91 7a 03 	lds	r24, 0x037A
     6de:	8f 93       	push	r24
     6e0:	80 91 79 03 	lds	r24, 0x0379
     6e4:	8f 93       	push	r24
     6e6:	88 ef       	ldi	r24, 0xF8	; 248
     6e8:	91 e0       	ldi	r25, 0x01	; 1
					print_usb( tempBuffer, length ); 
					break;
				case 'Y': 
					length = sprintf( tempBuffer, "Y toggles: %lu\r\n", G_yellow_toggles );
     6ea:	9f 93       	push	r25
     6ec:	8f 93       	push	r24
     6ee:	1f 93       	push	r17
     6f0:	0f 93       	push	r16
     6f2:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <sprintf>
					print_usb( tempBuffer, length ); 
					break;
				case 'A': 
					length = sprintf( tempBuffer, "Toggles R:%lu G:%lu Y:%lu\r\n", G_red_toggles, G_green_toggles, G_yellow_toggles );
					print_usb( tempBuffer, length ); 
     6f6:	bc 01       	movw	r22, r24
     6f8:	c8 01       	movw	r24, r16
     6fa:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>
					break;
     6fe:	0f b6       	in	r0, 0x3f	; 63
     700:	f8 94       	cli
     702:	de bf       	out	0x3e, r29	; 62
     704:	0f be       	out	0x3f, r0	; 63
     706:	cd bf       	out	0x3d, r28	; 61
     708:	45 c0       	rjmp	.+138    	; 0x794 <process_received_string+0x27c>
				default: print_usb("Default in p(color). How?\r\n", 27 );
     70a:	6b e1       	ldi	r22, 0x1B	; 27
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	86 e3       	ldi	r24, 0x36	; 54
     710:	92 e0       	ldi	r25, 0x02	; 2
     712:	3e c0       	rjmp	.+124    	; 0x790 <process_received_string+0x278>
			break;

		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
     714:	87 34       	cpi	r24, 0x47	; 71
     716:	09 f1       	breq	.+66     	; 0x75a <process_received_string+0x242>
     718:	98 f4       	brcc	.+38     	; 0x740 <process_received_string+0x228>
     71a:	81 34       	cpi	r24, 0x41	; 65
     71c:	81 f5       	brne	.+96     	; 0x77e <process_received_string+0x266>
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
				case 'Y': G_yellow_toggles=0; break;
				case 'A': G_red_toggles = G_green_toggles = G_yellow_toggles = 0; break;
     71e:	10 92 75 03 	sts	0x0375, r1
     722:	10 92 76 03 	sts	0x0376, r1
     726:	10 92 77 03 	sts	0x0377, r1
     72a:	10 92 78 03 	sts	0x0378, r1
     72e:	10 92 79 03 	sts	0x0379, r1
     732:	10 92 7a 03 	sts	0x037A, r1
     736:	10 92 7b 03 	sts	0x037B, r1
     73a:	10 92 7c 03 	sts	0x037C, r1
     73e:	16 c0       	rjmp	.+44     	; 0x76c <process_received_string+0x254>
			break;

		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
     740:	82 35       	cpi	r24, 0x52	; 82
     742:	a1 f0       	breq	.+40     	; 0x76c <process_received_string+0x254>
     744:	89 35       	cpi	r24, 0x59	; 89
     746:	d9 f4       	brne	.+54     	; 0x77e <process_received_string+0x266>
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
				case 'Y': G_yellow_toggles=0; break;
     748:	10 92 75 03 	sts	0x0375, r1
     74c:	10 92 76 03 	sts	0x0376, r1
     750:	10 92 77 03 	sts	0x0377, r1
     754:	10 92 78 03 	sts	0x0378, r1
     758:	1d c0       	rjmp	.+58     	; 0x794 <process_received_string+0x27c>
		// zero counter for <color> LED 
		case 'Z':
		case 'z':
			switch(color) {
				case 'R': G_red_toggles=0; break;
				case 'G': G_green_toggles=0; break;
     75a:	10 92 79 03 	sts	0x0379, r1
     75e:	10 92 7a 03 	sts	0x037A, r1
     762:	10 92 7b 03 	sts	0x037B, r1
     766:	10 92 7c 03 	sts	0x037C, r1
     76a:	14 c0       	rjmp	.+40     	; 0x794 <process_received_string+0x27c>
				case 'Y': G_yellow_toggles=0; break;
				case 'A': G_red_toggles = G_green_toggles = G_yellow_toggles = 0; break;
     76c:	10 92 7d 03 	sts	0x037D, r1
     770:	10 92 7e 03 	sts	0x037E, r1
     774:	10 92 7f 03 	sts	0x037F, r1
     778:	10 92 80 03 	sts	0x0380, r1
     77c:	0b c0       	rjmp	.+22     	; 0x794 <process_received_string+0x27c>
				default: print_usb("Default in z(color). How?\r\n", 27 );
     77e:	6b e1       	ldi	r22, 0x1B	; 27
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	82 e5       	ldi	r24, 0x52	; 82
     784:	92 e0       	ldi	r25, 0x02	; 2
     786:	04 c0       	rjmp	.+8      	; 0x790 <process_received_string+0x278>
			}
			break;
		default:
			print_usb( "Command does not compute.\r\n", 27 );
     788:	6b e1       	ldi	r22, 0x1B	; 27
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	8e e6       	ldi	r24, 0x6E	; 110
     78e:	92 e0       	ldi	r25, 0x02	; 2
     790:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>
		} // end switch(op_char) 
		
	print_usb( MENU, MENU_LENGTH);
     794:	6b e1       	ldi	r22, 0x1B	; 27
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	8d e8       	ldi	r24, 0x8D	; 141
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <print_usb>

} //end menu()
     7a0:	a4 96       	adiw	r28, 0x24	; 36
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	f8 94       	cli
     7a6:	de bf       	out	0x3e, r29	; 62
     7a8:	0f be       	out	0x3f, r0	; 63
     7aa:	cd bf       	out	0x3d, r28	; 61
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	08 95       	ret

000007b6 <check_for_new_bytes_received>:

//---------------------------------------------------------------------------------------
// If there are received bytes to process, this function loops through the receive_buffer
// accumulating new bytes (keystrokes) in another buffer for processing.
void check_for_new_bytes_received()
{
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	a0 97       	sbiw	r28, 0x20	; 32
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	f8 94       	cli
     7c4:	de bf       	out	0x3e, r29	; 62
     7c6:	0f be       	out	0x3f, r0	; 63
     7c8:	cd bf       	out	0x3d, r28	; 61
	char menuBuffer[32];
	static int received = 0;
	
	// while there are unprocessed keystrokes in the receive_buffer, grab them and buffer
	// them into the menuBuffer
	while(serial_get_received_bytes(USB_COMM) != receive_buffer_position)
     7ca:	82 e0       	ldi	r24, 0x02	; 2
     7cc:	0e 94 c4 07 	call	0xf88	; 0xf88 <serial_get_received_bytes>
     7d0:	90 91 b3 03 	lds	r25, 0x03B3
     7d4:	20 91 8d 03 	lds	r18, 0x038D
     7d8:	30 91 8e 03 	lds	r19, 0x038E
     7dc:	89 17       	cp	r24, r25
     7de:	d9 f0       	breq	.+54     	; 0x816 <check_for_new_bytes_received+0x60>
	{
		// place in a buffer for processing
		menuBuffer[received] = receive_buffer[receive_buffer_position];
     7e0:	a1 e0       	ldi	r26, 0x01	; 1
     7e2:	b0 e0       	ldi	r27, 0x00	; 0
     7e4:	ac 0f       	add	r26, r28
     7e6:	bd 1f       	adc	r27, r29
     7e8:	a2 0f       	add	r26, r18
     7ea:	b3 1f       	adc	r27, r19
     7ec:	e9 2f       	mov	r30, r25
     7ee:	f0 e0       	ldi	r31, 0x00	; 0
     7f0:	ed 56       	subi	r30, 0x6D	; 109
     7f2:	fc 4f       	sbci	r31, 0xFC	; 252
     7f4:	80 81       	ld	r24, Z
     7f6:	8c 93       	st	X, r24
		++received;
     7f8:	2f 5f       	subi	r18, 0xFF	; 255
     7fa:	3f 4f       	sbci	r19, 0xFF	; 255
     7fc:	30 93 8e 03 	sts	0x038E, r19
     800:	20 93 8d 03 	sts	0x038D, r18
		
		// Increment receive_buffer_position, but wrap around when it gets to
		// the end of the buffer. 
		if ( receive_buffer_position == sizeof(receive_buffer) - 1 )
     804:	9f 31       	cpi	r25, 0x1F	; 31
     806:	19 f4       	brne	.+6      	; 0x80e <check_for_new_bytes_received+0x58>
		{
			receive_buffer_position = 0;
     808:	10 92 b3 03 	sts	0x03B3, r1
     80c:	de cf       	rjmp	.-68     	; 0x7ca <check_for_new_bytes_received+0x14>
		}			
		else
		{
			receive_buffer_position++;
     80e:	9f 5f       	subi	r25, 0xFF	; 255
     810:	90 93 b3 03 	sts	0x03B3, r25
     814:	da cf       	rjmp	.-76     	; 0x7ca <check_for_new_bytes_received+0x14>
		}
	}
	// If there were keystrokes processed, check if a menu command
	if (received) {
     816:	21 15       	cp	r18, r1
     818:	31 05       	cpc	r19, r1
     81a:	91 f0       	breq	.+36     	; 0x840 <check_for_new_bytes_received+0x8a>
		// if only 1 received, it was MOST LIKELY a carriage return. 
		// Even if it was a single keystroke, it is not a menu command, so ignore it.
		if ( 1 == received ) {
     81c:	21 30       	cpi	r18, 0x01	; 1
     81e:	31 05       	cpc	r19, r1
     820:	59 f0       	breq	.+22     	; 0x838 <check_for_new_bytes_received+0x82>
			received = 0;
			return;
		}
		// Process buffer: terminate string, process, reset index to beginning of array to receive another command
		menuBuffer[received] = '\0';
     822:	e1 e0       	ldi	r30, 0x01	; 1
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	ec 0f       	add	r30, r28
     828:	fd 1f       	adc	r31, r29
     82a:	e2 0f       	add	r30, r18
     82c:	f3 1f       	adc	r31, r19
     82e:	10 82       	st	Z, r1
		for (int i=0; i<received; i++)
		{
			print_character(menuBuffer[i]);
		}
#endif
		process_received_string(menuBuffer);
     830:	ce 01       	movw	r24, r28
     832:	01 96       	adiw	r24, 0x01	; 1
     834:	0e 94 8c 02 	call	0x518	; 0x518 <process_received_string>
		received = 0;
     838:	10 92 8e 03 	sts	0x038E, r1
     83c:	10 92 8d 03 	sts	0x038D, r1
	}
}
     840:	a0 96       	adiw	r28, 0x20	; 32
     842:	0f b6       	in	r0, 0x3f	; 63
     844:	f8 94       	cli
     846:	de bf       	out	0x3e, r29	; 62
     848:	0f be       	out	0x3f, r0	; 63
     84a:	cd bf       	out	0x3d, r28	; 61
     84c:	df 91       	pop	r29
     84e:	cf 91       	pop	r28
     850:	08 95       	ret

00000852 <init_timers>:
extern uint32_t G_green_period;
extern uint32_t G_yellow_period;

extern uint32_t G_release_red;

void init_timers() {
     852:	cf 93       	push	r28
	//// SET appropriate bits in TCCR....
	//// Using CTC mode with OCR0 for TOP. This is mode 2, thus WGM0/1/0 = 010.
	//// Using pre-scaler 256. This is CS0/2/1/0 = 100
	//// Software Clock Interrupt Frequency: 1000 = f_IO / (prescaler*OCR0)
	//// Set OCR0 appropriately for TOP to generate desired frequency of 1KHz
	printf("Initializing software clock to freq 1000Hz (period 1 ms)\n");
     854:	8a e8       	ldi	r24, 0x8A	; 138
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <puts>

	//Enable output compare match interrupt on timer 0A
	TCCR0A = (1<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0x0<<3) | (0x0<<2) | (1<<WGM01) | (0<<WGM00);
     85c:	82 e8       	ldi	r24, 0x82	; 130
     85e:	84 bd       	out	0x24, r24	; 36
	//      --^--                                                                         --^--
	TCCR0B = (0<<FOC0A)  | (0<<FOC0B)  | (0x0<<5) | (0x0<<4) | (0<<WGM02) | (1<<CS02) |  (0<<CS01) | (0<<CS00);
     860:	84 e0       	ldi	r24, 0x04	; 4
     862:	85 bd       	out	0x25, r24	; 37
	//                                                                     --^--
	OCR0A = 0x4E; // 78
     864:	8e e4       	ldi	r24, 0x4E	; 78
     866:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = (0x0<<7) | (0x0<<6) | (0x0<<5) | (0x0<<4) | (0x0<<3) | (0<<OCIE0B) | (1<<OCIE0A) | (0<<TOIE0);
     868:	c2 e0       	ldi	r28, 0x02	; 2
     86a:	c0 93 6e 00 	sts	0x006E, r28
	//                                                                           --^--
	G_ms_ticks = 0;	// Initialize counter
     86e:	10 92 85 03 	sts	0x0385, r1
     872:	10 92 86 03 	sts	0x0386, r1
     876:	10 92 87 03 	sts	0x0387, r1
     87a:	10 92 88 03 	sts	0x0388, r1
	// THE ISR for this is in the LEDs.c file

	// SET appropriate bits in TCCR ...
	// Using CTC mode with OCR3A for TOP. This is mode 4, thus WGM1(3?)/3210 = 0,1,0,0 = 0x4.
	// Using pre-scaler 64. This is CS1(3?)_210 = 0,1,1 = 0x3.
	TCCR3A = (1<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0x0<<3) | (0x0<<2) | (0<<WGM31) | (0<<WGM30);
     87e:	80 e8       	ldi	r24, 0x80	; 128
     880:	80 93 90 00 	sts	0x0090, r24
	//      --^--
	TCCR3B = (0<<ICNC3) | (0<<ICES3) | (0x0<<5) | (0<<WGM33) | (1<<WGM32) | (0<<CS32) | (1<<CS31) | (1<<CS30);
     884:	8b e0       	ldi	r24, 0x0B	; 11
     886:	80 93 91 00 	sts	0x0091, r24
	//                                                        --^--                    --^--       --^--
	// Interrupt Frequency: 10 = f_IO / (prescaler*OCR3A)
	// Set OCR3A appropriately for TOP to generate desired frequency using Y_TIMER_RESOLUTION (100 ms).
	// NOTE: This is not the toggle frequency, rather a tick frequency used to time toggles.
	OCR3A = 0x7A12; //31250
     88a:	e8 e9       	ldi	r30, 0x98	; 152
     88c:	f0 e0       	ldi	r31, 0x00	; 0
     88e:	82 e1       	ldi	r24, 0x12	; 18
     890:	9a e7       	ldi	r25, 0x7A	; 122
     892:	91 83       	std	Z+1, r25	; 0x01
     894:	80 83       	st	Z, r24
	printf("Initializing yellow clock to freq %luHz (period %lu ms)\n",(int)(20,000,000/(1024*OCR3A)),Y_TIMER_RESOLUTION);
     896:	80 81       	ld	r24, Z
     898:	91 81       	ldd	r25, Z+1	; 0x01
     89a:	1f 92       	push	r1
     89c:	84 e6       	ldi	r24, 0x64	; 100
     89e:	8f 93       	push	r24
     8a0:	1f 92       	push	r1
     8a2:	1f 92       	push	r1
     8a4:	83 ec       	ldi	r24, 0xC3	; 195
     8a6:	92 e0       	ldi	r25, 0x02	; 2
     8a8:	9f 93       	push	r25
     8aa:	8f 93       	push	r24
     8ac:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <printf>

	//Enable output compare match interrupt on timer 3A
	TIMSK3 = (0x0<<7) | (0x0<<6) | (0<<ICIE3) | (0x0<<4) | (0x0<<3) | (0<<OCIE3B) | (1<<OCIE3A) | (0<<TOIE3);
     8b0:	c0 93 71 00 	sts	0x0071, r28
	//                                                                             --^--
	G_yellow_ticks = 0;
     8b4:	10 92 89 03 	sts	0x0389, r1
     8b8:	10 92 8a 03 	sts	0x038A, r1
     8bc:	10 92 8b 03 	sts	0x038B, r1
     8c0:	10 92 8c 03 	sts	0x038C, r1
	// used to toggle the LED is limited.

	// Using CTC mode with OCR1A for TOP. This is mode 10, thus WGM3/3210 = 1010.
	// Toggle OC1A on a compare match. Thus COM1A_10 = 10
	// Using pre-scaler 1024. This is CS1/2/1/0 = 101
	TCCR1A = (1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0x0<<3) | (0x0<<2) | (1<<WGM11) | (0<<WGM10);
     8c4:	82 ea       	ldi	r24, 0xA2	; 162
     8c6:	80 93 80 00 	sts	0x0080, r24
	//      --^--                                                                         --^--
	TCCR1B = (0<<ICNC1) | (0<<ICES1) | (0x0<<5) | (1<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (1<<CS10);
     8ca:	85 e1       	ldi	r24, 0x15	; 21
     8cc:	80 93 81 00 	sts	0x0081, r24
	//                                           --^--                     --^--                   --^--

	//// Interrupt Frequency: (?) 51ms = f_IO / (1024*OCR1A)
	//// Set OCR1A appropriately for TOP to generate desired frequency.
	//// NOTE: This IS the toggle frequency.
	printf("green period %lu\n",G_green_period);
     8d0:	80 91 2d 01 	lds	r24, 0x012D
     8d4:	8f 93       	push	r24
     8d6:	80 91 2c 01 	lds	r24, 0x012C
     8da:	8f 93       	push	r24
     8dc:	80 91 2b 01 	lds	r24, 0x012B
     8e0:	8f 93       	push	r24
     8e2:	80 91 2a 01 	lds	r24, 0x012A
     8e6:	8f 93       	push	r24
     8e8:	8c ef       	ldi	r24, 0xFC	; 252
     8ea:	92 e0       	ldi	r25, 0x02	; 2
     8ec:	9f 93       	push	r25
     8ee:	8f 93       	push	r24
     8f0:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <printf>
	ICR1 = 19 * G_green_period;
     8f4:	20 91 2a 01 	lds	r18, 0x012A
     8f8:	30 91 2b 01 	lds	r19, 0x012B
     8fc:	43 e1       	ldi	r20, 0x13	; 19
     8fe:	42 9f       	mul	r20, r18
     900:	c0 01       	movw	r24, r0
     902:	43 9f       	mul	r20, r19
     904:	90 0d       	add	r25, r0
     906:	11 24       	eor	r1, r1
     908:	e6 e8       	ldi	r30, 0x86	; 134
     90a:	f0 e0       	ldi	r31, 0x00	; 0
     90c:	91 83       	std	Z+1, r25	; 0x01
     90e:	80 83       	st	Z, r24
	OCR1A = (uint32_t) ICR1 / 2 ;
     910:	80 81       	ld	r24, Z
     912:	91 81       	ldd	r25, Z+1	; 0x01
     914:	96 95       	lsr	r25
     916:	87 95       	ror	r24
     918:	e8 e8       	ldi	r30, 0x88	; 136
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	91 83       	std	Z+1, r25	; 0x01
     91e:	80 83       	st	Z, r24
	TIMSK1 = (0x0<<7) | (0x0<<6) | (0<<ICIE1) | (0x0<<4) | (0x0<<3) | (0<<OCIE1B) | (1<<OCIE1A) | (0<<TOIE1);
     920:	c0 93 6f 00 	sts	0x006F, r28
	//                                                                             --^--
	printf("Set OCR1A to %lu\n",OCR1A);
     924:	80 81       	ld	r24, Z
     926:	91 81       	ldd	r25, Z+1	; 0x01
     928:	9f 93       	push	r25
     92a:	8f 93       	push	r24
     92c:	8e e0       	ldi	r24, 0x0E	; 14
     92e:	93 e0       	ldi	r25, 0x03	; 3
     930:	9f 93       	push	r25
     932:	8f 93       	push	r24
     934:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <printf>
	printf("Initializing green clock to freq %luHz (period %lu ms)\n",(int)(51),G_green_period);
     938:	80 91 2d 01 	lds	r24, 0x012D
     93c:	8f 93       	push	r24
     93e:	80 91 2c 01 	lds	r24, 0x012C
     942:	8f 93       	push	r24
     944:	80 91 2b 01 	lds	r24, 0x012B
     948:	8f 93       	push	r24
     94a:	80 91 2a 01 	lds	r24, 0x012A
     94e:	8f 93       	push	r24
     950:	1f 92       	push	r1
     952:	83 e3       	ldi	r24, 0x33	; 51
     954:	8f 93       	push	r24
     956:	80 e2       	ldi	r24, 0x20	; 32
     958:	93 e0       	ldi	r25, 0x03	; 3
     95a:	9f 93       	push	r25
     95c:	8f 93       	push	r24
     95e:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <printf>
     962:	8d b7       	in	r24, 0x3d	; 61
     964:	9e b7       	in	r25, 0x3e	; 62
     966:	48 96       	adiw	r24, 0x18	; 24
     968:	0f b6       	in	r0, 0x3f	; 63
     96a:	f8 94       	cli
     96c:	9e bf       	out	0x3e, r25	; 62
     96e:	0f be       	out	0x3f, r0	; 63
     970:	8d bf       	out	0x3d, r24	; 61
	//// A match to this will toggle the green LED.
	//// Regardless of its value (provided it is less than OCR1A), it will match at the frequency of timer 1.
	//OCR1B = 1;

	////Enable output compare match interrupt on timer 1B
}
     972:	cf 91       	pop	r28
     974:	08 95       	ret

00000976 <__vector_16>:

//INTERRUPT HANDLERS
ISR(TIMER0_COMPA_vect) {
     976:	1f 92       	push	r1
     978:	0f 92       	push	r0
     97a:	0f b6       	in	r0, 0x3f	; 63
     97c:	0f 92       	push	r0
     97e:	11 24       	eor	r1, r1
     980:	0b b6       	in	r0, 0x3b	; 59
     982:	0f 92       	push	r0
     984:	2f 93       	push	r18
     986:	3f 93       	push	r19
     988:	4f 93       	push	r20
     98a:	5f 93       	push	r21
     98c:	6f 93       	push	r22
     98e:	7f 93       	push	r23
     990:	8f 93       	push	r24
     992:	9f 93       	push	r25
     994:	af 93       	push	r26
     996:	bf 93       	push	r27
     998:	ef 93       	push	r30
     99a:	ff 93       	push	r31
	// This is the Interrupt Service Routine for Timer0 (10ms clock used for scheduling red).
	// Each time the TCNT count is equal to the OCR0 register, this interrupt is "fired".
	
	G_ms_ticks++; // Increment ticks
     99c:	60 91 85 03 	lds	r22, 0x0385
     9a0:	70 91 86 03 	lds	r23, 0x0386
     9a4:	80 91 87 03 	lds	r24, 0x0387
     9a8:	90 91 88 03 	lds	r25, 0x0388
     9ac:	6f 5f       	subi	r22, 0xFF	; 255
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	8f 4f       	sbci	r24, 0xFF	; 255
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	60 93 85 03 	sts	0x0385, r22
     9b8:	70 93 86 03 	sts	0x0386, r23
     9bc:	80 93 87 03 	sts	0x0387, r24
     9c0:	90 93 88 03 	sts	0x0388, r25

	// if time to toggle the RED LED, set flag to release
	if ( ( G_ms_ticks % G_red_period ) == 0 )
     9c4:	20 91 2e 01 	lds	r18, 0x012E
     9c8:	30 91 2f 01 	lds	r19, 0x012F
     9cc:	40 91 30 01 	lds	r20, 0x0130
     9d0:	50 91 31 01 	lds	r21, 0x0131
     9d4:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__udivmodsi4>
     9d8:	67 2b       	or	r22, r23
     9da:	68 2b       	or	r22, r24
     9dc:	69 2b       	or	r22, r25
     9de:	61 f4       	brne	.+24     	; 0x9f8 <__vector_16+0x82>
	{
		G_release_red = 1;		
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	80 93 81 03 	sts	0x0381, r24
     9ec:	90 93 82 03 	sts	0x0382, r25
     9f0:	a0 93 83 03 	sts	0x0383, r26
     9f4:	b0 93 84 03 	sts	0x0384, r27
	}	
}
     9f8:	ff 91       	pop	r31
     9fa:	ef 91       	pop	r30
     9fc:	bf 91       	pop	r27
     9fe:	af 91       	pop	r26
     a00:	9f 91       	pop	r25
     a02:	8f 91       	pop	r24
     a04:	7f 91       	pop	r23
     a06:	6f 91       	pop	r22
     a08:	5f 91       	pop	r21
     a0a:	4f 91       	pop	r20
     a0c:	3f 91       	pop	r19
     a0e:	2f 91       	pop	r18
     a10:	0f 90       	pop	r0
     a12:	0b be       	out	0x3b, r0	; 59
     a14:	0f 90       	pop	r0
     a16:	0f be       	out	0x3f, r0	; 63
     a18:	0f 90       	pop	r0
     a1a:	1f 90       	pop	r1
     a1c:	18 95       	reti

00000a1e <void_getchar>:
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	08 95       	ret

00000a24 <delayMicroseconds.clone.0>:
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	6f 93       	push	r22
     a2a:	64 e0       	ldi	r22, 0x04	; 4
     a2c:	6a 95       	dec	r22
     a2e:	f1 f7       	brne	.-4      	; 0xa2c <delayMicroseconds.clone.0+0x8>
     a30:	6f 91       	pop	r22
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	c9 f7       	brne	.-14     	; 0xa28 <delayMicroseconds.clone.0+0x4>
     a36:	08 95       	ret

00000a38 <_ZN12OrangutanLCD8busyWaitEv>:
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	17 b1       	in	r17, 0x07	; 7
     a42:	3d 98       	cbi	0x07, 5	; 7
     a44:	28 98       	cbi	0x05, 0	; 5
     a46:	29 9a       	sbi	0x05, 1	; 5
     a48:	c0 e0       	ldi	r28, 0x00	; 0
     a4a:	d0 e0       	ldi	r29, 0x00	; 0
     a4c:	0e 94 12 05 	call	0xa24	; 0xa24 <delayMicroseconds.clone.0>
     a50:	2a 9a       	sbi	0x05, 2	; 5
     a52:	0e 94 12 05 	call	0xa24	; 0xa24 <delayMicroseconds.clone.0>
     a56:	06 b1       	in	r16, 0x06	; 6
     a58:	2a 98       	cbi	0x05, 2	; 5
     a5a:	0e 94 12 05 	call	0xa24	; 0xa24 <delayMicroseconds.clone.0>
     a5e:	2a 9a       	sbi	0x05, 2	; 5
     a60:	0e 94 12 05 	call	0xa24	; 0xa24 <delayMicroseconds.clone.0>
     a64:	2a 98       	cbi	0x05, 2	; 5
     a66:	24 96       	adiw	r28, 0x04	; 4
     a68:	05 ff       	sbrs	r16, 5
     a6a:	10 c0       	rjmp	.+32     	; 0xa8c <_ZN12OrangutanLCD8busyWaitEv+0x54>
     a6c:	9e 01       	movw	r18, r28
     a6e:	40 e0       	ldi	r20, 0x00	; 0
     a70:	50 e0       	ldi	r21, 0x00	; 0
     a72:	80 91 5c 03 	lds	r24, 0x035C
     a76:	90 91 5d 03 	lds	r25, 0x035D
     a7a:	a0 91 5e 03 	lds	r26, 0x035E
     a7e:	b0 91 5f 03 	lds	r27, 0x035F
     a82:	28 17       	cp	r18, r24
     a84:	39 07       	cpc	r19, r25
     a86:	4a 07       	cpc	r20, r26
     a88:	5b 07       	cpc	r21, r27
     a8a:	00 f3       	brcs	.-64     	; 0xa4c <_ZN12OrangutanLCD8busyWaitEv+0x14>
     a8c:	9e 01       	movw	r18, r28
     a8e:	40 e0       	ldi	r20, 0x00	; 0
     a90:	50 e0       	ldi	r21, 0x00	; 0
     a92:	80 91 5c 03 	lds	r24, 0x035C
     a96:	90 91 5d 03 	lds	r25, 0x035D
     a9a:	a0 91 5e 03 	lds	r26, 0x035E
     a9e:	b0 91 5f 03 	lds	r27, 0x035F
     aa2:	28 17       	cp	r18, r24
     aa4:	39 07       	cpc	r19, r25
     aa6:	4a 07       	cpc	r20, r26
     aa8:	5b 07       	cpc	r21, r27
     aaa:	28 f0       	brcs	.+10     	; 0xab6 <_ZN12OrangutanLCD8busyWaitEv+0x7e>
     aac:	82 e3       	ldi	r24, 0x32	; 50
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <_ZN12OrangutanLCD8busyWaitEv+0x86>
     ab6:	80 e3       	ldi	r24, 0x30	; 48
     ab8:	95 e7       	ldi	r25, 0x75	; 117
     aba:	a0 e0       	ldi	r26, 0x00	; 0
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	80 93 5c 03 	sts	0x035C, r24
     ac2:	90 93 5d 03 	sts	0x035D, r25
     ac6:	a0 93 5e 03 	sts	0x035E, r26
     aca:	b0 93 5f 03 	sts	0x035F, r27
     ace:	17 b9       	out	0x07, r17	; 7
     ad0:	df 91       	pop	r29
     ad2:	cf 91       	pop	r28
     ad4:	1f 91       	pop	r17
     ad6:	0f 91       	pop	r16
     ad8:	08 95       	ret

00000ada <_ZN12OrangutanLCD8sendDataEh>:
     ada:	28 b1       	in	r18, 0x08	; 8
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	8f 70       	andi	r24, 0x0F	; 15
     ae0:	90 70       	andi	r25, 0x00	; 0
     ae2:	88 0f       	add	r24, r24
     ae4:	99 1f       	adc	r25, r25
     ae6:	88 0f       	add	r24, r24
     ae8:	99 1f       	adc	r25, r25
     aea:	23 7c       	andi	r18, 0xC3	; 195
     aec:	28 2b       	or	r18, r24
     aee:	28 b9       	out	0x08, r18	; 8
     af0:	2a 9a       	sbi	0x05, 2	; 5
     af2:	0e 94 12 05 	call	0xa24	; 0xa24 <delayMicroseconds.clone.0>
     af6:	2a 98       	cbi	0x05, 2	; 5
     af8:	0e 94 12 05 	call	0xa24	; 0xa24 <delayMicroseconds.clone.0>
     afc:	08 95       	ret

00000afe <_ZN12OrangutanLCD4sendEhhh>:
     afe:	a2 e0       	ldi	r26, 0x02	; 2
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e5 e8       	ldi	r30, 0x85	; 133
     b04:	f5 e0       	ldi	r31, 0x05	; 5
     b06:	0c 94 5a 0d 	jmp	0x1ab4	; 0x1ab4 <__prologue_saves__+0x1a>
     b0a:	18 2f       	mov	r17, r24
     b0c:	4a 83       	std	Y+2, r20	; 0x02
     b0e:	69 83       	std	Y+1, r22	; 0x01
     b10:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZN12OrangutanLCD4initEv>
     b14:	0e 94 1c 05 	call	0xa38	; 0xa38 <_ZN12OrangutanLCD8busyWaitEv>
     b18:	f7 b0       	in	r15, 0x07	; 7
     b1a:	08 b1       	in	r16, 0x08	; 8
     b1c:	29 98       	cbi	0x05, 1	; 5
     b1e:	69 81       	ldd	r22, Y+1	; 0x01
     b20:	4a 81       	ldd	r20, Y+2	; 0x02
     b22:	66 23       	and	r22, r22
     b24:	11 f0       	breq	.+4      	; 0xb2a <_ZN12OrangutanLCD4sendEhhh+0x2c>
     b26:	28 9a       	sbi	0x05, 0	; 5
     b28:	01 c0       	rjmp	.+2      	; 0xb2c <_ZN12OrangutanLCD4sendEhhh+0x2e>
     b2a:	28 98       	cbi	0x05, 0	; 5
     b2c:	87 b1       	in	r24, 0x07	; 7
     b2e:	8c 63       	ori	r24, 0x3C	; 60
     b30:	87 b9       	out	0x07, r24	; 7
     b32:	41 30       	cpi	r20, 0x01	; 1
     b34:	29 f0       	breq	.+10     	; 0xb40 <_ZN12OrangutanLCD4sendEhhh+0x42>
     b36:	81 2f       	mov	r24, r17
     b38:	82 95       	swap	r24
     b3a:	8f 70       	andi	r24, 0x0F	; 15
     b3c:	0e 94 6d 05 	call	0xada	; 0xada <_ZN12OrangutanLCD8sendDataEh>
     b40:	81 2f       	mov	r24, r17
     b42:	8f 70       	andi	r24, 0x0F	; 15
     b44:	0e 94 6d 05 	call	0xada	; 0xada <_ZN12OrangutanLCD8sendDataEh>
     b48:	f7 b8       	out	0x07, r15	; 7
     b4a:	08 b9       	out	0x08, r16	; 8
     b4c:	22 96       	adiw	r28, 0x02	; 2
     b4e:	e5 e0       	ldi	r30, 0x05	; 5
     b50:	0c 94 76 0d 	jmp	0x1aec	; 0x1aec <__epilogue_restores__+0x1a>

00000b54 <_ZN12OrangutanLCD8send_cmdEh>:
     b54:	60 e0       	ldi	r22, 0x00	; 0
     b56:	42 e0       	ldi	r20, 0x02	; 2
     b58:	0e 94 7f 05 	call	0xafe	; 0xafe <_ZN12OrangutanLCD4sendEhhh>
     b5c:	08 95       	ret

00000b5e <_ZN12OrangutanLCD9send_dataEh>:
     b5e:	61 e0       	ldi	r22, 0x01	; 1
     b60:	42 e0       	ldi	r20, 0x02	; 2
     b62:	0e 94 7f 05 	call	0xafe	; 0xafe <_ZN12OrangutanLCD4sendEhhh>
     b66:	08 95       	ret

00000b68 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	41 e0       	ldi	r20, 0x01	; 1
     b6c:	0e 94 7f 05 	call	0xafe	; 0xafe <_ZN12OrangutanLCD4sendEhhh>
     b70:	08 95       	ret

00000b72 <_ZN12OrangutanLCD5init2Ev>:
     b72:	3d 98       	cbi	0x07, 5	; 7
     b74:	45 9a       	sbi	0x08, 5	; 8
     b76:	80 e3       	ldi	r24, 0x30	; 48
     b78:	95 e7       	ldi	r25, 0x75	; 117
     b7a:	a0 e0       	ldi	r26, 0x00	; 0
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	80 93 5c 03 	sts	0x035C, r24
     b82:	90 93 5d 03 	sts	0x035D, r25
     b86:	a0 93 5e 03 	sts	0x035E, r26
     b8a:	b0 93 5f 03 	sts	0x035F, r27
     b8e:	20 9a       	sbi	0x04, 0	; 4
     b90:	21 9a       	sbi	0x04, 1	; 4
     b92:	22 9a       	sbi	0x04, 2	; 4
     b94:	8e e1       	ldi	r24, 0x1E	; 30
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 85 0c 	call	0x190a	; 0x190a <delay_ms>
     b9c:	83 e0       	ldi	r24, 0x03	; 3
     b9e:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     ba2:	86 e0       	ldi	r24, 0x06	; 6
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 94 85 0c 	call	0x190a	; 0x190a <delay_ms>
     baa:	83 e0       	ldi	r24, 0x03	; 3
     bac:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     bb0:	82 e0       	ldi	r24, 0x02	; 2
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	0e 94 85 0c 	call	0x190a	; 0x190a <delay_ms>
     bb8:	83 e0       	ldi	r24, 0x03	; 3
     bba:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     bbe:	82 e0       	ldi	r24, 0x02	; 2
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	0e 94 85 0c 	call	0x190a	; 0x190a <delay_ms>
     bc6:	82 e0       	ldi	r24, 0x02	; 2
     bc8:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     bcc:	82 e0       	ldi	r24, 0x02	; 2
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	0e 94 85 0c 	call	0x190a	; 0x190a <delay_ms>
     bd4:	88 e2       	ldi	r24, 0x28	; 40
     bd6:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     bda:	88 e0       	ldi	r24, 0x08	; 8
     bdc:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     be6:	86 e0       	ldi	r24, 0x06	; 6
     be8:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     bec:	8c e0       	ldi	r24, 0x0C	; 12
     bee:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     bf2:	08 95       	ret

00000bf4 <_ZN12OrangutanLCD4initEv>:
     bf4:	80 91 60 03 	lds	r24, 0x0360
     bf8:	88 23       	and	r24, r24
     bfa:	29 f4       	brne	.+10     	; 0xc06 <_ZN12OrangutanLCD4initEv+0x12>
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	80 93 60 03 	sts	0x0360, r24
     c02:	0e 94 b9 05 	call	0xb72	; 0xb72 <_ZN12OrangutanLCD5init2Ev>
     c06:	08 95       	ret

00000c08 <_ZN12OrangutanLCD5clearEv>:
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     c0e:	80 91 58 03 	lds	r24, 0x0358
     c12:	90 91 59 03 	lds	r25, 0x0359
     c16:	00 97       	sbiw	r24, 0x00	; 0
     c18:	11 f1       	breq	.+68     	; 0xc5e <_ZN12OrangutanLCD5clearEv+0x56>
     c1a:	a0 e0       	ldi	r26, 0x00	; 0
     c1c:	b0 e2       	ldi	r27, 0x20	; 32
     c1e:	08 c0       	rjmp	.+16     	; 0xc30 <_ZN12OrangutanLCD5clearEv+0x28>
     c20:	e0 91 58 03 	lds	r30, 0x0358
     c24:	f0 91 59 03 	lds	r31, 0x0359
     c28:	e2 0f       	add	r30, r18
     c2a:	f3 1f       	adc	r31, r19
     c2c:	b0 83       	st	Z, r27
     c2e:	af 5f       	subi	r26, 0xFF	; 255
     c30:	2a 2f       	mov	r18, r26
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	80 91 00 01 	lds	r24, 0x0100
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	01 97       	sbiw	r24, 0x01	; 1
     c3c:	60 91 01 01 	lds	r22, 0x0101
     c40:	70 e0       	ldi	r23, 0x00	; 0
     c42:	86 9f       	mul	r24, r22
     c44:	a0 01       	movw	r20, r0
     c46:	87 9f       	mul	r24, r23
     c48:	50 0d       	add	r21, r0
     c4a:	96 9f       	mul	r25, r22
     c4c:	50 0d       	add	r21, r0
     c4e:	11 24       	eor	r1, r1
     c50:	24 17       	cp	r18, r20
     c52:	35 07       	cpc	r19, r21
     c54:	2c f3       	brlt	.-54     	; 0xc20 <_ZN12OrangutanLCD5clearEv+0x18>
     c56:	10 92 5b 03 	sts	0x035B, r1
     c5a:	10 92 5a 03 	sts	0x035A, r1
     c5e:	08 95       	ret

00000c60 <clear>:
     c60:	0e 94 04 06 	call	0xc08	; 0xc08 <_ZN12OrangutanLCD5clearEv>
     c64:	08 95       	ret

00000c66 <_ZN12OrangutanLCD5printEPKc>:
     c66:	ef 92       	push	r14
     c68:	ff 92       	push	r15
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	e8 2e       	mov	r14, r24
     c70:	e7 01       	movw	r28, r14
     c72:	7e 01       	movw	r14, r28
     c74:	f9 2e       	mov	r15, r25
     c76:	e7 01       	movw	r28, r14
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <_ZN12OrangutanLCD5printEPKc+0x18>
     c7a:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN12OrangutanLCD9send_dataEh>
     c7e:	89 91       	ld	r24, Y+
     c80:	88 23       	and	r24, r24
     c82:	d9 f7       	brne	.-10     	; 0xc7a <_ZN12OrangutanLCD5printEPKc+0x14>
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	ff 90       	pop	r15
     c8a:	ef 90       	pop	r14
     c8c:	08 95       	ret

00000c8e <print>:
     c8e:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZN12OrangutanLCD5printEPKc>
     c92:	08 95       	ret

00000c94 <_ZN12OrangutanLCD6gotoXYEhh>:
     c94:	a5 e0       	ldi	r26, 0x05	; 5
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	e0 e5       	ldi	r30, 0x50	; 80
     c9a:	f6 e0       	ldi	r31, 0x06	; 6
     c9c:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__prologue_saves__+0x1e>
     ca0:	18 2f       	mov	r17, r24
     ca2:	80 e8       	ldi	r24, 0x80	; 128
     ca4:	89 83       	std	Y+1, r24	; 0x01
     ca6:	80 ec       	ldi	r24, 0xC0	; 192
     ca8:	8a 83       	std	Y+2, r24	; 0x02
     caa:	84 e9       	ldi	r24, 0x94	; 148
     cac:	8b 83       	std	Y+3, r24	; 0x03
     cae:	84 ed       	ldi	r24, 0xD4	; 212
     cb0:	8c 83       	std	Y+4, r24	; 0x04
     cb2:	fe 01       	movw	r30, r28
     cb4:	e6 0f       	add	r30, r22
     cb6:	f1 1d       	adc	r31, r1
     cb8:	81 81       	ldd	r24, Z+1	; 0x01
     cba:	81 0f       	add	r24, r17
     cbc:	6d 83       	std	Y+5, r22	; 0x05
     cbe:	0e 94 aa 05 	call	0xb54	; 0xb54 <_ZN12OrangutanLCD8send_cmdEh>
     cc2:	10 93 5b 03 	sts	0x035B, r17
     cc6:	6d 81       	ldd	r22, Y+5	; 0x05
     cc8:	60 93 5a 03 	sts	0x035A, r22
     ccc:	25 96       	adiw	r28, 0x05	; 5
     cce:	e3 e0       	ldi	r30, 0x03	; 3
     cd0:	0c 94 78 0d 	jmp	0x1af0	; 0x1af0 <__epilogue_restores__+0x1e>

00000cd4 <lcd_putchar>:
     cd4:	a0 e0       	ldi	r26, 0x00	; 0
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	e0 e7       	ldi	r30, 0x70	; 112
     cda:	f6 e0       	ldi	r31, 0x06	; 6
     cdc:	0c 94 57 0d 	jmp	0x1aae	; 0x1aae <__prologue_saves__+0x14>
     ce0:	d8 2e       	mov	r13, r24
     ce2:	80 91 58 03 	lds	r24, 0x0358
     ce6:	90 91 59 03 	lds	r25, 0x0359
     cea:	00 97       	sbiw	r24, 0x00	; 0
     cec:	09 f4       	brne	.+2      	; 0xcf0 <lcd_putchar+0x1c>
     cee:	fa c0       	rjmp	.+500    	; 0xee4 <lcd_putchar+0x210>
     cf0:	2d 2d       	mov	r18, r13
     cf2:	2a 30       	cpi	r18, 0x0A	; 10
     cf4:	09 f4       	brne	.+2      	; 0xcf8 <lcd_putchar+0x24>
     cf6:	43 c0       	rjmp	.+134    	; 0xd7e <lcd_putchar+0xaa>
     cf8:	28 30       	cpi	r18, 0x08	; 8
     cfa:	c9 f4       	brne	.+50     	; 0xd2e <lcd_putchar+0x5a>
     cfc:	80 91 5b 03 	lds	r24, 0x035B
     d00:	81 50       	subi	r24, 0x01	; 1
     d02:	80 93 5b 03 	sts	0x035B, r24
     d06:	8f 3f       	cpi	r24, 0xFF	; 255
     d08:	51 f4       	brne	.+20     	; 0xd1e <lcd_putchar+0x4a>
     d0a:	80 91 5a 03 	lds	r24, 0x035A
     d0e:	81 50       	subi	r24, 0x01	; 1
     d10:	80 93 5a 03 	sts	0x035A, r24
     d14:	80 91 01 01 	lds	r24, 0x0101
     d18:	81 50       	subi	r24, 0x01	; 1
     d1a:	80 93 5b 03 	sts	0x035B, r24
     d1e:	80 91 5a 03 	lds	r24, 0x035A
     d22:	8f 3f       	cpi	r24, 0xFF	; 255
     d24:	09 f0       	breq	.+2      	; 0xd28 <lcd_putchar+0x54>
     d26:	d8 c0       	rjmp	.+432    	; 0xed8 <lcd_putchar+0x204>
     d28:	10 92 5a 03 	sts	0x035A, r1
     d2c:	d3 c0       	rjmp	.+422    	; 0xed4 <lcd_putchar+0x200>
     d2e:	8d 2d       	mov	r24, r13
     d30:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN12OrangutanLCD9send_dataEh>
     d34:	80 91 5a 03 	lds	r24, 0x035A
     d38:	88 23       	and	r24, r24
     d3a:	b9 f0       	breq	.+46     	; 0xd6a <lcd_putchar+0x96>
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	01 97       	sbiw	r24, 0x01	; 1
     d40:	40 91 01 01 	lds	r20, 0x0101
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	84 9f       	mul	r24, r20
     d48:	90 01       	movw	r18, r0
     d4a:	85 9f       	mul	r24, r21
     d4c:	30 0d       	add	r19, r0
     d4e:	94 9f       	mul	r25, r20
     d50:	30 0d       	add	r19, r0
     d52:	11 24       	eor	r1, r1
     d54:	80 91 5b 03 	lds	r24, 0x035B
     d58:	e0 91 58 03 	lds	r30, 0x0358
     d5c:	f0 91 59 03 	lds	r31, 0x0359
     d60:	e2 0f       	add	r30, r18
     d62:	f3 1f       	adc	r31, r19
     d64:	e8 0f       	add	r30, r24
     d66:	f1 1d       	adc	r31, r1
     d68:	d0 82       	st	Z, r13
     d6a:	80 91 5b 03 	lds	r24, 0x035B
     d6e:	8f 5f       	subi	r24, 0xFF	; 255
     d70:	80 93 5b 03 	sts	0x035B, r24
     d74:	90 91 01 01 	lds	r25, 0x0101
     d78:	89 17       	cp	r24, r25
     d7a:	09 f0       	breq	.+2      	; 0xd7e <lcd_putchar+0xaa>
     d7c:	b3 c0       	rjmp	.+358    	; 0xee4 <lcd_putchar+0x210>
     d7e:	40 91 5a 03 	lds	r20, 0x035A
     d82:	24 2f       	mov	r18, r20
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	80 91 00 01 	lds	r24, 0x0100
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	01 97       	sbiw	r24, 0x01	; 1
     d8e:	28 17       	cp	r18, r24
     d90:	39 07       	cpc	r19, r25
     d92:	09 f0       	breq	.+2      	; 0xd96 <lcd_putchar+0xc2>
     d94:	9c c0       	rjmp	.+312    	; 0xece <lcd_putchar+0x1fa>
     d96:	c0 e0       	ldi	r28, 0x00	; 0
     d98:	d0 e0       	ldi	r29, 0x00	; 0
     d9a:	41 c0       	rjmp	.+130    	; 0xe1e <lcd_putchar+0x14a>
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	6c 2f       	mov	r22, r28
     da0:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN12OrangutanLCD6gotoXYEhh>
     da4:	cc 24       	eor	r12, r12
     da6:	8e 01       	movw	r16, r28
     da8:	0f 5f       	subi	r16, 0xFF	; 255
     daa:	1f 4f       	sbci	r17, 0xFF	; 255
     dac:	33 c0       	rjmp	.+102    	; 0xe14 <lcd_putchar+0x140>
     dae:	ec 2c       	mov	r14, r12
     db0:	ff 24       	eor	r15, r15
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	c2 9f       	mul	r28, r18
     db6:	c0 01       	movw	r24, r0
     db8:	c3 9f       	mul	r28, r19
     dba:	90 0d       	add	r25, r0
     dbc:	d2 9f       	mul	r29, r18
     dbe:	90 0d       	add	r25, r0
     dc0:	11 24       	eor	r1, r1
     dc2:	e0 91 58 03 	lds	r30, 0x0358
     dc6:	f0 91 59 03 	lds	r31, 0x0359
     dca:	ee 0d       	add	r30, r14
     dcc:	ff 1d       	adc	r31, r15
     dce:	e8 0f       	add	r30, r24
     dd0:	f9 1f       	adc	r31, r25
     dd2:	80 81       	ld	r24, Z
     dd4:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN12OrangutanLCD9send_dataEh>
     dd8:	80 91 58 03 	lds	r24, 0x0358
     ddc:	90 91 59 03 	lds	r25, 0x0359
     de0:	20 91 01 01 	lds	r18, 0x0101
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	c2 9f       	mul	r28, r18
     de8:	f0 01       	movw	r30, r0
     dea:	c3 9f       	mul	r28, r19
     dec:	f0 0d       	add	r31, r0
     dee:	d2 9f       	mul	r29, r18
     df0:	f0 0d       	add	r31, r0
     df2:	11 24       	eor	r1, r1
     df4:	8e 0d       	add	r24, r14
     df6:	9f 1d       	adc	r25, r15
     df8:	e8 0f       	add	r30, r24
     dfa:	f9 1f       	adc	r31, r25
     dfc:	02 9f       	mul	r16, r18
     dfe:	d0 01       	movw	r26, r0
     e00:	03 9f       	mul	r16, r19
     e02:	b0 0d       	add	r27, r0
     e04:	12 9f       	mul	r17, r18
     e06:	b0 0d       	add	r27, r0
     e08:	11 24       	eor	r1, r1
     e0a:	a8 0f       	add	r26, r24
     e0c:	b9 1f       	adc	r27, r25
     e0e:	8c 91       	ld	r24, X
     e10:	80 83       	st	Z, r24
     e12:	c3 94       	inc	r12
     e14:	20 91 01 01 	lds	r18, 0x0101
     e18:	c2 16       	cp	r12, r18
     e1a:	48 f2       	brcs	.-110    	; 0xdae <lcd_putchar+0xda>
     e1c:	e8 01       	movw	r28, r16
     e1e:	60 91 00 01 	lds	r22, 0x0100
     e22:	86 2f       	mov	r24, r22
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	02 97       	sbiw	r24, 0x02	; 2
     e28:	c8 17       	cp	r28, r24
     e2a:	d9 07       	cpc	r29, r25
     e2c:	0c f4       	brge	.+2      	; 0xe30 <lcd_putchar+0x15c>
     e2e:	b6 cf       	rjmp	.-148    	; 0xd9c <lcd_putchar+0xc8>
     e30:	62 30       	cpi	r22, 0x02	; 2
     e32:	e0 f1       	brcs	.+120    	; 0xeac <lcd_putchar+0x1d8>
     e34:	62 50       	subi	r22, 0x02	; 2
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN12OrangutanLCD6gotoXYEhh>
     e3c:	00 e0       	ldi	r16, 0x00	; 0
     e3e:	10 e2       	ldi	r17, 0x20	; 32
     e40:	31 c0       	rjmp	.+98     	; 0xea4 <lcd_putchar+0x1d0>
     e42:	c0 2f       	mov	r28, r16
     e44:	d0 e0       	ldi	r29, 0x00	; 0
     e46:	80 91 00 01 	lds	r24, 0x0100
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	02 97       	sbiw	r24, 0x02	; 2
     e4e:	50 e0       	ldi	r21, 0x00	; 0
     e50:	84 9f       	mul	r24, r20
     e52:	90 01       	movw	r18, r0
     e54:	85 9f       	mul	r24, r21
     e56:	30 0d       	add	r19, r0
     e58:	94 9f       	mul	r25, r20
     e5a:	30 0d       	add	r19, r0
     e5c:	11 24       	eor	r1, r1
     e5e:	e0 91 58 03 	lds	r30, 0x0358
     e62:	f0 91 59 03 	lds	r31, 0x0359
     e66:	ec 0f       	add	r30, r28
     e68:	fd 1f       	adc	r31, r29
     e6a:	e2 0f       	add	r30, r18
     e6c:	f3 1f       	adc	r31, r19
     e6e:	80 81       	ld	r24, Z
     e70:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN12OrangutanLCD9send_dataEh>
     e74:	80 91 00 01 	lds	r24, 0x0100
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	02 97       	sbiw	r24, 0x02	; 2
     e7c:	40 91 01 01 	lds	r20, 0x0101
     e80:	50 e0       	ldi	r21, 0x00	; 0
     e82:	84 9f       	mul	r24, r20
     e84:	90 01       	movw	r18, r0
     e86:	85 9f       	mul	r24, r21
     e88:	30 0d       	add	r19, r0
     e8a:	94 9f       	mul	r25, r20
     e8c:	30 0d       	add	r19, r0
     e8e:	11 24       	eor	r1, r1
     e90:	e0 91 58 03 	lds	r30, 0x0358
     e94:	f0 91 59 03 	lds	r31, 0x0359
     e98:	ec 0f       	add	r30, r28
     e9a:	fd 1f       	adc	r31, r29
     e9c:	e2 0f       	add	r30, r18
     e9e:	f3 1f       	adc	r31, r19
     ea0:	10 83       	st	Z, r17
     ea2:	0f 5f       	subi	r16, 0xFF	; 255
     ea4:	40 91 01 01 	lds	r20, 0x0101
     ea8:	04 17       	cp	r16, r20
     eaa:	58 f2       	brcs	.-106    	; 0xe42 <lcd_putchar+0x16e>
     eac:	60 91 00 01 	lds	r22, 0x0100
     eb0:	61 50       	subi	r22, 0x01	; 1
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN12OrangutanLCD6gotoXYEhh>
     eb8:	10 e0       	ldi	r17, 0x00	; 0
     eba:	04 c0       	rjmp	.+8      	; 0xec4 <lcd_putchar+0x1f0>
     ebc:	80 e2       	ldi	r24, 0x20	; 32
     ebe:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN12OrangutanLCD9send_dataEh>
     ec2:	1f 5f       	subi	r17, 0xFF	; 255
     ec4:	80 91 01 01 	lds	r24, 0x0101
     ec8:	18 17       	cp	r17, r24
     eca:	c0 f3       	brcs	.-16     	; 0xebc <lcd_putchar+0x1e8>
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <lcd_putchar+0x200>
     ece:	4f 5f       	subi	r20, 0xFF	; 255
     ed0:	40 93 5a 03 	sts	0x035A, r20
     ed4:	10 92 5b 03 	sts	0x035B, r1
     ed8:	80 91 5b 03 	lds	r24, 0x035B
     edc:	60 91 5a 03 	lds	r22, 0x035A
     ee0:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN12OrangutanLCD6gotoXYEhh>
     ee4:	2d 2d       	mov	r18, r13
     ee6:	33 27       	eor	r19, r19
     ee8:	27 fd       	sbrc	r18, 7
     eea:	30 95       	com	r19
     eec:	c9 01       	movw	r24, r18
     eee:	cd b7       	in	r28, 0x3d	; 61
     ef0:	de b7       	in	r29, 0x3e	; 62
     ef2:	e8 e0       	ldi	r30, 0x08	; 8
     ef4:	0c 94 73 0d 	jmp	0x1ae6	; 0x1ae6 <__epilogue_restores__+0x14>

00000ef8 <_ZN12OrangutanLCD10initPrintfEv>:
     ef8:	80 91 58 03 	lds	r24, 0x0358
     efc:	90 91 59 03 	lds	r25, 0x0359
     f00:	00 97       	sbiw	r24, 0x00	; 0
     f02:	11 f0       	breq	.+4      	; 0xf08 <_ZN12OrangutanLCD10initPrintfEv+0x10>
     f04:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <free>
     f08:	20 91 00 01 	lds	r18, 0x0100
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	21 50       	subi	r18, 0x01	; 1
     f10:	30 40       	sbci	r19, 0x00	; 0
     f12:	80 91 01 01 	lds	r24, 0x0101
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	ac 01       	movw	r20, r24
     f1a:	24 9f       	mul	r18, r20
     f1c:	c0 01       	movw	r24, r0
     f1e:	25 9f       	mul	r18, r21
     f20:	90 0d       	add	r25, r0
     f22:	34 9f       	mul	r19, r20
     f24:	90 0d       	add	r25, r0
     f26:	11 24       	eor	r1, r1
     f28:	0e 94 a7 0d 	call	0x1b4e	; 0x1b4e <malloc>
     f2c:	90 93 59 03 	sts	0x0359, r25
     f30:	80 93 58 03 	sts	0x0358, r24
     f34:	00 97       	sbiw	r24, 0x00	; 0
     f36:	21 f1       	breq	.+72     	; 0xf80 <_ZN12OrangutanLCD10initPrintfEv+0x88>
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	b0 e2       	ldi	r27, 0x20	; 32
     f3c:	08 c0       	rjmp	.+16     	; 0xf4e <_ZN12OrangutanLCD10initPrintfEv+0x56>
     f3e:	e0 91 58 03 	lds	r30, 0x0358
     f42:	f0 91 59 03 	lds	r31, 0x0359
     f46:	e2 0f       	add	r30, r18
     f48:	f3 1f       	adc	r31, r19
     f4a:	b0 83       	st	Z, r27
     f4c:	af 5f       	subi	r26, 0xFF	; 255
     f4e:	2a 2f       	mov	r18, r26
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	80 91 00 01 	lds	r24, 0x0100
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	01 97       	sbiw	r24, 0x01	; 1
     f5a:	60 91 01 01 	lds	r22, 0x0101
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	86 9f       	mul	r24, r22
     f62:	a0 01       	movw	r20, r0
     f64:	87 9f       	mul	r24, r23
     f66:	50 0d       	add	r21, r0
     f68:	96 9f       	mul	r25, r22
     f6a:	50 0d       	add	r21, r0
     f6c:	11 24       	eor	r1, r1
     f6e:	24 17       	cp	r18, r20
     f70:	35 07       	cpc	r19, r21
     f72:	2c f3       	brlt	.-54     	; 0xf3e <_ZN12OrangutanLCD10initPrintfEv+0x46>
     f74:	8a e6       	ldi	r24, 0x6A	; 106
     f76:	96 e0       	ldi	r25, 0x06	; 6
     f78:	6f e0       	ldi	r22, 0x0F	; 15
     f7a:	75 e0       	ldi	r23, 0x05	; 5
     f7c:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <fdevopen>
     f80:	08 95       	ret

00000f82 <lcd_init_printf>:
     f82:	0e 94 7c 07 	call	0xef8	; 0xef8 <_ZN12OrangutanLCD10initPrintfEv>
     f86:	08 95       	ret

00000f88 <serial_get_received_bytes>:
     f88:	28 2f       	mov	r18, r24
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	f9 01       	movw	r30, r18
     f8e:	ee 0f       	add	r30, r30
     f90:	ff 1f       	adc	r31, r31
     f92:	43 e0       	ldi	r20, 0x03	; 3
     f94:	22 0f       	add	r18, r18
     f96:	33 1f       	adc	r19, r19
     f98:	4a 95       	dec	r20
     f9a:	e1 f7       	brne	.-8      	; 0xf94 <serial_get_received_bytes+0xc>
     f9c:	e2 0f       	add	r30, r18
     f9e:	f3 1f       	adc	r31, r19
     fa0:	ee 5f       	subi	r30, 0xFE	; 254
     fa2:	fe 4f       	sbci	r31, 0xFE	; 254
     fa4:	82 81       	ldd	r24, Z+2	; 0x02
     fa6:	08 95       	ret

00000fa8 <serial_send_buffer_empty>:
     fa8:	28 2f       	mov	r18, r24
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	f9 01       	movw	r30, r18
     fae:	ee 0f       	add	r30, r30
     fb0:	ff 1f       	adc	r31, r31
     fb2:	73 e0       	ldi	r23, 0x03	; 3
     fb4:	22 0f       	add	r18, r18
     fb6:	33 1f       	adc	r19, r19
     fb8:	7a 95       	dec	r23
     fba:	e1 f7       	brne	.-8      	; 0xfb4 <serial_send_buffer_empty+0xc>
     fbc:	e2 0f       	add	r30, r18
     fbe:	f3 1f       	adc	r31, r19
     fc0:	ee 5f       	subi	r30, 0xFE	; 254
     fc2:	fe 4f       	sbci	r31, 0xFE	; 254
     fc4:	41 81       	ldd	r20, Z+1	; 0x01
     fc6:	28 2f       	mov	r18, r24
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	f9 01       	movw	r30, r18
     fcc:	ee 0f       	add	r30, r30
     fce:	ff 1f       	adc	r31, r31
     fd0:	53 e0       	ldi	r21, 0x03	; 3
     fd2:	22 0f       	add	r18, r18
     fd4:	33 1f       	adc	r19, r19
     fd6:	5a 95       	dec	r21
     fd8:	e1 f7       	brne	.-8      	; 0xfd2 <serial_send_buffer_empty+0x2a>
     fda:	e2 0f       	add	r30, r18
     fdc:	f3 1f       	adc	r31, r19
     fde:	ee 5f       	subi	r30, 0xFE	; 254
     fe0:	fe 4f       	sbci	r31, 0xFE	; 254
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	93 81       	ldd	r25, Z+3	; 0x03
     fe6:	49 13       	cpse	r20, r25
     fe8:	80 e0       	ldi	r24, 0x00	; 0
     fea:	08 95       	ret

00000fec <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	f9 01       	movw	r30, r18
     ff2:	ee 0f       	add	r30, r30
     ff4:	ff 1f       	adc	r31, r31
     ff6:	b3 e0       	ldi	r27, 0x03	; 3
     ff8:	22 0f       	add	r18, r18
     ffa:	33 1f       	adc	r19, r19
     ffc:	ba 95       	dec	r27
     ffe:	e1 f7       	brne	.-8      	; 0xff8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xc>
    1000:	e2 0f       	add	r30, r18
    1002:	f3 1f       	adc	r31, r19
    1004:	ee 5f       	subi	r30, 0xFE	; 254
    1006:	fe 4f       	sbci	r31, 0xFE	; 254
    1008:	40 85       	ldd	r20, Z+8	; 0x08
    100a:	51 85       	ldd	r21, Z+9	; 0x09
    100c:	41 15       	cp	r20, r1
    100e:	51 05       	cpc	r21, r1
    1010:	09 f4       	brne	.+2      	; 0x1014 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x28>
    1012:	52 c0       	rjmp	.+164    	; 0x10b8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	f9 01       	movw	r30, r18
    101a:	ee 0f       	add	r30, r30
    101c:	ff 1f       	adc	r31, r31
    101e:	73 e0       	ldi	r23, 0x03	; 3
    1020:	22 0f       	add	r18, r18
    1022:	33 1f       	adc	r19, r19
    1024:	7a 95       	dec	r23
    1026:	e1 f7       	brne	.-8      	; 0x1020 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x34>
    1028:	e2 0f       	add	r30, r18
    102a:	f3 1f       	adc	r31, r19
    102c:	ee 5f       	subi	r30, 0xFE	; 254
    102e:	fe 4f       	sbci	r31, 0xFE	; 254
    1030:	72 81       	ldd	r23, Z+2	; 0x02
    1032:	28 2f       	mov	r18, r24
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	f9 01       	movw	r30, r18
    1038:	ee 0f       	add	r30, r30
    103a:	ff 1f       	adc	r31, r31
    103c:	b3 e0       	ldi	r27, 0x03	; 3
    103e:	22 0f       	add	r18, r18
    1040:	33 1f       	adc	r19, r19
    1042:	ba 95       	dec	r27
    1044:	e1 f7       	brne	.-8      	; 0x103e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    1046:	e2 0f       	add	r30, r18
    1048:	f3 1f       	adc	r31, r19
    104a:	ee 5f       	subi	r30, 0xFE	; 254
    104c:	fe 4f       	sbci	r31, 0xFE	; 254
    104e:	94 81       	ldd	r25, Z+4	; 0x04
    1050:	79 17       	cp	r23, r25
    1052:	90 f5       	brcc	.+100    	; 0x10b8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
    1054:	28 2f       	mov	r18, r24
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	f9 01       	movw	r30, r18
    105a:	ee 0f       	add	r30, r30
    105c:	ff 1f       	adc	r31, r31
    105e:	73 e0       	ldi	r23, 0x03	; 3
    1060:	22 0f       	add	r18, r18
    1062:	33 1f       	adc	r19, r19
    1064:	7a 95       	dec	r23
    1066:	e1 f7       	brne	.-8      	; 0x1060 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x74>
    1068:	e2 0f       	add	r30, r18
    106a:	f3 1f       	adc	r31, r19
    106c:	ee 5f       	subi	r30, 0xFE	; 254
    106e:	fe 4f       	sbci	r31, 0xFE	; 254
    1070:	92 81       	ldd	r25, Z+2	; 0x02
    1072:	49 0f       	add	r20, r25
    1074:	51 1d       	adc	r21, r1
    1076:	fa 01       	movw	r30, r20
    1078:	60 83       	st	Z, r22
    107a:	28 2f       	mov	r18, r24
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	f9 01       	movw	r30, r18
    1080:	ee 0f       	add	r30, r30
    1082:	ff 1f       	adc	r31, r31
    1084:	53 e0       	ldi	r21, 0x03	; 3
    1086:	22 0f       	add	r18, r18
    1088:	33 1f       	adc	r19, r19
    108a:	5a 95       	dec	r21
    108c:	e1 f7       	brne	.-8      	; 0x1086 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x9a>
    108e:	e2 0f       	add	r30, r18
    1090:	f3 1f       	adc	r31, r19
    1092:	ee 5f       	subi	r30, 0xFE	; 254
    1094:	fe 4f       	sbci	r31, 0xFE	; 254
    1096:	92 81       	ldd	r25, Z+2	; 0x02
    1098:	9f 5f       	subi	r25, 0xFF	; 255
    109a:	28 2f       	mov	r18, r24
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	f9 01       	movw	r30, r18
    10a0:	ee 0f       	add	r30, r30
    10a2:	ff 1f       	adc	r31, r31
    10a4:	b3 e0       	ldi	r27, 0x03	; 3
    10a6:	22 0f       	add	r18, r18
    10a8:	33 1f       	adc	r19, r19
    10aa:	ba 95       	dec	r27
    10ac:	e1 f7       	brne	.-8      	; 0x10a6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xba>
    10ae:	e2 0f       	add	r30, r18
    10b0:	f3 1f       	adc	r31, r19
    10b2:	ee 5f       	subi	r30, 0xFE	; 254
    10b4:	fe 4f       	sbci	r31, 0xFE	; 254
    10b6:	92 83       	std	Z+2, r25	; 0x02
    10b8:	28 2f       	mov	r18, r24
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	f9 01       	movw	r30, r18
    10be:	ee 0f       	add	r30, r30
    10c0:	ff 1f       	adc	r31, r31
    10c2:	73 e0       	ldi	r23, 0x03	; 3
    10c4:	22 0f       	add	r18, r18
    10c6:	33 1f       	adc	r19, r19
    10c8:	7a 95       	dec	r23
    10ca:	e1 f7       	brne	.-8      	; 0x10c4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xd8>
    10cc:	e2 0f       	add	r30, r18
    10ce:	f3 1f       	adc	r31, r19
    10d0:	ee 5f       	subi	r30, 0xFE	; 254
    10d2:	fe 4f       	sbci	r31, 0xFE	; 254
    10d4:	42 81       	ldd	r20, Z+2	; 0x02
    10d6:	28 2f       	mov	r18, r24
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	f9 01       	movw	r30, r18
    10dc:	ee 0f       	add	r30, r30
    10de:	ff 1f       	adc	r31, r31
    10e0:	53 e0       	ldi	r21, 0x03	; 3
    10e2:	22 0f       	add	r18, r18
    10e4:	33 1f       	adc	r19, r19
    10e6:	5a 95       	dec	r21
    10e8:	e1 f7       	brne	.-8      	; 0x10e2 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xf6>
    10ea:	e2 0f       	add	r30, r18
    10ec:	f3 1f       	adc	r31, r19
    10ee:	ee 5f       	subi	r30, 0xFE	; 254
    10f0:	fe 4f       	sbci	r31, 0xFE	; 254
    10f2:	94 81       	ldd	r25, Z+4	; 0x04
    10f4:	49 17       	cp	r20, r25
    10f6:	01 f5       	brne	.+64     	; 0x1138 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
    10f8:	28 2f       	mov	r18, r24
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	f9 01       	movw	r30, r18
    10fe:	ee 0f       	add	r30, r30
    1100:	ff 1f       	adc	r31, r31
    1102:	93 e0       	ldi	r25, 0x03	; 3
    1104:	22 0f       	add	r18, r18
    1106:	33 1f       	adc	r19, r19
    1108:	9a 95       	dec	r25
    110a:	e1 f7       	brne	.-8      	; 0x1104 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x118>
    110c:	e2 0f       	add	r30, r18
    110e:	f3 1f       	adc	r31, r19
    1110:	ee 5f       	subi	r30, 0xFE	; 254
    1112:	fe 4f       	sbci	r31, 0xFE	; 254
    1114:	95 81       	ldd	r25, Z+5	; 0x05
    1116:	99 23       	and	r25, r25
    1118:	79 f0       	breq	.+30     	; 0x1138 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
    111a:	28 2f       	mov	r18, r24
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	f9 01       	movw	r30, r18
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	b3 e0       	ldi	r27, 0x03	; 3
    1126:	22 0f       	add	r18, r18
    1128:	33 1f       	adc	r19, r19
    112a:	ba 95       	dec	r27
    112c:	e1 f7       	brne	.-8      	; 0x1126 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x13a>
    112e:	e2 0f       	add	r30, r18
    1130:	f3 1f       	adc	r31, r19
    1132:	ee 5f       	subi	r30, 0xFE	; 254
    1134:	fe 4f       	sbci	r31, 0xFE	; 254
    1136:	12 82       	std	Z+2, r1	; 0x02
    1138:	08 95       	ret

0000113a <_ZN15OrangutanSerial15serial_rx_checkEh>:
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	18 2f       	mov	r17, r24
    1140:	82 30       	cpi	r24, 0x02	; 2
    1142:	09 f4       	brne	.+2      	; 0x1146 <_ZN15OrangutanSerial15serial_rx_checkEh+0xc>
    1144:	75 c0       	rjmp	.+234    	; 0x1230 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    1146:	88 23       	and	r24, r24
    1148:	19 f4       	brne	.+6      	; 0x1150 <_ZN15OrangutanSerial15serial_rx_checkEh+0x16>
    114a:	e1 ec       	ldi	r30, 0xC1	; 193
    114c:	f0 e0       	ldi	r31, 0x00	; 0
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <_ZN15OrangutanSerial15serial_rx_checkEh+0x1a>
    1150:	e9 ec       	ldi	r30, 0xC9	; 201
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	80 81       	ld	r24, Z
    1156:	8f 77       	andi	r24, 0x7F	; 127
    1158:	80 83       	st	Z, r24
    115a:	81 2f       	mov	r24, r17
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	fc 01       	movw	r30, r24
    1160:	ee 0f       	add	r30, r30
    1162:	ff 1f       	adc	r31, r31
    1164:	03 e0       	ldi	r16, 0x03	; 3
    1166:	88 0f       	add	r24, r24
    1168:	99 1f       	adc	r25, r25
    116a:	0a 95       	dec	r16
    116c:	e1 f7       	brne	.-8      	; 0x1166 <_ZN15OrangutanSerial15serial_rx_checkEh+0x2c>
    116e:	e8 0f       	add	r30, r24
    1170:	f9 1f       	adc	r31, r25
    1172:	ee 5f       	subi	r30, 0xFE	; 254
    1174:	fe 4f       	sbci	r31, 0xFE	; 254
    1176:	80 85       	ldd	r24, Z+8	; 0x08
    1178:	91 85       	ldd	r25, Z+9	; 0x09
    117a:	00 97       	sbiw	r24, 0x00	; 0
    117c:	a9 f1       	breq	.+106    	; 0x11e8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    117e:	21 2f       	mov	r18, r17
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	f9 01       	movw	r30, r18
    1184:	ee 0f       	add	r30, r30
    1186:	ff 1f       	adc	r31, r31
    1188:	a3 e0       	ldi	r26, 0x03	; 3
    118a:	22 0f       	add	r18, r18
    118c:	33 1f       	adc	r19, r19
    118e:	aa 95       	dec	r26
    1190:	e1 f7       	brne	.-8      	; 0x118a <_ZN15OrangutanSerial15serial_rx_checkEh+0x50>
    1192:	e2 0f       	add	r30, r18
    1194:	f3 1f       	adc	r31, r19
    1196:	ee 5f       	subi	r30, 0xFE	; 254
    1198:	fe 4f       	sbci	r31, 0xFE	; 254
    119a:	92 81       	ldd	r25, Z+2	; 0x02
    119c:	21 2f       	mov	r18, r17
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	f9 01       	movw	r30, r18
    11a2:	ee 0f       	add	r30, r30
    11a4:	ff 1f       	adc	r31, r31
    11a6:	63 e0       	ldi	r22, 0x03	; 3
    11a8:	22 0f       	add	r18, r18
    11aa:	33 1f       	adc	r19, r19
    11ac:	6a 95       	dec	r22
    11ae:	e1 f7       	brne	.-8      	; 0x11a8 <_ZN15OrangutanSerial15serial_rx_checkEh+0x6e>
    11b0:	e2 0f       	add	r30, r18
    11b2:	f3 1f       	adc	r31, r19
    11b4:	ee 5f       	subi	r30, 0xFE	; 254
    11b6:	fe 4f       	sbci	r31, 0xFE	; 254
    11b8:	84 81       	ldd	r24, Z+4	; 0x04
    11ba:	98 17       	cp	r25, r24
    11bc:	a8 f4       	brcc	.+42     	; 0x11e8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    11be:	11 23       	and	r17, r17
    11c0:	19 f4       	brne	.+6      	; 0x11c8 <_ZN15OrangutanSerial15serial_rx_checkEh+0x8e>
    11c2:	e0 ec       	ldi	r30, 0xC0	; 192
    11c4:	f0 e0       	ldi	r31, 0x00	; 0
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <_ZN15OrangutanSerial15serial_rx_checkEh+0x92>
    11c8:	e8 ec       	ldi	r30, 0xC8	; 200
    11ca:	f0 e0       	ldi	r31, 0x00	; 0
    11cc:	80 81       	ld	r24, Z
    11ce:	87 ff       	sbrs	r24, 7
    11d0:	0b c0       	rjmp	.+22     	; 0x11e8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    11d2:	11 23       	and	r17, r17
    11d4:	19 f4       	brne	.+6      	; 0x11dc <_ZN15OrangutanSerial15serial_rx_checkEh+0xa2>
    11d6:	e6 ec       	ldi	r30, 0xC6	; 198
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <_ZN15OrangutanSerial15serial_rx_checkEh+0xa6>
    11dc:	ee ec       	ldi	r30, 0xCE	; 206
    11de:	f0 e0       	ldi	r31, 0x00	; 0
    11e0:	60 81       	ld	r22, Z
    11e2:	81 2f       	mov	r24, r17
    11e4:	0e 94 f6 07 	call	0xfec	; 0xfec <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    11e8:	21 2f       	mov	r18, r17
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	f9 01       	movw	r30, r18
    11ee:	ee 0f       	add	r30, r30
    11f0:	ff 1f       	adc	r31, r31
    11f2:	43 e0       	ldi	r20, 0x03	; 3
    11f4:	22 0f       	add	r18, r18
    11f6:	33 1f       	adc	r19, r19
    11f8:	4a 95       	dec	r20
    11fa:	e1 f7       	brne	.-8      	; 0x11f4 <_ZN15OrangutanSerial15serial_rx_checkEh+0xba>
    11fc:	e2 0f       	add	r30, r18
    11fe:	f3 1f       	adc	r31, r19
    1200:	ee 5f       	subi	r30, 0xFE	; 254
    1202:	fe 4f       	sbci	r31, 0xFE	; 254
    1204:	80 81       	ld	r24, Z
    1206:	88 23       	and	r24, r24
    1208:	09 f0       	breq	.+2      	; 0x120c <_ZN15OrangutanSerial15serial_rx_checkEh+0xd2>
    120a:	59 c0       	rjmp	.+178    	; 0x12be <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    120c:	11 23       	and	r17, r17
    120e:	19 f4       	brne	.+6      	; 0x1216 <_ZN15OrangutanSerial15serial_rx_checkEh+0xdc>
    1210:	e1 ec       	ldi	r30, 0xC1	; 193
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	02 c0       	rjmp	.+4      	; 0x121a <_ZN15OrangutanSerial15serial_rx_checkEh+0xe0>
    1216:	e9 ec       	ldi	r30, 0xC9	; 201
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	80 81       	ld	r24, Z
    121c:	80 68       	ori	r24, 0x80	; 128
    121e:	80 83       	st	Z, r24
    1220:	4e c0       	rjmp	.+156    	; 0x12be <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1222:	80 91 1b 01 	lds	r24, 0x011B
    1226:	88 23       	and	r24, r24
    1228:	19 f0       	breq	.+6      	; 0x1230 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    122a:	10 92 18 01 	sts	0x0118, r1
    122e:	47 c0       	rjmp	.+142    	; 0x12be <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1230:	80 91 1e 01 	lds	r24, 0x011E
    1234:	90 91 1f 01 	lds	r25, 0x011F
    1238:	00 97       	sbiw	r24, 0x00	; 0
    123a:	09 f4       	brne	.+2      	; 0x123e <_ZN15OrangutanSerial15serial_rx_checkEh+0x104>
    123c:	40 c0       	rjmp	.+128    	; 0x12be <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    123e:	90 91 18 01 	lds	r25, 0x0118
    1242:	80 91 1a 01 	lds	r24, 0x011A
    1246:	98 17       	cp	r25, r24
    1248:	d0 f5       	brcc	.+116    	; 0x12be <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    124a:	80 91 61 03 	lds	r24, 0x0361
    124e:	88 23       	and	r24, r24
    1250:	a9 f4       	brne	.+42     	; 0x127c <_ZN15OrangutanSerial15serial_rx_checkEh+0x142>
    1252:	0e 94 8d 0c 	call	0x191a	; 0x191a <_ZN12OrangutanSVP15serialReadStartEv>
    1256:	80 93 61 03 	sts	0x0361, r24
    125a:	10 e0       	ldi	r17, 0x00	; 0
    125c:	0b c0       	rjmp	.+22     	; 0x1274 <_ZN15OrangutanSerial15serial_rx_checkEh+0x13a>
    125e:	0e 94 88 0c 	call	0x1910	; 0x1910 <_ZN12OrangutanSVP11getNextByteEv>
    1262:	e0 2f       	mov	r30, r16
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	31 97       	sbiw	r30, 0x01	; 1
    1268:	e1 1b       	sub	r30, r17
    126a:	f1 09       	sbc	r31, r1
    126c:	ee 59       	subi	r30, 0x9E	; 158
    126e:	fc 4f       	sbci	r31, 0xFC	; 252
    1270:	80 83       	st	Z, r24
    1272:	1f 5f       	subi	r17, 0xFF	; 255
    1274:	00 91 61 03 	lds	r16, 0x0361
    1278:	10 17       	cp	r17, r16
    127a:	88 f3       	brcs	.-30     	; 0x125e <_ZN15OrangutanSerial15serial_rx_checkEh+0x124>
    127c:	a0 91 61 03 	lds	r26, 0x0361
    1280:	aa 23       	and	r26, r26
    1282:	e9 f0       	breq	.+58     	; 0x12be <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1284:	80 91 18 01 	lds	r24, 0x0118
    1288:	e0 91 1e 01 	lds	r30, 0x011E
    128c:	f0 91 1f 01 	lds	r31, 0x011F
    1290:	e8 0f       	add	r30, r24
    1292:	f1 1d       	adc	r31, r1
    1294:	a1 50       	subi	r26, 0x01	; 1
    1296:	a0 93 61 03 	sts	0x0361, r26
    129a:	b0 e0       	ldi	r27, 0x00	; 0
    129c:	ae 59       	subi	r26, 0x9E	; 158
    129e:	bc 4f       	sbci	r27, 0xFC	; 252
    12a0:	8c 91       	ld	r24, X
    12a2:	80 83       	st	Z, r24
    12a4:	80 91 18 01 	lds	r24, 0x0118
    12a8:	8f 5f       	subi	r24, 0xFF	; 255
    12aa:	80 93 18 01 	sts	0x0118, r24
    12ae:	90 91 18 01 	lds	r25, 0x0118
    12b2:	80 91 1a 01 	lds	r24, 0x011A
    12b6:	98 17       	cp	r25, r24
    12b8:	09 f0       	breq	.+2      	; 0x12bc <_ZN15OrangutanSerial15serial_rx_checkEh+0x182>
    12ba:	ba cf       	rjmp	.-140    	; 0x1230 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    12bc:	b2 cf       	rjmp	.-156    	; 0x1222 <_ZN15OrangutanSerial15serial_rx_checkEh+0xe8>
    12be:	1f 91       	pop	r17
    12c0:	0f 91       	pop	r16
    12c2:	08 95       	ret

000012c4 <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    12c4:	82 30       	cpi	r24, 0x02	; 2
    12c6:	51 f0       	breq	.+20     	; 0x12dc <_ZN15OrangutanSerial14receive_inlineEhPchh+0x18>
    12c8:	88 23       	and	r24, r24
    12ca:	19 f4       	brne	.+6      	; 0x12d2 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xe>
    12cc:	e1 ec       	ldi	r30, 0xC1	; 193
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x12>
    12d2:	e9 ec       	ldi	r30, 0xC9	; 201
    12d4:	f0 e0       	ldi	r31, 0x00	; 0
    12d6:	90 81       	ld	r25, Z
    12d8:	9f 77       	andi	r25, 0x7F	; 127
    12da:	90 83       	st	Z, r25
    12dc:	a8 2f       	mov	r26, r24
    12de:	b0 e0       	ldi	r27, 0x00	; 0
    12e0:	fd 01       	movw	r30, r26
    12e2:	ee 0f       	add	r30, r30
    12e4:	ff 1f       	adc	r31, r31
    12e6:	53 e0       	ldi	r21, 0x03	; 3
    12e8:	aa 0f       	add	r26, r26
    12ea:	bb 1f       	adc	r27, r27
    12ec:	5a 95       	dec	r21
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x24>
    12f0:	ea 0f       	add	r30, r26
    12f2:	fb 1f       	adc	r31, r27
    12f4:	ee 5f       	subi	r30, 0xFE	; 254
    12f6:	fe 4f       	sbci	r31, 0xFE	; 254
    12f8:	71 87       	std	Z+9, r23	; 0x09
    12fa:	60 87       	std	Z+8, r22	; 0x08
    12fc:	68 2f       	mov	r22, r24
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	fb 01       	movw	r30, r22
    1302:	ee 0f       	add	r30, r30
    1304:	ff 1f       	adc	r31, r31
    1306:	93 e0       	ldi	r25, 0x03	; 3
    1308:	66 0f       	add	r22, r22
    130a:	77 1f       	adc	r23, r23
    130c:	9a 95       	dec	r25
    130e:	e1 f7       	brne	.-8      	; 0x1308 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x44>
    1310:	e6 0f       	add	r30, r22
    1312:	f7 1f       	adc	r31, r23
    1314:	ee 5f       	subi	r30, 0xFE	; 254
    1316:	fe 4f       	sbci	r31, 0xFE	; 254
    1318:	12 82       	std	Z+2, r1	; 0x02
    131a:	68 2f       	mov	r22, r24
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	fb 01       	movw	r30, r22
    1320:	ee 0f       	add	r30, r30
    1322:	ff 1f       	adc	r31, r31
    1324:	a3 e0       	ldi	r26, 0x03	; 3
    1326:	66 0f       	add	r22, r22
    1328:	77 1f       	adc	r23, r23
    132a:	aa 95       	dec	r26
    132c:	e1 f7       	brne	.-8      	; 0x1326 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x62>
    132e:	e6 0f       	add	r30, r22
    1330:	f7 1f       	adc	r31, r23
    1332:	ee 5f       	subi	r30, 0xFE	; 254
    1334:	fe 4f       	sbci	r31, 0xFE	; 254
    1336:	44 83       	std	Z+4, r20	; 0x04
    1338:	48 2f       	mov	r20, r24
    133a:	50 e0       	ldi	r21, 0x00	; 0
    133c:	fa 01       	movw	r30, r20
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	63 e0       	ldi	r22, 0x03	; 3
    1344:	44 0f       	add	r20, r20
    1346:	55 1f       	adc	r21, r21
    1348:	6a 95       	dec	r22
    134a:	e1 f7       	brne	.-8      	; 0x1344 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x80>
    134c:	e4 0f       	add	r30, r20
    134e:	f5 1f       	adc	r31, r21
    1350:	ee 5f       	subi	r30, 0xFE	; 254
    1352:	fe 4f       	sbci	r31, 0xFE	; 254
    1354:	25 83       	std	Z+5, r18	; 0x05
    1356:	82 30       	cpi	r24, 0x02	; 2
    1358:	d9 f0       	breq	.+54     	; 0x1390 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    135a:	28 2f       	mov	r18, r24
    135c:	30 e0       	ldi	r19, 0x00	; 0
    135e:	f9 01       	movw	r30, r18
    1360:	ee 0f       	add	r30, r30
    1362:	ff 1f       	adc	r31, r31
    1364:	43 e0       	ldi	r20, 0x03	; 3
    1366:	22 0f       	add	r18, r18
    1368:	33 1f       	adc	r19, r19
    136a:	4a 95       	dec	r20
    136c:	e1 f7       	brne	.-8      	; 0x1366 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xa2>
    136e:	e2 0f       	add	r30, r18
    1370:	f3 1f       	adc	r31, r19
    1372:	ee 5f       	subi	r30, 0xFE	; 254
    1374:	fe 4f       	sbci	r31, 0xFE	; 254
    1376:	90 81       	ld	r25, Z
    1378:	99 23       	and	r25, r25
    137a:	51 f4       	brne	.+20     	; 0x1390 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    137c:	88 23       	and	r24, r24
    137e:	19 f4       	brne	.+6      	; 0x1386 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc2>
    1380:	e1 ec       	ldi	r30, 0xC1	; 193
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	02 c0       	rjmp	.+4      	; 0x138a <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc6>
    1386:	e9 ec       	ldi	r30, 0xC9	; 201
    1388:	f0 e0       	ldi	r31, 0x00	; 0
    138a:	80 81       	ld	r24, Z
    138c:	80 68       	ori	r24, 0x80	; 128
    138e:	80 83       	st	Z, r24
    1390:	08 95       	ret

00001392 <_ZN15OrangutanSerial11receiveRingEhPch>:
    1392:	21 e0       	ldi	r18, 0x01	; 1
    1394:	0e 94 62 09 	call	0x12c4	; 0x12c4 <_ZN15OrangutanSerial14receive_inlineEhPchh>
    1398:	08 95       	ret

0000139a <serial_receive_ring>:
    139a:	0e 94 c9 09 	call	0x1392	; 0x1392 <_ZN15OrangutanSerial11receiveRingEhPch>
    139e:	08 95       	ret

000013a0 <__vector_20>:
    13a0:	1f 92       	push	r1
    13a2:	0f 92       	push	r0
    13a4:	0f b6       	in	r0, 0x3f	; 63
    13a6:	0f 92       	push	r0
    13a8:	0b b6       	in	r0, 0x3b	; 59
    13aa:	0f 92       	push	r0
    13ac:	11 24       	eor	r1, r1
    13ae:	2f 93       	push	r18
    13b0:	3f 93       	push	r19
    13b2:	4f 93       	push	r20
    13b4:	5f 93       	push	r21
    13b6:	6f 93       	push	r22
    13b8:	7f 93       	push	r23
    13ba:	8f 93       	push	r24
    13bc:	9f 93       	push	r25
    13be:	af 93       	push	r26
    13c0:	bf 93       	push	r27
    13c2:	ef 93       	push	r30
    13c4:	ff 93       	push	r31
    13c6:	60 91 c6 00 	lds	r22, 0x00C6
    13ca:	80 e0       	ldi	r24, 0x00	; 0
    13cc:	0e 94 f6 07 	call	0xfec	; 0xfec <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    13d0:	ff 91       	pop	r31
    13d2:	ef 91       	pop	r30
    13d4:	bf 91       	pop	r27
    13d6:	af 91       	pop	r26
    13d8:	9f 91       	pop	r25
    13da:	8f 91       	pop	r24
    13dc:	7f 91       	pop	r23
    13de:	6f 91       	pop	r22
    13e0:	5f 91       	pop	r21
    13e2:	4f 91       	pop	r20
    13e4:	3f 91       	pop	r19
    13e6:	2f 91       	pop	r18
    13e8:	0f 90       	pop	r0
    13ea:	0b be       	out	0x3b, r0	; 59
    13ec:	0f 90       	pop	r0
    13ee:	0f be       	out	0x3f, r0	; 63
    13f0:	0f 90       	pop	r0
    13f2:	1f 90       	pop	r1
    13f4:	18 95       	reti

000013f6 <__vector_28>:
    13f6:	1f 92       	push	r1
    13f8:	0f 92       	push	r0
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	0f 92       	push	r0
    13fe:	0b b6       	in	r0, 0x3b	; 59
    1400:	0f 92       	push	r0
    1402:	11 24       	eor	r1, r1
    1404:	2f 93       	push	r18
    1406:	3f 93       	push	r19
    1408:	4f 93       	push	r20
    140a:	5f 93       	push	r21
    140c:	6f 93       	push	r22
    140e:	7f 93       	push	r23
    1410:	8f 93       	push	r24
    1412:	9f 93       	push	r25
    1414:	af 93       	push	r26
    1416:	bf 93       	push	r27
    1418:	ef 93       	push	r30
    141a:	ff 93       	push	r31
    141c:	60 91 ce 00 	lds	r22, 0x00CE
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	0e 94 f6 07 	call	0xfec	; 0xfec <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1426:	ff 91       	pop	r31
    1428:	ef 91       	pop	r30
    142a:	bf 91       	pop	r27
    142c:	af 91       	pop	r26
    142e:	9f 91       	pop	r25
    1430:	8f 91       	pop	r24
    1432:	7f 91       	pop	r23
    1434:	6f 91       	pop	r22
    1436:	5f 91       	pop	r21
    1438:	4f 91       	pop	r20
    143a:	3f 91       	pop	r19
    143c:	2f 91       	pop	r18
    143e:	0f 90       	pop	r0
    1440:	0b be       	out	0x3b, r0	; 59
    1442:	0f 90       	pop	r0
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	0f 90       	pop	r0
    1448:	1f 90       	pop	r1
    144a:	18 95       	reti

0000144c <_Z24uart_enable_tx_interrupth>:
    144c:	88 23       	and	r24, r24
    144e:	19 f4       	brne	.+6      	; 0x1456 <_Z24uart_enable_tx_interrupth+0xa>
    1450:	e1 ec       	ldi	r30, 0xC1	; 193
    1452:	f0 e0       	ldi	r31, 0x00	; 0
    1454:	02 c0       	rjmp	.+4      	; 0x145a <_Z24uart_enable_tx_interrupth+0xe>
    1456:	e9 ec       	ldi	r30, 0xC9	; 201
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	80 81       	ld	r24, Z
    145c:	80 62       	ori	r24, 0x20	; 32
    145e:	80 83       	st	Z, r24
    1460:	08 95       	ret

00001462 <_Z25uart_disable_tx_interrupth>:
    1462:	88 23       	and	r24, r24
    1464:	19 f4       	brne	.+6      	; 0x146c <_Z25uart_disable_tx_interrupth+0xa>
    1466:	e1 ec       	ldi	r30, 0xC1	; 193
    1468:	f0 e0       	ldi	r31, 0x00	; 0
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <_Z25uart_disable_tx_interrupth+0xe>
    146c:	e9 ec       	ldi	r30, 0xC9	; 201
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	80 81       	ld	r24, Z
    1472:	8f 7d       	andi	r24, 0xDF	; 223
    1474:	80 83       	st	Z, r24
    1476:	08 95       	ret

00001478 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    1478:	28 2f       	mov	r18, r24
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	f9 01       	movw	r30, r18
    147e:	ee 0f       	add	r30, r30
    1480:	ff 1f       	adc	r31, r31
    1482:	93 e0       	ldi	r25, 0x03	; 3
    1484:	22 0f       	add	r18, r18
    1486:	33 1f       	adc	r19, r19
    1488:	9a 95       	dec	r25
    148a:	e1 f7       	brne	.-8      	; 0x1484 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0xc>
    148c:	e2 0f       	add	r30, r18
    148e:	f3 1f       	adc	r31, r19
    1490:	ee 5f       	subi	r30, 0xFE	; 254
    1492:	fe 4f       	sbci	r31, 0xFE	; 254
    1494:	26 81       	ldd	r18, Z+6	; 0x06
    1496:	37 81       	ldd	r19, Z+7	; 0x07
    1498:	21 15       	cp	r18, r1
    149a:	31 05       	cpc	r19, r1
    149c:	a1 f1       	breq	.+104    	; 0x1506 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    149e:	28 2f       	mov	r18, r24
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	f9 01       	movw	r30, r18
    14a4:	ee 0f       	add	r30, r30
    14a6:	ff 1f       	adc	r31, r31
    14a8:	a3 e0       	ldi	r26, 0x03	; 3
    14aa:	22 0f       	add	r18, r18
    14ac:	33 1f       	adc	r19, r19
    14ae:	aa 95       	dec	r26
    14b0:	e1 f7       	brne	.-8      	; 0x14aa <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x32>
    14b2:	e2 0f       	add	r30, r18
    14b4:	f3 1f       	adc	r31, r19
    14b6:	ee 5f       	subi	r30, 0xFE	; 254
    14b8:	fe 4f       	sbci	r31, 0xFE	; 254
    14ba:	41 81       	ldd	r20, Z+1	; 0x01
    14bc:	28 2f       	mov	r18, r24
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	f9 01       	movw	r30, r18
    14c2:	ee 0f       	add	r30, r30
    14c4:	ff 1f       	adc	r31, r31
    14c6:	63 e0       	ldi	r22, 0x03	; 3
    14c8:	22 0f       	add	r18, r18
    14ca:	33 1f       	adc	r19, r19
    14cc:	6a 95       	dec	r22
    14ce:	e1 f7       	brne	.-8      	; 0x14c8 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x50>
    14d0:	e2 0f       	add	r30, r18
    14d2:	f3 1f       	adc	r31, r19
    14d4:	ee 5f       	subi	r30, 0xFE	; 254
    14d6:	fe 4f       	sbci	r31, 0xFE	; 254
    14d8:	93 81       	ldd	r25, Z+3	; 0x03
    14da:	49 17       	cp	r20, r25
    14dc:	a0 f4       	brcc	.+40     	; 0x1506 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    14de:	28 2f       	mov	r18, r24
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	f9 01       	movw	r30, r18
    14e4:	ee 0f       	add	r30, r30
    14e6:	ff 1f       	adc	r31, r31
    14e8:	43 e0       	ldi	r20, 0x03	; 3
    14ea:	22 0f       	add	r18, r18
    14ec:	33 1f       	adc	r19, r19
    14ee:	4a 95       	dec	r20
    14f0:	e1 f7       	brne	.-8      	; 0x14ea <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x72>
    14f2:	e2 0f       	add	r30, r18
    14f4:	f3 1f       	adc	r31, r19
    14f6:	ee 5f       	subi	r30, 0xFE	; 254
    14f8:	fe 4f       	sbci	r31, 0xFE	; 254
    14fa:	90 81       	ld	r25, Z
    14fc:	99 23       	and	r25, r25
    14fe:	19 f4       	brne	.+6      	; 0x1506 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    1500:	0e 94 26 0a 	call	0x144c	; 0x144c <_Z24uart_enable_tx_interrupth>
    1504:	08 95       	ret
    1506:	0e 94 31 0a 	call	0x1462	; 0x1462 <_Z25uart_disable_tx_interrupth>
    150a:	08 95       	ret

0000150c <_ZN15OrangutanSerial15initUART_inlineEh>:
    150c:	82 30       	cpi	r24, 0x02	; 2
    150e:	31 f1       	breq	.+76     	; 0x155c <_ZN15OrangutanSerial15initUART_inlineEh+0x50>
    1510:	28 2f       	mov	r18, r24
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	f9 01       	movw	r30, r18
    1516:	ee 0f       	add	r30, r30
    1518:	ff 1f       	adc	r31, r31
    151a:	53 e0       	ldi	r21, 0x03	; 3
    151c:	22 0f       	add	r18, r18
    151e:	33 1f       	adc	r19, r19
    1520:	5a 95       	dec	r21
    1522:	e1 f7       	brne	.-8      	; 0x151c <_ZN15OrangutanSerial15initUART_inlineEh+0x10>
    1524:	e2 0f       	add	r30, r18
    1526:	f3 1f       	adc	r31, r19
    1528:	ee 5f       	subi	r30, 0xFE	; 254
    152a:	fe 4f       	sbci	r31, 0xFE	; 254
    152c:	90 81       	ld	r25, Z
    152e:	99 23       	and	r25, r25
    1530:	49 f4       	brne	.+18     	; 0x1544 <_ZN15OrangutanSerial15initUART_inlineEh+0x38>
    1532:	88 23       	and	r24, r24
    1534:	19 f4       	brne	.+6      	; 0x153c <_ZN15OrangutanSerial15initUART_inlineEh+0x30>
    1536:	e1 ec       	ldi	r30, 0xC1	; 193
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	02 c0       	rjmp	.+4      	; 0x1540 <_ZN15OrangutanSerial15initUART_inlineEh+0x34>
    153c:	e9 ec       	ldi	r30, 0xC9	; 201
    153e:	f0 e0       	ldi	r31, 0x00	; 0
    1540:	98 e9       	ldi	r25, 0x98	; 152
    1542:	08 c0       	rjmp	.+16     	; 0x1554 <_ZN15OrangutanSerial15initUART_inlineEh+0x48>
    1544:	88 23       	and	r24, r24
    1546:	19 f4       	brne	.+6      	; 0x154e <_ZN15OrangutanSerial15initUART_inlineEh+0x42>
    1548:	e1 ec       	ldi	r30, 0xC1	; 193
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	02 c0       	rjmp	.+4      	; 0x1552 <_ZN15OrangutanSerial15initUART_inlineEh+0x46>
    154e:	e9 ec       	ldi	r30, 0xC9	; 201
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	98 e1       	ldi	r25, 0x18	; 24
    1554:	90 83       	st	Z, r25
    1556:	0e 94 3c 0a 	call	0x1478	; 0x1478 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    155a:	78 94       	sei
    155c:	08 95       	ret

0000155e <_ZN15OrangutanSerial8initPortEh>:
    155e:	88 23       	and	r24, r24
    1560:	19 f0       	breq	.+6      	; 0x1568 <_ZN15OrangutanSerial8initPortEh+0xa>
    1562:	81 30       	cpi	r24, 0x01	; 1
    1564:	41 f4       	brne	.+16     	; 0x1576 <_ZN15OrangutanSerial8initPortEh+0x18>
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <_ZN15OrangutanSerial8initPortEh+0x12>
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	0e 94 86 0a 	call	0x150c	; 0x150c <_ZN15OrangutanSerial15initUART_inlineEh>
    156e:	08 95       	ret
    1570:	81 e0       	ldi	r24, 0x01	; 1
    1572:	0e 94 86 0a 	call	0x150c	; 0x150c <_ZN15OrangutanSerial15initUART_inlineEh>
    1576:	08 95       	ret

00001578 <_ZN15OrangutanSerial11setBaudRateEhm>:
    1578:	a0 e0       	ldi	r26, 0x00	; 0
    157a:	b0 e0       	ldi	r27, 0x00	; 0
    157c:	e2 ec       	ldi	r30, 0xC2	; 194
    157e:	fa e0       	ldi	r31, 0x0A	; 10
    1580:	0c 94 58 0d 	jmp	0x1ab0	; 0x1ab0 <__prologue_saves__+0x16>
    1584:	d8 2e       	mov	r13, r24
    1586:	7a 01       	movw	r14, r20
    1588:	8b 01       	movw	r16, r22
    158a:	0e 94 af 0a 	call	0x155e	; 0x155e <_ZN15OrangutanSerial8initPortEh>
    158e:	8d 2d       	mov	r24, r13
    1590:	82 30       	cpi	r24, 0x02	; 2
    1592:	01 f1       	breq	.+64     	; 0x15d4 <_ZN15OrangutanSerial11setBaudRateEhm+0x5c>
    1594:	dd 20       	and	r13, r13
    1596:	19 f4       	brne	.+6      	; 0x159e <_ZN15OrangutanSerial11setBaudRateEhm+0x26>
    1598:	c4 ec       	ldi	r28, 0xC4	; 196
    159a:	d0 e0       	ldi	r29, 0x00	; 0
    159c:	02 c0       	rjmp	.+4      	; 0x15a2 <_ZN15OrangutanSerial11setBaudRateEhm+0x2a>
    159e:	cc ec       	ldi	r28, 0xCC	; 204
    15a0:	d0 e0       	ldi	r29, 0x00	; 0
    15a2:	c8 01       	movw	r24, r16
    15a4:	b7 01       	movw	r22, r14
    15a6:	28 ef       	ldi	r18, 0xF8	; 248
    15a8:	3f ef       	ldi	r19, 0xFF	; 255
    15aa:	4f ef       	ldi	r20, 0xFF	; 255
    15ac:	5f ef       	ldi	r21, 0xFF	; 255
    15ae:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <__mulsi3>
    15b2:	60 50       	subi	r22, 0x00	; 0
    15b4:	73 4d       	sbci	r23, 0xD3	; 211
    15b6:	8e 4c       	sbci	r24, 0xCE	; 206
    15b8:	9e 4f       	sbci	r25, 0xFE	; 254
    15ba:	a8 01       	movw	r20, r16
    15bc:	97 01       	movw	r18, r14
    15be:	e4 e0       	ldi	r30, 0x04	; 4
    15c0:	22 0f       	add	r18, r18
    15c2:	33 1f       	adc	r19, r19
    15c4:	44 1f       	adc	r20, r20
    15c6:	55 1f       	adc	r21, r21
    15c8:	ea 95       	dec	r30
    15ca:	d1 f7       	brne	.-12     	; 0x15c0 <_ZN15OrangutanSerial11setBaudRateEhm+0x48>
    15cc:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__udivmodsi4>
    15d0:	39 83       	std	Y+1, r19	; 0x01
    15d2:	28 83       	st	Y, r18
    15d4:	cd b7       	in	r28, 0x3d	; 61
    15d6:	de b7       	in	r29, 0x3e	; 62
    15d8:	e7 e0       	ldi	r30, 0x07	; 7
    15da:	0c 94 74 0d 	jmp	0x1ae8	; 0x1ae8 <__epilogue_restores__+0x16>

000015de <serial_set_baud_rate>:
    15de:	0e 94 bc 0a 	call	0x1578	; 0x1578 <_ZN15OrangutanSerial11setBaudRateEhm>
    15e2:	08 95       	ret

000015e4 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    15e4:	28 2f       	mov	r18, r24
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	f9 01       	movw	r30, r18
    15ea:	ee 0f       	add	r30, r30
    15ec:	ff 1f       	adc	r31, r31
    15ee:	73 e0       	ldi	r23, 0x03	; 3
    15f0:	22 0f       	add	r18, r18
    15f2:	33 1f       	adc	r19, r19
    15f4:	7a 95       	dec	r23
    15f6:	e1 f7       	brne	.-8      	; 0x15f0 <_ZN15OrangutanSerial11uart_tx_isrEh+0xc>
    15f8:	e2 0f       	add	r30, r18
    15fa:	f3 1f       	adc	r31, r19
    15fc:	ee 5f       	subi	r30, 0xFE	; 254
    15fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1600:	46 81       	ldd	r20, Z+6	; 0x06
    1602:	57 81       	ldd	r21, Z+7	; 0x07
    1604:	41 15       	cp	r20, r1
    1606:	51 05       	cpc	r21, r1
    1608:	09 f4       	brne	.+2      	; 0x160c <_ZN15OrangutanSerial11uart_tx_isrEh+0x28>
    160a:	65 c0       	rjmp	.+202    	; 0x16d6 <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    160c:	28 2f       	mov	r18, r24
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	f9 01       	movw	r30, r18
    1612:	ee 0f       	add	r30, r30
    1614:	ff 1f       	adc	r31, r31
    1616:	93 e0       	ldi	r25, 0x03	; 3
    1618:	22 0f       	add	r18, r18
    161a:	33 1f       	adc	r19, r19
    161c:	9a 95       	dec	r25
    161e:	e1 f7       	brne	.-8      	; 0x1618 <_ZN15OrangutanSerial11uart_tx_isrEh+0x34>
    1620:	e2 0f       	add	r30, r18
    1622:	f3 1f       	adc	r31, r19
    1624:	ee 5f       	subi	r30, 0xFE	; 254
    1626:	fe 4f       	sbci	r31, 0xFE	; 254
    1628:	61 81       	ldd	r22, Z+1	; 0x01
    162a:	28 2f       	mov	r18, r24
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	f9 01       	movw	r30, r18
    1630:	ee 0f       	add	r30, r30
    1632:	ff 1f       	adc	r31, r31
    1634:	a3 e0       	ldi	r26, 0x03	; 3
    1636:	22 0f       	add	r18, r18
    1638:	33 1f       	adc	r19, r19
    163a:	aa 95       	dec	r26
    163c:	e1 f7       	brne	.-8      	; 0x1636 <_ZN15OrangutanSerial11uart_tx_isrEh+0x52>
    163e:	e2 0f       	add	r30, r18
    1640:	f3 1f       	adc	r31, r19
    1642:	ee 5f       	subi	r30, 0xFE	; 254
    1644:	fe 4f       	sbci	r31, 0xFE	; 254
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	69 17       	cp	r22, r25
    164a:	08 f0       	brcs	.+2      	; 0x164e <_ZN15OrangutanSerial11uart_tx_isrEh+0x6a>
    164c:	44 c0       	rjmp	.+136    	; 0x16d6 <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    164e:	88 23       	and	r24, r24
    1650:	19 f4       	brne	.+6      	; 0x1658 <_ZN15OrangutanSerial11uart_tx_isrEh+0x74>
    1652:	e0 ec       	ldi	r30, 0xC0	; 192
    1654:	f0 e0       	ldi	r31, 0x00	; 0
    1656:	02 c0       	rjmp	.+4      	; 0x165c <_ZN15OrangutanSerial11uart_tx_isrEh+0x78>
    1658:	e8 ec       	ldi	r30, 0xC8	; 200
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	90 81       	ld	r25, Z
    165e:	95 ff       	sbrs	r25, 5
    1660:	3a c0       	rjmp	.+116    	; 0x16d6 <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    1662:	88 23       	and	r24, r24
    1664:	19 f4       	brne	.+6      	; 0x166c <_ZN15OrangutanSerial11uart_tx_isrEh+0x88>
    1666:	a6 ec       	ldi	r26, 0xC6	; 198
    1668:	b0 e0       	ldi	r27, 0x00	; 0
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <_ZN15OrangutanSerial11uart_tx_isrEh+0x8c>
    166c:	ae ec       	ldi	r26, 0xCE	; 206
    166e:	b0 e0       	ldi	r27, 0x00	; 0
    1670:	28 2f       	mov	r18, r24
    1672:	30 e0       	ldi	r19, 0x00	; 0
    1674:	f9 01       	movw	r30, r18
    1676:	ee 0f       	add	r30, r30
    1678:	ff 1f       	adc	r31, r31
    167a:	63 e0       	ldi	r22, 0x03	; 3
    167c:	22 0f       	add	r18, r18
    167e:	33 1f       	adc	r19, r19
    1680:	6a 95       	dec	r22
    1682:	e1 f7       	brne	.-8      	; 0x167c <_ZN15OrangutanSerial11uart_tx_isrEh+0x98>
    1684:	e2 0f       	add	r30, r18
    1686:	f3 1f       	adc	r31, r19
    1688:	ee 5f       	subi	r30, 0xFE	; 254
    168a:	fe 4f       	sbci	r31, 0xFE	; 254
    168c:	91 81       	ldd	r25, Z+1	; 0x01
    168e:	49 0f       	add	r20, r25
    1690:	51 1d       	adc	r21, r1
    1692:	fa 01       	movw	r30, r20
    1694:	90 81       	ld	r25, Z
    1696:	9c 93       	st	X, r25
    1698:	28 2f       	mov	r18, r24
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	f9 01       	movw	r30, r18
    169e:	ee 0f       	add	r30, r30
    16a0:	ff 1f       	adc	r31, r31
    16a2:	93 e0       	ldi	r25, 0x03	; 3
    16a4:	22 0f       	add	r18, r18
    16a6:	33 1f       	adc	r19, r19
    16a8:	9a 95       	dec	r25
    16aa:	e1 f7       	brne	.-8      	; 0x16a4 <_ZN15OrangutanSerial11uart_tx_isrEh+0xc0>
    16ac:	e2 0f       	add	r30, r18
    16ae:	f3 1f       	adc	r31, r19
    16b0:	ee 5f       	subi	r30, 0xFE	; 254
    16b2:	fe 4f       	sbci	r31, 0xFE	; 254
    16b4:	91 81       	ldd	r25, Z+1	; 0x01
    16b6:	9f 5f       	subi	r25, 0xFF	; 255
    16b8:	28 2f       	mov	r18, r24
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	f9 01       	movw	r30, r18
    16be:	ee 0f       	add	r30, r30
    16c0:	ff 1f       	adc	r31, r31
    16c2:	a3 e0       	ldi	r26, 0x03	; 3
    16c4:	22 0f       	add	r18, r18
    16c6:	33 1f       	adc	r19, r19
    16c8:	aa 95       	dec	r26
    16ca:	e1 f7       	brne	.-8      	; 0x16c4 <_ZN15OrangutanSerial11uart_tx_isrEh+0xe0>
    16cc:	e2 0f       	add	r30, r18
    16ce:	f3 1f       	adc	r31, r19
    16d0:	ee 5f       	subi	r30, 0xFE	; 254
    16d2:	fe 4f       	sbci	r31, 0xFE	; 254
    16d4:	91 83       	std	Z+1, r25	; 0x01
    16d6:	0e 94 3c 0a 	call	0x1478	; 0x1478 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    16da:	08 95       	ret

000016dc <_ZN15OrangutanSerial15serial_tx_checkEh>:
    16dc:	1f 93       	push	r17
    16de:	18 2f       	mov	r17, r24
    16e0:	82 30       	cpi	r24, 0x02	; 2
    16e2:	31 f0       	breq	.+12     	; 0x16f0 <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    16e4:	0e 94 31 0a 	call	0x1462	; 0x1462 <_Z25uart_disable_tx_interrupth>
    16e8:	81 2f       	mov	r24, r17
    16ea:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN15OrangutanSerial11uart_tx_isrEh>
    16ee:	1d c0       	rjmp	.+58     	; 0x172a <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    16f0:	80 91 1c 01 	lds	r24, 0x011C
    16f4:	90 91 1d 01 	lds	r25, 0x011D
    16f8:	00 97       	sbiw	r24, 0x00	; 0
    16fa:	b9 f0       	breq	.+46     	; 0x172a <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    16fc:	30 91 17 01 	lds	r19, 0x0117
    1700:	20 91 19 01 	lds	r18, 0x0119
    1704:	32 17       	cp	r19, r18
    1706:	88 f4       	brcc	.+34     	; 0x172a <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    1708:	06 c0       	rjmp	.+12     	; 0x1716 <_ZN15OrangutanSerial15serial_tx_checkEh+0x3a>
    170a:	80 91 17 01 	lds	r24, 0x0117
    170e:	8f 5f       	subi	r24, 0xFF	; 255
    1710:	80 93 17 01 	sts	0x0117, r24
    1714:	ed cf       	rjmp	.-38     	; 0x16f0 <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    1716:	20 91 17 01 	lds	r18, 0x0117
    171a:	82 0f       	add	r24, r18
    171c:	91 1d       	adc	r25, r1
    171e:	fc 01       	movw	r30, r24
    1720:	80 81       	ld	r24, Z
    1722:	0e 94 94 0c 	call	0x1928	; 0x1928 <_ZN12OrangutanSVP17serialSendIfReadyEc>
    1726:	88 23       	and	r24, r24
    1728:	81 f7       	brne	.-32     	; 0x170a <_ZN15OrangutanSerial15serial_tx_checkEh+0x2e>
    172a:	1f 91       	pop	r17
    172c:	08 95       	ret

0000172e <_ZN15OrangutanSerial5checkEv>:
    172e:	80 e0       	ldi	r24, 0x00	; 0
    1730:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <_ZN15OrangutanSerial15serial_tx_checkEh>
    1734:	81 e0       	ldi	r24, 0x01	; 1
    1736:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <_ZN15OrangutanSerial15serial_tx_checkEh>
    173a:	82 e0       	ldi	r24, 0x02	; 2
    173c:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <_ZN15OrangutanSerial15serial_tx_checkEh>
    1740:	80 e0       	ldi	r24, 0x00	; 0
    1742:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZN15OrangutanSerial15serial_rx_checkEh>
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZN15OrangutanSerial15serial_rx_checkEh>
    174c:	82 e0       	ldi	r24, 0x02	; 2
    174e:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZN15OrangutanSerial15serial_rx_checkEh>
    1752:	08 95       	ret

00001754 <serial_check>:
    1754:	0e 94 97 0b 	call	0x172e	; 0x172e <_ZN15OrangutanSerial5checkEv>
    1758:	08 95       	ret

0000175a <_ZN15OrangutanSerial4sendEhPch>:
    175a:	28 2f       	mov	r18, r24
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	f9 01       	movw	r30, r18
    1760:	ee 0f       	add	r30, r30
    1762:	ff 1f       	adc	r31, r31
    1764:	93 e0       	ldi	r25, 0x03	; 3
    1766:	22 0f       	add	r18, r18
    1768:	33 1f       	adc	r19, r19
    176a:	9a 95       	dec	r25
    176c:	e1 f7       	brne	.-8      	; 0x1766 <_ZN15OrangutanSerial4sendEhPch+0xc>
    176e:	e2 0f       	add	r30, r18
    1770:	f3 1f       	adc	r31, r19
    1772:	ee 5f       	subi	r30, 0xFE	; 254
    1774:	fe 4f       	sbci	r31, 0xFE	; 254
    1776:	77 83       	std	Z+7, r23	; 0x07
    1778:	66 83       	std	Z+6, r22	; 0x06
    177a:	28 2f       	mov	r18, r24
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	f9 01       	movw	r30, r18
    1780:	ee 0f       	add	r30, r30
    1782:	ff 1f       	adc	r31, r31
    1784:	a3 e0       	ldi	r26, 0x03	; 3
    1786:	22 0f       	add	r18, r18
    1788:	33 1f       	adc	r19, r19
    178a:	aa 95       	dec	r26
    178c:	e1 f7       	brne	.-8      	; 0x1786 <_ZN15OrangutanSerial4sendEhPch+0x2c>
    178e:	e2 0f       	add	r30, r18
    1790:	f3 1f       	adc	r31, r19
    1792:	ee 5f       	subi	r30, 0xFE	; 254
    1794:	fe 4f       	sbci	r31, 0xFE	; 254
    1796:	11 82       	std	Z+1, r1	; 0x01
    1798:	28 2f       	mov	r18, r24
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	f9 01       	movw	r30, r18
    179e:	ee 0f       	add	r30, r30
    17a0:	ff 1f       	adc	r31, r31
    17a2:	63 e0       	ldi	r22, 0x03	; 3
    17a4:	22 0f       	add	r18, r18
    17a6:	33 1f       	adc	r19, r19
    17a8:	6a 95       	dec	r22
    17aa:	e1 f7       	brne	.-8      	; 0x17a4 <_ZN15OrangutanSerial4sendEhPch+0x4a>
    17ac:	e2 0f       	add	r30, r18
    17ae:	f3 1f       	adc	r31, r19
    17b0:	ee 5f       	subi	r30, 0xFE	; 254
    17b2:	fe 4f       	sbci	r31, 0xFE	; 254
    17b4:	43 83       	std	Z+3, r20	; 0x03
    17b6:	82 30       	cpi	r24, 0x02	; 2
    17b8:	11 f0       	breq	.+4      	; 0x17be <_ZN15OrangutanSerial4sendEhPch+0x64>
    17ba:	0e 94 3c 0a 	call	0x1478	; 0x1478 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    17be:	08 95       	ret

000017c0 <serial_send>:
    17c0:	0e 94 ad 0b 	call	0x175a	; 0x175a <_ZN15OrangutanSerial4sendEhPch>
    17c4:	08 95       	ret

000017c6 <__vector_21>:
    17c6:	1f 92       	push	r1
    17c8:	0f 92       	push	r0
    17ca:	0f b6       	in	r0, 0x3f	; 63
    17cc:	0f 92       	push	r0
    17ce:	0b b6       	in	r0, 0x3b	; 59
    17d0:	0f 92       	push	r0
    17d2:	11 24       	eor	r1, r1
    17d4:	2f 93       	push	r18
    17d6:	3f 93       	push	r19
    17d8:	4f 93       	push	r20
    17da:	5f 93       	push	r21
    17dc:	6f 93       	push	r22
    17de:	7f 93       	push	r23
    17e0:	8f 93       	push	r24
    17e2:	9f 93       	push	r25
    17e4:	af 93       	push	r26
    17e6:	bf 93       	push	r27
    17e8:	ef 93       	push	r30
    17ea:	ff 93       	push	r31
    17ec:	80 e0       	ldi	r24, 0x00	; 0
    17ee:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN15OrangutanSerial11uart_tx_isrEh>
    17f2:	ff 91       	pop	r31
    17f4:	ef 91       	pop	r30
    17f6:	bf 91       	pop	r27
    17f8:	af 91       	pop	r26
    17fa:	9f 91       	pop	r25
    17fc:	8f 91       	pop	r24
    17fe:	7f 91       	pop	r23
    1800:	6f 91       	pop	r22
    1802:	5f 91       	pop	r21
    1804:	4f 91       	pop	r20
    1806:	3f 91       	pop	r19
    1808:	2f 91       	pop	r18
    180a:	0f 90       	pop	r0
    180c:	0b be       	out	0x3b, r0	; 59
    180e:	0f 90       	pop	r0
    1810:	0f be       	out	0x3f, r0	; 63
    1812:	0f 90       	pop	r0
    1814:	1f 90       	pop	r1
    1816:	18 95       	reti

00001818 <__vector_29>:
    1818:	1f 92       	push	r1
    181a:	0f 92       	push	r0
    181c:	0f b6       	in	r0, 0x3f	; 63
    181e:	0f 92       	push	r0
    1820:	0b b6       	in	r0, 0x3b	; 59
    1822:	0f 92       	push	r0
    1824:	11 24       	eor	r1, r1
    1826:	2f 93       	push	r18
    1828:	3f 93       	push	r19
    182a:	4f 93       	push	r20
    182c:	5f 93       	push	r21
    182e:	6f 93       	push	r22
    1830:	7f 93       	push	r23
    1832:	8f 93       	push	r24
    1834:	9f 93       	push	r25
    1836:	af 93       	push	r26
    1838:	bf 93       	push	r27
    183a:	ef 93       	push	r30
    183c:	ff 93       	push	r31
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN15OrangutanSerial11uart_tx_isrEh>
    1844:	ff 91       	pop	r31
    1846:	ef 91       	pop	r30
    1848:	bf 91       	pop	r27
    184a:	af 91       	pop	r26
    184c:	9f 91       	pop	r25
    184e:	8f 91       	pop	r24
    1850:	7f 91       	pop	r23
    1852:	6f 91       	pop	r22
    1854:	5f 91       	pop	r21
    1856:	4f 91       	pop	r20
    1858:	3f 91       	pop	r19
    185a:	2f 91       	pop	r18
    185c:	0f 90       	pop	r0
    185e:	0b be       	out	0x3b, r0	; 59
    1860:	0f 90       	pop	r0
    1862:	0f be       	out	0x3f, r0	; 63
    1864:	0f 90       	pop	r0
    1866:	1f 90       	pop	r1
    1868:	18 95       	reti

0000186a <_ZN13OrangutanTime17delayMicrosecondsEj>:
    186a:	6f 93       	push	r22
    186c:	64 e0       	ldi	r22, 0x04	; 4
    186e:	6a 95       	dec	r22
    1870:	f1 f7       	brne	.-4      	; 0x186e <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    1872:	6f 91       	pop	r22
    1874:	01 97       	sbiw	r24, 0x01	; 1
    1876:	c9 f7       	brne	.-14     	; 0x186a <_ZN13OrangutanTime17delayMicrosecondsEj>
    1878:	08 95       	ret

0000187a <__vector_11>:
    187a:	2f 92       	push	r2
    187c:	8f 93       	push	r24
    187e:	9f 93       	push	r25
    1880:	2f b6       	in	r2, 0x3f	; 63
    1882:	80 91 6b 03 	lds	r24, 0x036B
    1886:	90 91 6c 03 	lds	r25, 0x036C
    188a:	01 96       	adiw	r24, 0x01	; 1
    188c:	80 93 6b 03 	sts	0x036B, r24
    1890:	90 93 6c 03 	sts	0x036C, r25
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	80 91 6d 03 	lds	r24, 0x036D
    189a:	89 1f       	adc	r24, r25
    189c:	80 93 6d 03 	sts	0x036D, r24
    18a0:	90 91 73 03 	lds	r25, 0x0373
    18a4:	9c 5f       	subi	r25, 0xFC	; 252
    18a6:	90 93 73 03 	sts	0x0373, r25
    18aa:	80 91 72 03 	lds	r24, 0x0372
    18ae:	80 51       	subi	r24, 0x10	; 16
    18b0:	97 42       	sbci	r25, 0x27	; 39
    18b2:	c0 f0       	brcs	.+48     	; 0x18e4 <end>
    18b4:	90 93 73 03 	sts	0x0373, r25
    18b8:	80 93 72 03 	sts	0x0372, r24
    18bc:	80 91 6e 03 	lds	r24, 0x036E
    18c0:	90 91 6f 03 	lds	r25, 0x036F
    18c4:	01 96       	adiw	r24, 0x01	; 1
    18c6:	80 93 6e 03 	sts	0x036E, r24
    18ca:	90 93 6f 03 	sts	0x036F, r25
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	80 91 70 03 	lds	r24, 0x0370
    18d4:	89 1f       	adc	r24, r25
    18d6:	80 93 70 03 	sts	0x0370, r24
    18da:	80 91 71 03 	lds	r24, 0x0371
    18de:	89 1f       	adc	r24, r25
    18e0:	80 93 71 03 	sts	0x0371, r24

000018e4 <end>:
    18e4:	2f be       	out	0x3f, r2	; 63
    18e6:	9f 91       	pop	r25
    18e8:	8f 91       	pop	r24
    18ea:	2f 90       	pop	r2
    18ec:	18 95       	reti

000018ee <_ZN13OrangutanTime17delayMillisecondsEj>:
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	ec 01       	movw	r28, r24
    18f4:	05 c0       	rjmp	.+10     	; 0x1900 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    18f6:	88 ee       	ldi	r24, 0xE8	; 232
    18f8:	93 e0       	ldi	r25, 0x03	; 3
    18fa:	0e 94 35 0c 	call	0x186a	; 0x186a <_ZN13OrangutanTime17delayMicrosecondsEj>
    18fe:	21 97       	sbiw	r28, 0x01	; 1
    1900:	20 97       	sbiw	r28, 0x00	; 0
    1902:	c9 f7       	brne	.-14     	; 0x18f6 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1904:	df 91       	pop	r29
    1906:	cf 91       	pop	r28
    1908:	08 95       	ret

0000190a <delay_ms>:
    190a:	0e 94 77 0c 	call	0x18ee	; 0x18ee <_ZN13OrangutanTime17delayMillisecondsEj>
    190e:	08 95       	ret

00001910 <_ZN12OrangutanSVP11getNextByteEv>:
    1910:	8f ef       	ldi	r24, 0xFF	; 255
    1912:	64 e0       	ldi	r22, 0x04	; 4
    1914:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    1918:	08 95       	ret

0000191a <_ZN12OrangutanSVP15serialReadStartEv>:
    191a:	83 e8       	ldi	r24, 0x83	; 131
    191c:	67 e0       	ldi	r22, 0x07	; 7
    191e:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    1922:	0e 94 88 0c 	call	0x1910	; 0x1910 <_ZN12OrangutanSVP11getNextByteEv>
    1926:	08 95       	ret

00001928 <_ZN12OrangutanSVP17serialSendIfReadyEc>:
    1928:	1f 93       	push	r17
    192a:	18 2f       	mov	r17, r24
    192c:	98 2f       	mov	r25, r24
    192e:	90 95       	com	r25
    1930:	99 1f       	adc	r25, r25
    1932:	99 27       	eor	r25, r25
    1934:	99 1f       	adc	r25, r25
    1936:	85 e8       	ldi	r24, 0x85	; 133
    1938:	89 1b       	sub	r24, r25
    193a:	65 e0       	ldi	r22, 0x05	; 5
    193c:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    1940:	81 2f       	mov	r24, r17
    1942:	8f 77       	andi	r24, 0x7F	; 127
    1944:	65 e0       	ldi	r22, 0x05	; 5
    1946:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    194a:	1f 91       	pop	r17
    194c:	08 95       	ret

0000194e <delayMicroseconds>:
    194e:	6f 93       	push	r22
    1950:	64 e0       	ldi	r22, 0x04	; 4
    1952:	6a 95       	dec	r22
    1954:	f1 f7       	brne	.-4      	; 0x1952 <delayMicroseconds+0x4>
    1956:	6f 91       	pop	r22
    1958:	01 97       	sbiw	r24, 0x01	; 1
    195a:	c9 f7       	brne	.-14     	; 0x194e <delayMicroseconds>
    195c:	08 95       	ret

0000195e <_ZN18OrangutanSPIMaster4initEhh>:
    195e:	a1 e0       	ldi	r26, 0x01	; 1
    1960:	b0 e0       	ldi	r27, 0x00	; 0
    1962:	e5 eb       	ldi	r30, 0xB5	; 181
    1964:	fc e0       	ldi	r31, 0x0C	; 12
    1966:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__prologue_saves__+0x1e>
    196a:	18 2f       	mov	r17, r24
    196c:	24 99       	sbic	0x04, 4	; 4
    196e:	09 c0       	rjmp	.+18     	; 0x1982 <_ZN18OrangutanSPIMaster4initEhh+0x24>
    1970:	2c 99       	sbic	0x05, 4	; 5
    1972:	07 c0       	rjmp	.+14     	; 0x1982 <_ZN18OrangutanSPIMaster4initEhh+0x24>
    1974:	2c 9a       	sbi	0x05, 4	; 5
    1976:	8e e1       	ldi	r24, 0x1E	; 30
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	69 83       	std	Y+1, r22	; 0x01
    197c:	0e 94 a7 0c 	call	0x194e	; 0x194e <delayMicroseconds>
    1980:	69 81       	ldd	r22, Y+1	; 0x01
    1982:	84 b1       	in	r24, 0x04	; 4
    1984:	80 6a       	ori	r24, 0xA0	; 160
    1986:	84 b9       	out	0x04, r24	; 4
    1988:	26 98       	cbi	0x04, 6	; 4
    198a:	81 2f       	mov	r24, r17
    198c:	83 70       	andi	r24, 0x03	; 3
    198e:	80 65       	ori	r24, 0x50	; 80
    1990:	6c 7a       	andi	r22, 0xAC	; 172
    1992:	86 2b       	or	r24, r22
    1994:	8c bd       	out	0x2c, r24	; 44
    1996:	81 e0       	ldi	r24, 0x01	; 1
    1998:	12 ff       	sbrs	r17, 2
    199a:	80 e0       	ldi	r24, 0x00	; 0
    199c:	8d bd       	out	0x2d, r24	; 45
    199e:	81 e0       	ldi	r24, 0x01	; 1
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	0e 94 77 0c 	call	0x18ee	; 0x18ee <_ZN13OrangutanTime17delayMillisecondsEj>
    19a6:	21 96       	adiw	r28, 0x01	; 1
    19a8:	e3 e0       	ldi	r30, 0x03	; 3
    19aa:	0c 94 78 0d 	jmp	0x1af0	; 0x1af0 <__epilogue_restores__+0x1e>

000019ae <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>:
    19ae:	0f 93       	push	r16
    19b0:	1f 93       	push	r17
    19b2:	08 2f       	mov	r16, r24
    19b4:	16 2f       	mov	r17, r22
    19b6:	0c b4       	in	r0, 0x2c	; 44
    19b8:	06 fc       	sbrc	r0, 6
    19ba:	04 c0       	rjmp	.+8      	; 0x19c4 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x16>
    19bc:	80 e0       	ldi	r24, 0x00	; 0
    19be:	64 e0       	ldi	r22, 0x04	; 4
    19c0:	0e 94 af 0c 	call	0x195e	; 0x195e <_ZN18OrangutanSPIMaster4initEhh>
    19c4:	0c b4       	in	r0, 0x2c	; 44
    19c6:	04 fc       	sbrc	r0, 4
    19c8:	03 c0       	rjmp	.+6      	; 0x19d0 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x22>
    19ca:	8c b5       	in	r24, 0x2c	; 44
    19cc:	80 61       	ori	r24, 0x10	; 16
    19ce:	8c bd       	out	0x2c, r24	; 44
    19d0:	0e bd       	out	0x2e, r16	; 46
    19d2:	03 c0       	rjmp	.+6      	; 0x19da <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x2c>
    19d4:	0c b4       	in	r0, 0x2c	; 44
    19d6:	04 fe       	sbrs	r0, 4
    19d8:	0b c0       	rjmp	.+22     	; 0x19f0 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x42>
    19da:	0d b4       	in	r0, 0x2d	; 45
    19dc:	07 fe       	sbrs	r0, 7
    19de:	fa cf       	rjmp	.-12     	; 0x19d4 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x26>
    19e0:	11 23       	and	r17, r17
    19e2:	21 f0       	breq	.+8      	; 0x19ec <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x3e>
    19e4:	81 2f       	mov	r24, r17
    19e6:	90 e0       	ldi	r25, 0x00	; 0
    19e8:	0e 94 a7 0c 	call	0x194e	; 0x194e <delayMicroseconds>
    19ec:	8e b5       	in	r24, 0x2e	; 46
    19ee:	01 c0       	rjmp	.+2      	; 0x19f2 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x44>
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	1f 91       	pop	r17
    19f4:	0f 91       	pop	r16
    19f6:	08 95       	ret

000019f8 <__mulsi3>:
    19f8:	db 01       	movw	r26, r22
    19fa:	8f 93       	push	r24
    19fc:	9f 93       	push	r25
    19fe:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <__muluhisi3>
    1a02:	bf 91       	pop	r27
    1a04:	af 91       	pop	r26
    1a06:	a2 9f       	mul	r26, r18
    1a08:	80 0d       	add	r24, r0
    1a0a:	91 1d       	adc	r25, r1
    1a0c:	a3 9f       	mul	r26, r19
    1a0e:	90 0d       	add	r25, r0
    1a10:	b2 9f       	mul	r27, r18
    1a12:	90 0d       	add	r25, r0
    1a14:	11 24       	eor	r1, r1
    1a16:	08 95       	ret

00001a18 <__divmodhi4>:
    1a18:	97 fb       	bst	r25, 7
    1a1a:	07 2e       	mov	r0, r23
    1a1c:	16 f4       	brtc	.+4      	; 0x1a22 <__divmodhi4+0xa>
    1a1e:	00 94       	com	r0
    1a20:	07 d0       	rcall	.+14     	; 0x1a30 <__divmodhi4_neg1>
    1a22:	77 fd       	sbrc	r23, 7
    1a24:	09 d0       	rcall	.+18     	; 0x1a38 <__divmodhi4_neg2>
    1a26:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__udivmodhi4>
    1a2a:	07 fc       	sbrc	r0, 7
    1a2c:	05 d0       	rcall	.+10     	; 0x1a38 <__divmodhi4_neg2>
    1a2e:	3e f4       	brtc	.+14     	; 0x1a3e <__divmodhi4_exit>

00001a30 <__divmodhi4_neg1>:
    1a30:	90 95       	com	r25
    1a32:	81 95       	neg	r24
    1a34:	9f 4f       	sbci	r25, 0xFF	; 255
    1a36:	08 95       	ret

00001a38 <__divmodhi4_neg2>:
    1a38:	70 95       	com	r23
    1a3a:	61 95       	neg	r22
    1a3c:	7f 4f       	sbci	r23, 0xFF	; 255

00001a3e <__divmodhi4_exit>:
    1a3e:	08 95       	ret

00001a40 <__udivmodsi4>:
    1a40:	a1 e2       	ldi	r26, 0x21	; 33
    1a42:	1a 2e       	mov	r1, r26
    1a44:	aa 1b       	sub	r26, r26
    1a46:	bb 1b       	sub	r27, r27
    1a48:	fd 01       	movw	r30, r26
    1a4a:	0d c0       	rjmp	.+26     	; 0x1a66 <__udivmodsi4_ep>

00001a4c <__udivmodsi4_loop>:
    1a4c:	aa 1f       	adc	r26, r26
    1a4e:	bb 1f       	adc	r27, r27
    1a50:	ee 1f       	adc	r30, r30
    1a52:	ff 1f       	adc	r31, r31
    1a54:	a2 17       	cp	r26, r18
    1a56:	b3 07       	cpc	r27, r19
    1a58:	e4 07       	cpc	r30, r20
    1a5a:	f5 07       	cpc	r31, r21
    1a5c:	20 f0       	brcs	.+8      	; 0x1a66 <__udivmodsi4_ep>
    1a5e:	a2 1b       	sub	r26, r18
    1a60:	b3 0b       	sbc	r27, r19
    1a62:	e4 0b       	sbc	r30, r20
    1a64:	f5 0b       	sbc	r31, r21

00001a66 <__udivmodsi4_ep>:
    1a66:	66 1f       	adc	r22, r22
    1a68:	77 1f       	adc	r23, r23
    1a6a:	88 1f       	adc	r24, r24
    1a6c:	99 1f       	adc	r25, r25
    1a6e:	1a 94       	dec	r1
    1a70:	69 f7       	brne	.-38     	; 0x1a4c <__udivmodsi4_loop>
    1a72:	60 95       	com	r22
    1a74:	70 95       	com	r23
    1a76:	80 95       	com	r24
    1a78:	90 95       	com	r25
    1a7a:	9b 01       	movw	r18, r22
    1a7c:	ac 01       	movw	r20, r24
    1a7e:	bd 01       	movw	r22, r26
    1a80:	cf 01       	movw	r24, r30
    1a82:	08 95       	ret

00001a84 <__muluhisi3>:
    1a84:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__umulhisi3>
    1a88:	a5 9f       	mul	r26, r21
    1a8a:	90 0d       	add	r25, r0
    1a8c:	b4 9f       	mul	r27, r20
    1a8e:	90 0d       	add	r25, r0
    1a90:	a4 9f       	mul	r26, r20
    1a92:	80 0d       	add	r24, r0
    1a94:	91 1d       	adc	r25, r1
    1a96:	11 24       	eor	r1, r1
    1a98:	08 95       	ret

00001a9a <__prologue_saves__>:
    1a9a:	2f 92       	push	r2
    1a9c:	3f 92       	push	r3
    1a9e:	4f 92       	push	r4
    1aa0:	5f 92       	push	r5
    1aa2:	6f 92       	push	r6
    1aa4:	7f 92       	push	r7
    1aa6:	8f 92       	push	r8
    1aa8:	9f 92       	push	r9
    1aaa:	af 92       	push	r10
    1aac:	bf 92       	push	r11
    1aae:	cf 92       	push	r12
    1ab0:	df 92       	push	r13
    1ab2:	ef 92       	push	r14
    1ab4:	ff 92       	push	r15
    1ab6:	0f 93       	push	r16
    1ab8:	1f 93       	push	r17
    1aba:	cf 93       	push	r28
    1abc:	df 93       	push	r29
    1abe:	cd b7       	in	r28, 0x3d	; 61
    1ac0:	de b7       	in	r29, 0x3e	; 62
    1ac2:	ca 1b       	sub	r28, r26
    1ac4:	db 0b       	sbc	r29, r27
    1ac6:	0f b6       	in	r0, 0x3f	; 63
    1ac8:	f8 94       	cli
    1aca:	de bf       	out	0x3e, r29	; 62
    1acc:	0f be       	out	0x3f, r0	; 63
    1ace:	cd bf       	out	0x3d, r28	; 61
    1ad0:	09 94       	ijmp

00001ad2 <__epilogue_restores__>:
    1ad2:	2a 88       	ldd	r2, Y+18	; 0x12
    1ad4:	39 88       	ldd	r3, Y+17	; 0x11
    1ad6:	48 88       	ldd	r4, Y+16	; 0x10
    1ad8:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ada:	6e 84       	ldd	r6, Y+14	; 0x0e
    1adc:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ade:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ae0:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ae2:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ae4:	b9 84       	ldd	r11, Y+9	; 0x09
    1ae6:	c8 84       	ldd	r12, Y+8	; 0x08
    1ae8:	df 80       	ldd	r13, Y+7	; 0x07
    1aea:	ee 80       	ldd	r14, Y+6	; 0x06
    1aec:	fd 80       	ldd	r15, Y+5	; 0x05
    1aee:	0c 81       	ldd	r16, Y+4	; 0x04
    1af0:	1b 81       	ldd	r17, Y+3	; 0x03
    1af2:	aa 81       	ldd	r26, Y+2	; 0x02
    1af4:	b9 81       	ldd	r27, Y+1	; 0x01
    1af6:	ce 0f       	add	r28, r30
    1af8:	d1 1d       	adc	r29, r1
    1afa:	0f b6       	in	r0, 0x3f	; 63
    1afc:	f8 94       	cli
    1afe:	de bf       	out	0x3e, r29	; 62
    1b00:	0f be       	out	0x3f, r0	; 63
    1b02:	cd bf       	out	0x3d, r28	; 61
    1b04:	ed 01       	movw	r28, r26
    1b06:	08 95       	ret

00001b08 <__udivmodhi4>:
    1b08:	aa 1b       	sub	r26, r26
    1b0a:	bb 1b       	sub	r27, r27
    1b0c:	51 e1       	ldi	r21, 0x11	; 17
    1b0e:	07 c0       	rjmp	.+14     	; 0x1b1e <__udivmodhi4_ep>

00001b10 <__udivmodhi4_loop>:
    1b10:	aa 1f       	adc	r26, r26
    1b12:	bb 1f       	adc	r27, r27
    1b14:	a6 17       	cp	r26, r22
    1b16:	b7 07       	cpc	r27, r23
    1b18:	10 f0       	brcs	.+4      	; 0x1b1e <__udivmodhi4_ep>
    1b1a:	a6 1b       	sub	r26, r22
    1b1c:	b7 0b       	sbc	r27, r23

00001b1e <__udivmodhi4_ep>:
    1b1e:	88 1f       	adc	r24, r24
    1b20:	99 1f       	adc	r25, r25
    1b22:	5a 95       	dec	r21
    1b24:	a9 f7       	brne	.-22     	; 0x1b10 <__udivmodhi4_loop>
    1b26:	80 95       	com	r24
    1b28:	90 95       	com	r25
    1b2a:	bc 01       	movw	r22, r24
    1b2c:	cd 01       	movw	r24, r26
    1b2e:	08 95       	ret

00001b30 <__umulhisi3>:
    1b30:	a2 9f       	mul	r26, r18
    1b32:	b0 01       	movw	r22, r0
    1b34:	b3 9f       	mul	r27, r19
    1b36:	c0 01       	movw	r24, r0
    1b38:	a3 9f       	mul	r26, r19
    1b3a:	70 0d       	add	r23, r0
    1b3c:	81 1d       	adc	r24, r1
    1b3e:	11 24       	eor	r1, r1
    1b40:	91 1d       	adc	r25, r1
    1b42:	b2 9f       	mul	r27, r18
    1b44:	70 0d       	add	r23, r0
    1b46:	81 1d       	adc	r24, r1
    1b48:	11 24       	eor	r1, r1
    1b4a:	91 1d       	adc	r25, r1
    1b4c:	08 95       	ret

00001b4e <malloc>:
    1b4e:	cf 93       	push	r28
    1b50:	df 93       	push	r29
    1b52:	82 30       	cpi	r24, 0x02	; 2
    1b54:	91 05       	cpc	r25, r1
    1b56:	10 f4       	brcc	.+4      	; 0x1b5c <malloc+0xe>
    1b58:	82 e0       	ldi	r24, 0x02	; 2
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	e0 91 d6 03 	lds	r30, 0x03D6
    1b60:	f0 91 d7 03 	lds	r31, 0x03D7
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	a0 e0       	ldi	r26, 0x00	; 0
    1b6a:	b0 e0       	ldi	r27, 0x00	; 0
    1b6c:	30 97       	sbiw	r30, 0x00	; 0
    1b6e:	39 f1       	breq	.+78     	; 0x1bbe <malloc+0x70>
    1b70:	40 81       	ld	r20, Z
    1b72:	51 81       	ldd	r21, Z+1	; 0x01
    1b74:	48 17       	cp	r20, r24
    1b76:	59 07       	cpc	r21, r25
    1b78:	b8 f0       	brcs	.+46     	; 0x1ba8 <malloc+0x5a>
    1b7a:	48 17       	cp	r20, r24
    1b7c:	59 07       	cpc	r21, r25
    1b7e:	71 f4       	brne	.+28     	; 0x1b9c <malloc+0x4e>
    1b80:	82 81       	ldd	r24, Z+2	; 0x02
    1b82:	93 81       	ldd	r25, Z+3	; 0x03
    1b84:	10 97       	sbiw	r26, 0x00	; 0
    1b86:	29 f0       	breq	.+10     	; 0x1b92 <malloc+0x44>
    1b88:	13 96       	adiw	r26, 0x03	; 3
    1b8a:	9c 93       	st	X, r25
    1b8c:	8e 93       	st	-X, r24
    1b8e:	12 97       	sbiw	r26, 0x02	; 2
    1b90:	2c c0       	rjmp	.+88     	; 0x1bea <malloc+0x9c>
    1b92:	90 93 d7 03 	sts	0x03D7, r25
    1b96:	80 93 d6 03 	sts	0x03D6, r24
    1b9a:	27 c0       	rjmp	.+78     	; 0x1bea <malloc+0x9c>
    1b9c:	21 15       	cp	r18, r1
    1b9e:	31 05       	cpc	r19, r1
    1ba0:	31 f0       	breq	.+12     	; 0x1bae <malloc+0x60>
    1ba2:	42 17       	cp	r20, r18
    1ba4:	53 07       	cpc	r21, r19
    1ba6:	18 f0       	brcs	.+6      	; 0x1bae <malloc+0x60>
    1ba8:	a9 01       	movw	r20, r18
    1baa:	db 01       	movw	r26, r22
    1bac:	01 c0       	rjmp	.+2      	; 0x1bb0 <malloc+0x62>
    1bae:	ef 01       	movw	r28, r30
    1bb0:	9a 01       	movw	r18, r20
    1bb2:	bd 01       	movw	r22, r26
    1bb4:	df 01       	movw	r26, r30
    1bb6:	02 80       	ldd	r0, Z+2	; 0x02
    1bb8:	f3 81       	ldd	r31, Z+3	; 0x03
    1bba:	e0 2d       	mov	r30, r0
    1bbc:	d7 cf       	rjmp	.-82     	; 0x1b6c <malloc+0x1e>
    1bbe:	21 15       	cp	r18, r1
    1bc0:	31 05       	cpc	r19, r1
    1bc2:	f9 f0       	breq	.+62     	; 0x1c02 <malloc+0xb4>
    1bc4:	28 1b       	sub	r18, r24
    1bc6:	39 0b       	sbc	r19, r25
    1bc8:	24 30       	cpi	r18, 0x04	; 4
    1bca:	31 05       	cpc	r19, r1
    1bcc:	80 f4       	brcc	.+32     	; 0x1bee <malloc+0xa0>
    1bce:	8a 81       	ldd	r24, Y+2	; 0x02
    1bd0:	9b 81       	ldd	r25, Y+3	; 0x03
    1bd2:	61 15       	cp	r22, r1
    1bd4:	71 05       	cpc	r23, r1
    1bd6:	21 f0       	breq	.+8      	; 0x1be0 <malloc+0x92>
    1bd8:	fb 01       	movw	r30, r22
    1bda:	93 83       	std	Z+3, r25	; 0x03
    1bdc:	82 83       	std	Z+2, r24	; 0x02
    1bde:	04 c0       	rjmp	.+8      	; 0x1be8 <malloc+0x9a>
    1be0:	90 93 d7 03 	sts	0x03D7, r25
    1be4:	80 93 d6 03 	sts	0x03D6, r24
    1be8:	fe 01       	movw	r30, r28
    1bea:	32 96       	adiw	r30, 0x02	; 2
    1bec:	44 c0       	rjmp	.+136    	; 0x1c76 <malloc+0x128>
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e2 0f       	add	r30, r18
    1bf2:	f3 1f       	adc	r31, r19
    1bf4:	81 93       	st	Z+, r24
    1bf6:	91 93       	st	Z+, r25
    1bf8:	22 50       	subi	r18, 0x02	; 2
    1bfa:	31 09       	sbc	r19, r1
    1bfc:	39 83       	std	Y+1, r19	; 0x01
    1bfe:	28 83       	st	Y, r18
    1c00:	3a c0       	rjmp	.+116    	; 0x1c76 <malloc+0x128>
    1c02:	20 91 d4 03 	lds	r18, 0x03D4
    1c06:	30 91 d5 03 	lds	r19, 0x03D5
    1c0a:	23 2b       	or	r18, r19
    1c0c:	41 f4       	brne	.+16     	; 0x1c1e <malloc+0xd0>
    1c0e:	20 91 22 01 	lds	r18, 0x0122
    1c12:	30 91 23 01 	lds	r19, 0x0123
    1c16:	30 93 d5 03 	sts	0x03D5, r19
    1c1a:	20 93 d4 03 	sts	0x03D4, r18
    1c1e:	20 91 20 01 	lds	r18, 0x0120
    1c22:	30 91 21 01 	lds	r19, 0x0121
    1c26:	21 15       	cp	r18, r1
    1c28:	31 05       	cpc	r19, r1
    1c2a:	41 f4       	brne	.+16     	; 0x1c3c <malloc+0xee>
    1c2c:	2d b7       	in	r18, 0x3d	; 61
    1c2e:	3e b7       	in	r19, 0x3e	; 62
    1c30:	40 91 24 01 	lds	r20, 0x0124
    1c34:	50 91 25 01 	lds	r21, 0x0125
    1c38:	24 1b       	sub	r18, r20
    1c3a:	35 0b       	sbc	r19, r21
    1c3c:	e0 91 d4 03 	lds	r30, 0x03D4
    1c40:	f0 91 d5 03 	lds	r31, 0x03D5
    1c44:	e2 17       	cp	r30, r18
    1c46:	f3 07       	cpc	r31, r19
    1c48:	a0 f4       	brcc	.+40     	; 0x1c72 <malloc+0x124>
    1c4a:	2e 1b       	sub	r18, r30
    1c4c:	3f 0b       	sbc	r19, r31
    1c4e:	28 17       	cp	r18, r24
    1c50:	39 07       	cpc	r19, r25
    1c52:	78 f0       	brcs	.+30     	; 0x1c72 <malloc+0x124>
    1c54:	ac 01       	movw	r20, r24
    1c56:	4e 5f       	subi	r20, 0xFE	; 254
    1c58:	5f 4f       	sbci	r21, 0xFF	; 255
    1c5a:	24 17       	cp	r18, r20
    1c5c:	35 07       	cpc	r19, r21
    1c5e:	48 f0       	brcs	.+18     	; 0x1c72 <malloc+0x124>
    1c60:	4e 0f       	add	r20, r30
    1c62:	5f 1f       	adc	r21, r31
    1c64:	50 93 d5 03 	sts	0x03D5, r21
    1c68:	40 93 d4 03 	sts	0x03D4, r20
    1c6c:	81 93       	st	Z+, r24
    1c6e:	91 93       	st	Z+, r25
    1c70:	02 c0       	rjmp	.+4      	; 0x1c76 <malloc+0x128>
    1c72:	e0 e0       	ldi	r30, 0x00	; 0
    1c74:	f0 e0       	ldi	r31, 0x00	; 0
    1c76:	cf 01       	movw	r24, r30
    1c78:	df 91       	pop	r29
    1c7a:	cf 91       	pop	r28
    1c7c:	08 95       	ret

00001c7e <free>:
    1c7e:	cf 93       	push	r28
    1c80:	df 93       	push	r29
    1c82:	00 97       	sbiw	r24, 0x00	; 0
    1c84:	09 f4       	brne	.+2      	; 0x1c88 <free+0xa>
    1c86:	87 c0       	rjmp	.+270    	; 0x1d96 <free+0x118>
    1c88:	fc 01       	movw	r30, r24
    1c8a:	32 97       	sbiw	r30, 0x02	; 2
    1c8c:	13 82       	std	Z+3, r1	; 0x03
    1c8e:	12 82       	std	Z+2, r1	; 0x02
    1c90:	c0 91 d6 03 	lds	r28, 0x03D6
    1c94:	d0 91 d7 03 	lds	r29, 0x03D7
    1c98:	20 97       	sbiw	r28, 0x00	; 0
    1c9a:	81 f4       	brne	.+32     	; 0x1cbc <free+0x3e>
    1c9c:	20 81       	ld	r18, Z
    1c9e:	31 81       	ldd	r19, Z+1	; 0x01
    1ca0:	28 0f       	add	r18, r24
    1ca2:	39 1f       	adc	r19, r25
    1ca4:	80 91 d4 03 	lds	r24, 0x03D4
    1ca8:	90 91 d5 03 	lds	r25, 0x03D5
    1cac:	82 17       	cp	r24, r18
    1cae:	93 07       	cpc	r25, r19
    1cb0:	79 f5       	brne	.+94     	; 0x1d10 <free+0x92>
    1cb2:	f0 93 d5 03 	sts	0x03D5, r31
    1cb6:	e0 93 d4 03 	sts	0x03D4, r30
    1cba:	6d c0       	rjmp	.+218    	; 0x1d96 <free+0x118>
    1cbc:	de 01       	movw	r26, r28
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	ae 17       	cp	r26, r30
    1cc4:	bf 07       	cpc	r27, r31
    1cc6:	50 f4       	brcc	.+20     	; 0x1cdc <free+0x5e>
    1cc8:	12 96       	adiw	r26, 0x02	; 2
    1cca:	4d 91       	ld	r20, X+
    1ccc:	5c 91       	ld	r21, X
    1cce:	13 97       	sbiw	r26, 0x03	; 3
    1cd0:	9d 01       	movw	r18, r26
    1cd2:	41 15       	cp	r20, r1
    1cd4:	51 05       	cpc	r21, r1
    1cd6:	09 f1       	breq	.+66     	; 0x1d1a <free+0x9c>
    1cd8:	da 01       	movw	r26, r20
    1cda:	f3 cf       	rjmp	.-26     	; 0x1cc2 <free+0x44>
    1cdc:	b3 83       	std	Z+3, r27	; 0x03
    1cde:	a2 83       	std	Z+2, r26	; 0x02
    1ce0:	40 81       	ld	r20, Z
    1ce2:	51 81       	ldd	r21, Z+1	; 0x01
    1ce4:	84 0f       	add	r24, r20
    1ce6:	95 1f       	adc	r25, r21
    1ce8:	8a 17       	cp	r24, r26
    1cea:	9b 07       	cpc	r25, r27
    1cec:	71 f4       	brne	.+28     	; 0x1d0a <free+0x8c>
    1cee:	8d 91       	ld	r24, X+
    1cf0:	9c 91       	ld	r25, X
    1cf2:	11 97       	sbiw	r26, 0x01	; 1
    1cf4:	84 0f       	add	r24, r20
    1cf6:	95 1f       	adc	r25, r21
    1cf8:	02 96       	adiw	r24, 0x02	; 2
    1cfa:	91 83       	std	Z+1, r25	; 0x01
    1cfc:	80 83       	st	Z, r24
    1cfe:	12 96       	adiw	r26, 0x02	; 2
    1d00:	8d 91       	ld	r24, X+
    1d02:	9c 91       	ld	r25, X
    1d04:	13 97       	sbiw	r26, 0x03	; 3
    1d06:	93 83       	std	Z+3, r25	; 0x03
    1d08:	82 83       	std	Z+2, r24	; 0x02
    1d0a:	21 15       	cp	r18, r1
    1d0c:	31 05       	cpc	r19, r1
    1d0e:	29 f4       	brne	.+10     	; 0x1d1a <free+0x9c>
    1d10:	f0 93 d7 03 	sts	0x03D7, r31
    1d14:	e0 93 d6 03 	sts	0x03D6, r30
    1d18:	3e c0       	rjmp	.+124    	; 0x1d96 <free+0x118>
    1d1a:	d9 01       	movw	r26, r18
    1d1c:	13 96       	adiw	r26, 0x03	; 3
    1d1e:	fc 93       	st	X, r31
    1d20:	ee 93       	st	-X, r30
    1d22:	12 97       	sbiw	r26, 0x02	; 2
    1d24:	4d 91       	ld	r20, X+
    1d26:	5d 91       	ld	r21, X+
    1d28:	a4 0f       	add	r26, r20
    1d2a:	b5 1f       	adc	r27, r21
    1d2c:	ea 17       	cp	r30, r26
    1d2e:	fb 07       	cpc	r31, r27
    1d30:	79 f4       	brne	.+30     	; 0x1d50 <free+0xd2>
    1d32:	80 81       	ld	r24, Z
    1d34:	91 81       	ldd	r25, Z+1	; 0x01
    1d36:	84 0f       	add	r24, r20
    1d38:	95 1f       	adc	r25, r21
    1d3a:	02 96       	adiw	r24, 0x02	; 2
    1d3c:	d9 01       	movw	r26, r18
    1d3e:	11 96       	adiw	r26, 0x01	; 1
    1d40:	9c 93       	st	X, r25
    1d42:	8e 93       	st	-X, r24
    1d44:	82 81       	ldd	r24, Z+2	; 0x02
    1d46:	93 81       	ldd	r25, Z+3	; 0x03
    1d48:	13 96       	adiw	r26, 0x03	; 3
    1d4a:	9c 93       	st	X, r25
    1d4c:	8e 93       	st	-X, r24
    1d4e:	12 97       	sbiw	r26, 0x02	; 2
    1d50:	e0 e0       	ldi	r30, 0x00	; 0
    1d52:	f0 e0       	ldi	r31, 0x00	; 0
    1d54:	8a 81       	ldd	r24, Y+2	; 0x02
    1d56:	9b 81       	ldd	r25, Y+3	; 0x03
    1d58:	00 97       	sbiw	r24, 0x00	; 0
    1d5a:	19 f0       	breq	.+6      	; 0x1d62 <free+0xe4>
    1d5c:	fe 01       	movw	r30, r28
    1d5e:	ec 01       	movw	r28, r24
    1d60:	f9 cf       	rjmp	.-14     	; 0x1d54 <free+0xd6>
    1d62:	ce 01       	movw	r24, r28
    1d64:	02 96       	adiw	r24, 0x02	; 2
    1d66:	28 81       	ld	r18, Y
    1d68:	39 81       	ldd	r19, Y+1	; 0x01
    1d6a:	82 0f       	add	r24, r18
    1d6c:	93 1f       	adc	r25, r19
    1d6e:	20 91 d4 03 	lds	r18, 0x03D4
    1d72:	30 91 d5 03 	lds	r19, 0x03D5
    1d76:	28 17       	cp	r18, r24
    1d78:	39 07       	cpc	r19, r25
    1d7a:	69 f4       	brne	.+26     	; 0x1d96 <free+0x118>
    1d7c:	30 97       	sbiw	r30, 0x00	; 0
    1d7e:	29 f4       	brne	.+10     	; 0x1d8a <free+0x10c>
    1d80:	10 92 d7 03 	sts	0x03D7, r1
    1d84:	10 92 d6 03 	sts	0x03D6, r1
    1d88:	02 c0       	rjmp	.+4      	; 0x1d8e <free+0x110>
    1d8a:	13 82       	std	Z+3, r1	; 0x03
    1d8c:	12 82       	std	Z+2, r1	; 0x02
    1d8e:	d0 93 d5 03 	sts	0x03D5, r29
    1d92:	c0 93 d4 03 	sts	0x03D4, r28
    1d96:	df 91       	pop	r29
    1d98:	cf 91       	pop	r28
    1d9a:	08 95       	ret

00001d9c <fdevopen>:
    1d9c:	0f 93       	push	r16
    1d9e:	1f 93       	push	r17
    1da0:	cf 93       	push	r28
    1da2:	df 93       	push	r29
    1da4:	ec 01       	movw	r28, r24
    1da6:	8b 01       	movw	r16, r22
    1da8:	00 97       	sbiw	r24, 0x00	; 0
    1daa:	31 f4       	brne	.+12     	; 0x1db8 <fdevopen+0x1c>
    1dac:	61 15       	cp	r22, r1
    1dae:	71 05       	cpc	r23, r1
    1db0:	19 f4       	brne	.+6      	; 0x1db8 <fdevopen+0x1c>
    1db2:	80 e0       	ldi	r24, 0x00	; 0
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	38 c0       	rjmp	.+112    	; 0x1e28 <fdevopen+0x8c>
    1db8:	6e e0       	ldi	r22, 0x0E	; 14
    1dba:	70 e0       	ldi	r23, 0x00	; 0
    1dbc:	81 e0       	ldi	r24, 0x01	; 1
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	0e 94 78 14 	call	0x28f0	; 0x28f0 <calloc>
    1dc4:	fc 01       	movw	r30, r24
    1dc6:	00 97       	sbiw	r24, 0x00	; 0
    1dc8:	a1 f3       	breq	.-24     	; 0x1db2 <fdevopen+0x16>
    1dca:	80 e8       	ldi	r24, 0x80	; 128
    1dcc:	83 83       	std	Z+3, r24	; 0x03
    1dce:	01 15       	cp	r16, r1
    1dd0:	11 05       	cpc	r17, r1
    1dd2:	71 f0       	breq	.+28     	; 0x1df0 <fdevopen+0x54>
    1dd4:	13 87       	std	Z+11, r17	; 0x0b
    1dd6:	02 87       	std	Z+10, r16	; 0x0a
    1dd8:	81 e8       	ldi	r24, 0x81	; 129
    1dda:	83 83       	std	Z+3, r24	; 0x03
    1ddc:	80 91 d8 03 	lds	r24, 0x03D8
    1de0:	90 91 d9 03 	lds	r25, 0x03D9
    1de4:	89 2b       	or	r24, r25
    1de6:	21 f4       	brne	.+8      	; 0x1df0 <fdevopen+0x54>
    1de8:	f0 93 d9 03 	sts	0x03D9, r31
    1dec:	e0 93 d8 03 	sts	0x03D8, r30
    1df0:	20 97       	sbiw	r28, 0x00	; 0
    1df2:	c9 f0       	breq	.+50     	; 0x1e26 <fdevopen+0x8a>
    1df4:	d1 87       	std	Z+9, r29	; 0x09
    1df6:	c0 87       	std	Z+8, r28	; 0x08
    1df8:	83 81       	ldd	r24, Z+3	; 0x03
    1dfa:	82 60       	ori	r24, 0x02	; 2
    1dfc:	83 83       	std	Z+3, r24	; 0x03
    1dfe:	80 91 da 03 	lds	r24, 0x03DA
    1e02:	90 91 db 03 	lds	r25, 0x03DB
    1e06:	89 2b       	or	r24, r25
    1e08:	71 f4       	brne	.+28     	; 0x1e26 <fdevopen+0x8a>
    1e0a:	f0 93 db 03 	sts	0x03DB, r31
    1e0e:	e0 93 da 03 	sts	0x03DA, r30
    1e12:	80 91 dc 03 	lds	r24, 0x03DC
    1e16:	90 91 dd 03 	lds	r25, 0x03DD
    1e1a:	89 2b       	or	r24, r25
    1e1c:	21 f4       	brne	.+8      	; 0x1e26 <fdevopen+0x8a>
    1e1e:	f0 93 dd 03 	sts	0x03DD, r31
    1e22:	e0 93 dc 03 	sts	0x03DC, r30
    1e26:	cf 01       	movw	r24, r30
    1e28:	df 91       	pop	r29
    1e2a:	cf 91       	pop	r28
    1e2c:	1f 91       	pop	r17
    1e2e:	0f 91       	pop	r16
    1e30:	08 95       	ret

00001e32 <printf>:
    1e32:	cf 93       	push	r28
    1e34:	df 93       	push	r29
    1e36:	cd b7       	in	r28, 0x3d	; 61
    1e38:	de b7       	in	r29, 0x3e	; 62
    1e3a:	fe 01       	movw	r30, r28
    1e3c:	35 96       	adiw	r30, 0x05	; 5
    1e3e:	61 91       	ld	r22, Z+
    1e40:	71 91       	ld	r23, Z+
    1e42:	af 01       	movw	r20, r30
    1e44:	80 91 da 03 	lds	r24, 0x03DA
    1e48:	90 91 db 03 	lds	r25, 0x03DB
    1e4c:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <vfprintf>
    1e50:	df 91       	pop	r29
    1e52:	cf 91       	pop	r28
    1e54:	08 95       	ret

00001e56 <puts>:
    1e56:	0f 93       	push	r16
    1e58:	1f 93       	push	r17
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	e0 91 da 03 	lds	r30, 0x03DA
    1e62:	f0 91 db 03 	lds	r31, 0x03DB
    1e66:	23 81       	ldd	r18, Z+3	; 0x03
    1e68:	21 ff       	sbrs	r18, 1
    1e6a:	1b c0       	rjmp	.+54     	; 0x1ea2 <puts+0x4c>
    1e6c:	ec 01       	movw	r28, r24
    1e6e:	00 e0       	ldi	r16, 0x00	; 0
    1e70:	10 e0       	ldi	r17, 0x00	; 0
    1e72:	89 91       	ld	r24, Y+
    1e74:	60 91 da 03 	lds	r22, 0x03DA
    1e78:	70 91 db 03 	lds	r23, 0x03DB
    1e7c:	db 01       	movw	r26, r22
    1e7e:	18 96       	adiw	r26, 0x08	; 8
    1e80:	ed 91       	ld	r30, X+
    1e82:	fc 91       	ld	r31, X
    1e84:	19 97       	sbiw	r26, 0x09	; 9
    1e86:	88 23       	and	r24, r24
    1e88:	31 f0       	breq	.+12     	; 0x1e96 <puts+0x40>
    1e8a:	09 95       	icall
    1e8c:	89 2b       	or	r24, r25
    1e8e:	89 f3       	breq	.-30     	; 0x1e72 <puts+0x1c>
    1e90:	0f ef       	ldi	r16, 0xFF	; 255
    1e92:	1f ef       	ldi	r17, 0xFF	; 255
    1e94:	ee cf       	rjmp	.-36     	; 0x1e72 <puts+0x1c>
    1e96:	8a e0       	ldi	r24, 0x0A	; 10
    1e98:	09 95       	icall
    1e9a:	89 2b       	or	r24, r25
    1e9c:	11 f4       	brne	.+4      	; 0x1ea2 <puts+0x4c>
    1e9e:	c8 01       	movw	r24, r16
    1ea0:	02 c0       	rjmp	.+4      	; 0x1ea6 <puts+0x50>
    1ea2:	8f ef       	ldi	r24, 0xFF	; 255
    1ea4:	9f ef       	ldi	r25, 0xFF	; 255
    1ea6:	df 91       	pop	r29
    1ea8:	cf 91       	pop	r28
    1eaa:	1f 91       	pop	r17
    1eac:	0f 91       	pop	r16
    1eae:	08 95       	ret

00001eb0 <sprintf>:
    1eb0:	0f 93       	push	r16
    1eb2:	1f 93       	push	r17
    1eb4:	cf 93       	push	r28
    1eb6:	df 93       	push	r29
    1eb8:	cd b7       	in	r28, 0x3d	; 61
    1eba:	de b7       	in	r29, 0x3e	; 62
    1ebc:	2e 97       	sbiw	r28, 0x0e	; 14
    1ebe:	0f b6       	in	r0, 0x3f	; 63
    1ec0:	f8 94       	cli
    1ec2:	de bf       	out	0x3e, r29	; 62
    1ec4:	0f be       	out	0x3f, r0	; 63
    1ec6:	cd bf       	out	0x3d, r28	; 61
    1ec8:	0d 89       	ldd	r16, Y+21	; 0x15
    1eca:	1e 89       	ldd	r17, Y+22	; 0x16
    1ecc:	86 e0       	ldi	r24, 0x06	; 6
    1ece:	8c 83       	std	Y+4, r24	; 0x04
    1ed0:	1a 83       	std	Y+2, r17	; 0x02
    1ed2:	09 83       	std	Y+1, r16	; 0x01
    1ed4:	8f ef       	ldi	r24, 0xFF	; 255
    1ed6:	9f e7       	ldi	r25, 0x7F	; 127
    1ed8:	9e 83       	std	Y+6, r25	; 0x06
    1eda:	8d 83       	std	Y+5, r24	; 0x05
    1edc:	ae 01       	movw	r20, r28
    1ede:	47 5e       	subi	r20, 0xE7	; 231
    1ee0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ee2:	6f 89       	ldd	r22, Y+23	; 0x17
    1ee4:	78 8d       	ldd	r23, Y+24	; 0x18
    1ee6:	ce 01       	movw	r24, r28
    1ee8:	01 96       	adiw	r24, 0x01	; 1
    1eea:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <vfprintf>
    1eee:	ef 81       	ldd	r30, Y+7	; 0x07
    1ef0:	f8 85       	ldd	r31, Y+8	; 0x08
    1ef2:	e0 0f       	add	r30, r16
    1ef4:	f1 1f       	adc	r31, r17
    1ef6:	10 82       	st	Z, r1
    1ef8:	2e 96       	adiw	r28, 0x0e	; 14
    1efa:	0f b6       	in	r0, 0x3f	; 63
    1efc:	f8 94       	cli
    1efe:	de bf       	out	0x3e, r29	; 62
    1f00:	0f be       	out	0x3f, r0	; 63
    1f02:	cd bf       	out	0x3d, r28	; 61
    1f04:	df 91       	pop	r29
    1f06:	cf 91       	pop	r28
    1f08:	1f 91       	pop	r17
    1f0a:	0f 91       	pop	r16
    1f0c:	08 95       	ret

00001f0e <sscanf>:
    1f0e:	cf 93       	push	r28
    1f10:	df 93       	push	r29
    1f12:	cd b7       	in	r28, 0x3d	; 61
    1f14:	de b7       	in	r29, 0x3e	; 62
    1f16:	2e 97       	sbiw	r28, 0x0e	; 14
    1f18:	0f b6       	in	r0, 0x3f	; 63
    1f1a:	f8 94       	cli
    1f1c:	de bf       	out	0x3e, r29	; 62
    1f1e:	0f be       	out	0x3f, r0	; 63
    1f20:	cd bf       	out	0x3d, r28	; 61
    1f22:	85 e0       	ldi	r24, 0x05	; 5
    1f24:	8c 83       	std	Y+4, r24	; 0x04
    1f26:	8b 89       	ldd	r24, Y+19	; 0x13
    1f28:	9c 89       	ldd	r25, Y+20	; 0x14
    1f2a:	9a 83       	std	Y+2, r25	; 0x02
    1f2c:	89 83       	std	Y+1, r24	; 0x01
    1f2e:	ae 01       	movw	r20, r28
    1f30:	49 5e       	subi	r20, 0xE9	; 233
    1f32:	5f 4f       	sbci	r21, 0xFF	; 255
    1f34:	6d 89       	ldd	r22, Y+21	; 0x15
    1f36:	7e 89       	ldd	r23, Y+22	; 0x16
    1f38:	ce 01       	movw	r24, r28
    1f3a:	01 96       	adiw	r24, 0x01	; 1
    1f3c:	0e 94 41 13 	call	0x2682	; 0x2682 <vfscanf>
    1f40:	2e 96       	adiw	r28, 0x0e	; 14
    1f42:	0f b6       	in	r0, 0x3f	; 63
    1f44:	f8 94       	cli
    1f46:	de bf       	out	0x3e, r29	; 62
    1f48:	0f be       	out	0x3f, r0	; 63
    1f4a:	cd bf       	out	0x3d, r28	; 61
    1f4c:	df 91       	pop	r29
    1f4e:	cf 91       	pop	r28
    1f50:	08 95       	ret

00001f52 <vfprintf>:
    1f52:	2f 92       	push	r2
    1f54:	3f 92       	push	r3
    1f56:	4f 92       	push	r4
    1f58:	5f 92       	push	r5
    1f5a:	6f 92       	push	r6
    1f5c:	7f 92       	push	r7
    1f5e:	8f 92       	push	r8
    1f60:	9f 92       	push	r9
    1f62:	af 92       	push	r10
    1f64:	bf 92       	push	r11
    1f66:	cf 92       	push	r12
    1f68:	df 92       	push	r13
    1f6a:	ef 92       	push	r14
    1f6c:	ff 92       	push	r15
    1f6e:	0f 93       	push	r16
    1f70:	1f 93       	push	r17
    1f72:	cf 93       	push	r28
    1f74:	df 93       	push	r29
    1f76:	cd b7       	in	r28, 0x3d	; 61
    1f78:	de b7       	in	r29, 0x3e	; 62
    1f7a:	2c 97       	sbiw	r28, 0x0c	; 12
    1f7c:	0f b6       	in	r0, 0x3f	; 63
    1f7e:	f8 94       	cli
    1f80:	de bf       	out	0x3e, r29	; 62
    1f82:	0f be       	out	0x3f, r0	; 63
    1f84:	cd bf       	out	0x3d, r28	; 61
    1f86:	7c 01       	movw	r14, r24
    1f88:	6b 01       	movw	r12, r22
    1f8a:	8a 01       	movw	r16, r20
    1f8c:	fc 01       	movw	r30, r24
    1f8e:	17 82       	std	Z+7, r1	; 0x07
    1f90:	16 82       	std	Z+6, r1	; 0x06
    1f92:	83 81       	ldd	r24, Z+3	; 0x03
    1f94:	81 ff       	sbrs	r24, 1
    1f96:	bd c1       	rjmp	.+890    	; 0x2312 <vfprintf+0x3c0>
    1f98:	ce 01       	movw	r24, r28
    1f9a:	01 96       	adiw	r24, 0x01	; 1
    1f9c:	4c 01       	movw	r8, r24
    1f9e:	f7 01       	movw	r30, r14
    1fa0:	93 81       	ldd	r25, Z+3	; 0x03
    1fa2:	f6 01       	movw	r30, r12
    1fa4:	93 fd       	sbrc	r25, 3
    1fa6:	85 91       	lpm	r24, Z+
    1fa8:	93 ff       	sbrs	r25, 3
    1faa:	81 91       	ld	r24, Z+
    1fac:	6f 01       	movw	r12, r30
    1fae:	88 23       	and	r24, r24
    1fb0:	09 f4       	brne	.+2      	; 0x1fb4 <vfprintf+0x62>
    1fb2:	ab c1       	rjmp	.+854    	; 0x230a <vfprintf+0x3b8>
    1fb4:	85 32       	cpi	r24, 0x25	; 37
    1fb6:	39 f4       	brne	.+14     	; 0x1fc6 <vfprintf+0x74>
    1fb8:	93 fd       	sbrc	r25, 3
    1fba:	85 91       	lpm	r24, Z+
    1fbc:	93 ff       	sbrs	r25, 3
    1fbe:	81 91       	ld	r24, Z+
    1fc0:	6f 01       	movw	r12, r30
    1fc2:	85 32       	cpi	r24, 0x25	; 37
    1fc4:	29 f4       	brne	.+10     	; 0x1fd0 <vfprintf+0x7e>
    1fc6:	b7 01       	movw	r22, r14
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    1fce:	e7 cf       	rjmp	.-50     	; 0x1f9e <vfprintf+0x4c>
    1fd0:	51 2c       	mov	r5, r1
    1fd2:	31 2c       	mov	r3, r1
    1fd4:	20 e0       	ldi	r18, 0x00	; 0
    1fd6:	20 32       	cpi	r18, 0x20	; 32
    1fd8:	a0 f4       	brcc	.+40     	; 0x2002 <vfprintf+0xb0>
    1fda:	8b 32       	cpi	r24, 0x2B	; 43
    1fdc:	69 f0       	breq	.+26     	; 0x1ff8 <vfprintf+0xa6>
    1fde:	30 f4       	brcc	.+12     	; 0x1fec <vfprintf+0x9a>
    1fe0:	80 32       	cpi	r24, 0x20	; 32
    1fe2:	59 f0       	breq	.+22     	; 0x1ffa <vfprintf+0xa8>
    1fe4:	83 32       	cpi	r24, 0x23	; 35
    1fe6:	69 f4       	brne	.+26     	; 0x2002 <vfprintf+0xb0>
    1fe8:	20 61       	ori	r18, 0x10	; 16
    1fea:	2c c0       	rjmp	.+88     	; 0x2044 <vfprintf+0xf2>
    1fec:	8d 32       	cpi	r24, 0x2D	; 45
    1fee:	39 f0       	breq	.+14     	; 0x1ffe <vfprintf+0xac>
    1ff0:	80 33       	cpi	r24, 0x30	; 48
    1ff2:	39 f4       	brne	.+14     	; 0x2002 <vfprintf+0xb0>
    1ff4:	21 60       	ori	r18, 0x01	; 1
    1ff6:	26 c0       	rjmp	.+76     	; 0x2044 <vfprintf+0xf2>
    1ff8:	22 60       	ori	r18, 0x02	; 2
    1ffa:	24 60       	ori	r18, 0x04	; 4
    1ffc:	23 c0       	rjmp	.+70     	; 0x2044 <vfprintf+0xf2>
    1ffe:	28 60       	ori	r18, 0x08	; 8
    2000:	21 c0       	rjmp	.+66     	; 0x2044 <vfprintf+0xf2>
    2002:	27 fd       	sbrc	r18, 7
    2004:	27 c0       	rjmp	.+78     	; 0x2054 <vfprintf+0x102>
    2006:	30 ed       	ldi	r19, 0xD0	; 208
    2008:	38 0f       	add	r19, r24
    200a:	3a 30       	cpi	r19, 0x0A	; 10
    200c:	78 f4       	brcc	.+30     	; 0x202c <vfprintf+0xda>
    200e:	26 ff       	sbrs	r18, 6
    2010:	06 c0       	rjmp	.+12     	; 0x201e <vfprintf+0xcc>
    2012:	fa e0       	ldi	r31, 0x0A	; 10
    2014:	5f 9e       	mul	r5, r31
    2016:	30 0d       	add	r19, r0
    2018:	11 24       	eor	r1, r1
    201a:	53 2e       	mov	r5, r19
    201c:	13 c0       	rjmp	.+38     	; 0x2044 <vfprintf+0xf2>
    201e:	8a e0       	ldi	r24, 0x0A	; 10
    2020:	38 9e       	mul	r3, r24
    2022:	30 0d       	add	r19, r0
    2024:	11 24       	eor	r1, r1
    2026:	33 2e       	mov	r3, r19
    2028:	20 62       	ori	r18, 0x20	; 32
    202a:	0c c0       	rjmp	.+24     	; 0x2044 <vfprintf+0xf2>
    202c:	8e 32       	cpi	r24, 0x2E	; 46
    202e:	21 f4       	brne	.+8      	; 0x2038 <vfprintf+0xe6>
    2030:	26 fd       	sbrc	r18, 6
    2032:	6b c1       	rjmp	.+726    	; 0x230a <vfprintf+0x3b8>
    2034:	20 64       	ori	r18, 0x40	; 64
    2036:	06 c0       	rjmp	.+12     	; 0x2044 <vfprintf+0xf2>
    2038:	8c 36       	cpi	r24, 0x6C	; 108
    203a:	11 f4       	brne	.+4      	; 0x2040 <vfprintf+0xee>
    203c:	20 68       	ori	r18, 0x80	; 128
    203e:	02 c0       	rjmp	.+4      	; 0x2044 <vfprintf+0xf2>
    2040:	88 36       	cpi	r24, 0x68	; 104
    2042:	41 f4       	brne	.+16     	; 0x2054 <vfprintf+0x102>
    2044:	f6 01       	movw	r30, r12
    2046:	93 fd       	sbrc	r25, 3
    2048:	85 91       	lpm	r24, Z+
    204a:	93 ff       	sbrs	r25, 3
    204c:	81 91       	ld	r24, Z+
    204e:	6f 01       	movw	r12, r30
    2050:	81 11       	cpse	r24, r1
    2052:	c1 cf       	rjmp	.-126    	; 0x1fd6 <vfprintf+0x84>
    2054:	98 2f       	mov	r25, r24
    2056:	9f 7d       	andi	r25, 0xDF	; 223
    2058:	95 54       	subi	r25, 0x45	; 69
    205a:	93 30       	cpi	r25, 0x03	; 3
    205c:	28 f4       	brcc	.+10     	; 0x2068 <vfprintf+0x116>
    205e:	0c 5f       	subi	r16, 0xFC	; 252
    2060:	1f 4f       	sbci	r17, 0xFF	; 255
    2062:	ff e3       	ldi	r31, 0x3F	; 63
    2064:	f9 83       	std	Y+1, r31	; 0x01
    2066:	0d c0       	rjmp	.+26     	; 0x2082 <vfprintf+0x130>
    2068:	83 36       	cpi	r24, 0x63	; 99
    206a:	31 f0       	breq	.+12     	; 0x2078 <vfprintf+0x126>
    206c:	83 37       	cpi	r24, 0x73	; 115
    206e:	71 f0       	breq	.+28     	; 0x208c <vfprintf+0x13a>
    2070:	83 35       	cpi	r24, 0x53	; 83
    2072:	09 f0       	breq	.+2      	; 0x2076 <vfprintf+0x124>
    2074:	5b c0       	rjmp	.+182    	; 0x212c <vfprintf+0x1da>
    2076:	22 c0       	rjmp	.+68     	; 0x20bc <vfprintf+0x16a>
    2078:	f8 01       	movw	r30, r16
    207a:	80 81       	ld	r24, Z
    207c:	89 83       	std	Y+1, r24	; 0x01
    207e:	0e 5f       	subi	r16, 0xFE	; 254
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
    2082:	44 24       	eor	r4, r4
    2084:	43 94       	inc	r4
    2086:	51 2c       	mov	r5, r1
    2088:	54 01       	movw	r10, r8
    208a:	15 c0       	rjmp	.+42     	; 0x20b6 <vfprintf+0x164>
    208c:	38 01       	movw	r6, r16
    208e:	f2 e0       	ldi	r31, 0x02	; 2
    2090:	6f 0e       	add	r6, r31
    2092:	71 1c       	adc	r7, r1
    2094:	f8 01       	movw	r30, r16
    2096:	a0 80       	ld	r10, Z
    2098:	b1 80       	ldd	r11, Z+1	; 0x01
    209a:	26 ff       	sbrs	r18, 6
    209c:	03 c0       	rjmp	.+6      	; 0x20a4 <vfprintf+0x152>
    209e:	65 2d       	mov	r22, r5
    20a0:	70 e0       	ldi	r23, 0x00	; 0
    20a2:	02 c0       	rjmp	.+4      	; 0x20a8 <vfprintf+0x156>
    20a4:	6f ef       	ldi	r22, 0xFF	; 255
    20a6:	7f ef       	ldi	r23, 0xFF	; 255
    20a8:	c5 01       	movw	r24, r10
    20aa:	2c 87       	std	Y+12, r18	; 0x0c
    20ac:	0e 94 b9 14 	call	0x2972	; 0x2972 <strnlen>
    20b0:	2c 01       	movw	r4, r24
    20b2:	83 01       	movw	r16, r6
    20b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    20b6:	2f 77       	andi	r18, 0x7F	; 127
    20b8:	22 2e       	mov	r2, r18
    20ba:	17 c0       	rjmp	.+46     	; 0x20ea <vfprintf+0x198>
    20bc:	38 01       	movw	r6, r16
    20be:	f2 e0       	ldi	r31, 0x02	; 2
    20c0:	6f 0e       	add	r6, r31
    20c2:	71 1c       	adc	r7, r1
    20c4:	f8 01       	movw	r30, r16
    20c6:	a0 80       	ld	r10, Z
    20c8:	b1 80       	ldd	r11, Z+1	; 0x01
    20ca:	26 ff       	sbrs	r18, 6
    20cc:	03 c0       	rjmp	.+6      	; 0x20d4 <vfprintf+0x182>
    20ce:	65 2d       	mov	r22, r5
    20d0:	70 e0       	ldi	r23, 0x00	; 0
    20d2:	02 c0       	rjmp	.+4      	; 0x20d8 <vfprintf+0x186>
    20d4:	6f ef       	ldi	r22, 0xFF	; 255
    20d6:	7f ef       	ldi	r23, 0xFF	; 255
    20d8:	c5 01       	movw	r24, r10
    20da:	2c 87       	std	Y+12, r18	; 0x0c
    20dc:	0e 94 a7 14 	call	0x294e	; 0x294e <strnlen_P>
    20e0:	2c 01       	movw	r4, r24
    20e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    20e4:	20 68       	ori	r18, 0x80	; 128
    20e6:	22 2e       	mov	r2, r18
    20e8:	83 01       	movw	r16, r6
    20ea:	23 fc       	sbrc	r2, 3
    20ec:	1b c0       	rjmp	.+54     	; 0x2124 <vfprintf+0x1d2>
    20ee:	83 2d       	mov	r24, r3
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	48 16       	cp	r4, r24
    20f4:	59 06       	cpc	r5, r25
    20f6:	b0 f4       	brcc	.+44     	; 0x2124 <vfprintf+0x1d2>
    20f8:	b7 01       	movw	r22, r14
    20fa:	80 e2       	ldi	r24, 0x20	; 32
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    2102:	3a 94       	dec	r3
    2104:	f4 cf       	rjmp	.-24     	; 0x20ee <vfprintf+0x19c>
    2106:	f5 01       	movw	r30, r10
    2108:	27 fc       	sbrc	r2, 7
    210a:	85 91       	lpm	r24, Z+
    210c:	27 fe       	sbrs	r2, 7
    210e:	81 91       	ld	r24, Z+
    2110:	5f 01       	movw	r10, r30
    2112:	b7 01       	movw	r22, r14
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    211a:	31 10       	cpse	r3, r1
    211c:	3a 94       	dec	r3
    211e:	f1 e0       	ldi	r31, 0x01	; 1
    2120:	4f 1a       	sub	r4, r31
    2122:	51 08       	sbc	r5, r1
    2124:	41 14       	cp	r4, r1
    2126:	51 04       	cpc	r5, r1
    2128:	71 f7       	brne	.-36     	; 0x2106 <vfprintf+0x1b4>
    212a:	e5 c0       	rjmp	.+458    	; 0x22f6 <vfprintf+0x3a4>
    212c:	84 36       	cpi	r24, 0x64	; 100
    212e:	11 f0       	breq	.+4      	; 0x2134 <vfprintf+0x1e2>
    2130:	89 36       	cpi	r24, 0x69	; 105
    2132:	39 f5       	brne	.+78     	; 0x2182 <vfprintf+0x230>
    2134:	f8 01       	movw	r30, r16
    2136:	27 ff       	sbrs	r18, 7
    2138:	07 c0       	rjmp	.+14     	; 0x2148 <vfprintf+0x1f6>
    213a:	60 81       	ld	r22, Z
    213c:	71 81       	ldd	r23, Z+1	; 0x01
    213e:	82 81       	ldd	r24, Z+2	; 0x02
    2140:	93 81       	ldd	r25, Z+3	; 0x03
    2142:	0c 5f       	subi	r16, 0xFC	; 252
    2144:	1f 4f       	sbci	r17, 0xFF	; 255
    2146:	08 c0       	rjmp	.+16     	; 0x2158 <vfprintf+0x206>
    2148:	60 81       	ld	r22, Z
    214a:	71 81       	ldd	r23, Z+1	; 0x01
    214c:	88 27       	eor	r24, r24
    214e:	77 fd       	sbrc	r23, 7
    2150:	80 95       	com	r24
    2152:	98 2f       	mov	r25, r24
    2154:	0e 5f       	subi	r16, 0xFE	; 254
    2156:	1f 4f       	sbci	r17, 0xFF	; 255
    2158:	2f 76       	andi	r18, 0x6F	; 111
    215a:	b2 2e       	mov	r11, r18
    215c:	97 ff       	sbrs	r25, 7
    215e:	09 c0       	rjmp	.+18     	; 0x2172 <vfprintf+0x220>
    2160:	90 95       	com	r25
    2162:	80 95       	com	r24
    2164:	70 95       	com	r23
    2166:	61 95       	neg	r22
    2168:	7f 4f       	sbci	r23, 0xFF	; 255
    216a:	8f 4f       	sbci	r24, 0xFF	; 255
    216c:	9f 4f       	sbci	r25, 0xFF	; 255
    216e:	20 68       	ori	r18, 0x80	; 128
    2170:	b2 2e       	mov	r11, r18
    2172:	2a e0       	ldi	r18, 0x0A	; 10
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	a4 01       	movw	r20, r8
    2178:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <__ultoa_invert>
    217c:	a8 2e       	mov	r10, r24
    217e:	a8 18       	sub	r10, r8
    2180:	44 c0       	rjmp	.+136    	; 0x220a <vfprintf+0x2b8>
    2182:	85 37       	cpi	r24, 0x75	; 117
    2184:	29 f4       	brne	.+10     	; 0x2190 <vfprintf+0x23e>
    2186:	2f 7e       	andi	r18, 0xEF	; 239
    2188:	b2 2e       	mov	r11, r18
    218a:	2a e0       	ldi	r18, 0x0A	; 10
    218c:	30 e0       	ldi	r19, 0x00	; 0
    218e:	25 c0       	rjmp	.+74     	; 0x21da <vfprintf+0x288>
    2190:	f2 2f       	mov	r31, r18
    2192:	f9 7f       	andi	r31, 0xF9	; 249
    2194:	bf 2e       	mov	r11, r31
    2196:	8f 36       	cpi	r24, 0x6F	; 111
    2198:	c1 f0       	breq	.+48     	; 0x21ca <vfprintf+0x278>
    219a:	18 f4       	brcc	.+6      	; 0x21a2 <vfprintf+0x250>
    219c:	88 35       	cpi	r24, 0x58	; 88
    219e:	79 f0       	breq	.+30     	; 0x21be <vfprintf+0x26c>
    21a0:	b4 c0       	rjmp	.+360    	; 0x230a <vfprintf+0x3b8>
    21a2:	80 37       	cpi	r24, 0x70	; 112
    21a4:	19 f0       	breq	.+6      	; 0x21ac <vfprintf+0x25a>
    21a6:	88 37       	cpi	r24, 0x78	; 120
    21a8:	21 f0       	breq	.+8      	; 0x21b2 <vfprintf+0x260>
    21aa:	af c0       	rjmp	.+350    	; 0x230a <vfprintf+0x3b8>
    21ac:	2f 2f       	mov	r18, r31
    21ae:	20 61       	ori	r18, 0x10	; 16
    21b0:	b2 2e       	mov	r11, r18
    21b2:	b4 fe       	sbrs	r11, 4
    21b4:	0d c0       	rjmp	.+26     	; 0x21d0 <vfprintf+0x27e>
    21b6:	8b 2d       	mov	r24, r11
    21b8:	84 60       	ori	r24, 0x04	; 4
    21ba:	b8 2e       	mov	r11, r24
    21bc:	09 c0       	rjmp	.+18     	; 0x21d0 <vfprintf+0x27e>
    21be:	24 ff       	sbrs	r18, 4
    21c0:	0a c0       	rjmp	.+20     	; 0x21d6 <vfprintf+0x284>
    21c2:	9f 2f       	mov	r25, r31
    21c4:	96 60       	ori	r25, 0x06	; 6
    21c6:	b9 2e       	mov	r11, r25
    21c8:	06 c0       	rjmp	.+12     	; 0x21d6 <vfprintf+0x284>
    21ca:	28 e0       	ldi	r18, 0x08	; 8
    21cc:	30 e0       	ldi	r19, 0x00	; 0
    21ce:	05 c0       	rjmp	.+10     	; 0x21da <vfprintf+0x288>
    21d0:	20 e1       	ldi	r18, 0x10	; 16
    21d2:	30 e0       	ldi	r19, 0x00	; 0
    21d4:	02 c0       	rjmp	.+4      	; 0x21da <vfprintf+0x288>
    21d6:	20 e1       	ldi	r18, 0x10	; 16
    21d8:	32 e0       	ldi	r19, 0x02	; 2
    21da:	f8 01       	movw	r30, r16
    21dc:	b7 fe       	sbrs	r11, 7
    21de:	07 c0       	rjmp	.+14     	; 0x21ee <vfprintf+0x29c>
    21e0:	60 81       	ld	r22, Z
    21e2:	71 81       	ldd	r23, Z+1	; 0x01
    21e4:	82 81       	ldd	r24, Z+2	; 0x02
    21e6:	93 81       	ldd	r25, Z+3	; 0x03
    21e8:	0c 5f       	subi	r16, 0xFC	; 252
    21ea:	1f 4f       	sbci	r17, 0xFF	; 255
    21ec:	06 c0       	rjmp	.+12     	; 0x21fa <vfprintf+0x2a8>
    21ee:	60 81       	ld	r22, Z
    21f0:	71 81       	ldd	r23, Z+1	; 0x01
    21f2:	80 e0       	ldi	r24, 0x00	; 0
    21f4:	90 e0       	ldi	r25, 0x00	; 0
    21f6:	0e 5f       	subi	r16, 0xFE	; 254
    21f8:	1f 4f       	sbci	r17, 0xFF	; 255
    21fa:	a4 01       	movw	r20, r8
    21fc:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <__ultoa_invert>
    2200:	a8 2e       	mov	r10, r24
    2202:	a8 18       	sub	r10, r8
    2204:	fb 2d       	mov	r31, r11
    2206:	ff 77       	andi	r31, 0x7F	; 127
    2208:	bf 2e       	mov	r11, r31
    220a:	b6 fe       	sbrs	r11, 6
    220c:	0b c0       	rjmp	.+22     	; 0x2224 <vfprintf+0x2d2>
    220e:	2b 2d       	mov	r18, r11
    2210:	2e 7f       	andi	r18, 0xFE	; 254
    2212:	a5 14       	cp	r10, r5
    2214:	50 f4       	brcc	.+20     	; 0x222a <vfprintf+0x2d8>
    2216:	b4 fe       	sbrs	r11, 4
    2218:	0a c0       	rjmp	.+20     	; 0x222e <vfprintf+0x2dc>
    221a:	b2 fc       	sbrc	r11, 2
    221c:	08 c0       	rjmp	.+16     	; 0x222e <vfprintf+0x2dc>
    221e:	2b 2d       	mov	r18, r11
    2220:	2e 7e       	andi	r18, 0xEE	; 238
    2222:	05 c0       	rjmp	.+10     	; 0x222e <vfprintf+0x2dc>
    2224:	7a 2c       	mov	r7, r10
    2226:	2b 2d       	mov	r18, r11
    2228:	03 c0       	rjmp	.+6      	; 0x2230 <vfprintf+0x2de>
    222a:	7a 2c       	mov	r7, r10
    222c:	01 c0       	rjmp	.+2      	; 0x2230 <vfprintf+0x2de>
    222e:	75 2c       	mov	r7, r5
    2230:	24 ff       	sbrs	r18, 4
    2232:	0d c0       	rjmp	.+26     	; 0x224e <vfprintf+0x2fc>
    2234:	fe 01       	movw	r30, r28
    2236:	ea 0d       	add	r30, r10
    2238:	f1 1d       	adc	r31, r1
    223a:	80 81       	ld	r24, Z
    223c:	80 33       	cpi	r24, 0x30	; 48
    223e:	11 f4       	brne	.+4      	; 0x2244 <vfprintf+0x2f2>
    2240:	29 7e       	andi	r18, 0xE9	; 233
    2242:	09 c0       	rjmp	.+18     	; 0x2256 <vfprintf+0x304>
    2244:	22 ff       	sbrs	r18, 2
    2246:	06 c0       	rjmp	.+12     	; 0x2254 <vfprintf+0x302>
    2248:	73 94       	inc	r7
    224a:	73 94       	inc	r7
    224c:	04 c0       	rjmp	.+8      	; 0x2256 <vfprintf+0x304>
    224e:	82 2f       	mov	r24, r18
    2250:	86 78       	andi	r24, 0x86	; 134
    2252:	09 f0       	breq	.+2      	; 0x2256 <vfprintf+0x304>
    2254:	73 94       	inc	r7
    2256:	23 fd       	sbrc	r18, 3
    2258:	13 c0       	rjmp	.+38     	; 0x2280 <vfprintf+0x32e>
    225a:	20 ff       	sbrs	r18, 0
    225c:	06 c0       	rjmp	.+12     	; 0x226a <vfprintf+0x318>
    225e:	5a 2c       	mov	r5, r10
    2260:	73 14       	cp	r7, r3
    2262:	18 f4       	brcc	.+6      	; 0x226a <vfprintf+0x318>
    2264:	53 0c       	add	r5, r3
    2266:	57 18       	sub	r5, r7
    2268:	73 2c       	mov	r7, r3
    226a:	73 14       	cp	r7, r3
    226c:	68 f4       	brcc	.+26     	; 0x2288 <vfprintf+0x336>
    226e:	b7 01       	movw	r22, r14
    2270:	80 e2       	ldi	r24, 0x20	; 32
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	2c 87       	std	Y+12, r18	; 0x0c
    2276:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    227a:	73 94       	inc	r7
    227c:	2c 85       	ldd	r18, Y+12	; 0x0c
    227e:	f5 cf       	rjmp	.-22     	; 0x226a <vfprintf+0x318>
    2280:	73 14       	cp	r7, r3
    2282:	10 f4       	brcc	.+4      	; 0x2288 <vfprintf+0x336>
    2284:	37 18       	sub	r3, r7
    2286:	01 c0       	rjmp	.+2      	; 0x228a <vfprintf+0x338>
    2288:	31 2c       	mov	r3, r1
    228a:	24 ff       	sbrs	r18, 4
    228c:	12 c0       	rjmp	.+36     	; 0x22b2 <vfprintf+0x360>
    228e:	b7 01       	movw	r22, r14
    2290:	80 e3       	ldi	r24, 0x30	; 48
    2292:	90 e0       	ldi	r25, 0x00	; 0
    2294:	2c 87       	std	Y+12, r18	; 0x0c
    2296:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    229a:	2c 85       	ldd	r18, Y+12	; 0x0c
    229c:	22 ff       	sbrs	r18, 2
    229e:	17 c0       	rjmp	.+46     	; 0x22ce <vfprintf+0x37c>
    22a0:	21 ff       	sbrs	r18, 1
    22a2:	03 c0       	rjmp	.+6      	; 0x22aa <vfprintf+0x358>
    22a4:	88 e5       	ldi	r24, 0x58	; 88
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	02 c0       	rjmp	.+4      	; 0x22ae <vfprintf+0x35c>
    22aa:	88 e7       	ldi	r24, 0x78	; 120
    22ac:	90 e0       	ldi	r25, 0x00	; 0
    22ae:	b7 01       	movw	r22, r14
    22b0:	0c c0       	rjmp	.+24     	; 0x22ca <vfprintf+0x378>
    22b2:	82 2f       	mov	r24, r18
    22b4:	86 78       	andi	r24, 0x86	; 134
    22b6:	59 f0       	breq	.+22     	; 0x22ce <vfprintf+0x37c>
    22b8:	21 fd       	sbrc	r18, 1
    22ba:	02 c0       	rjmp	.+4      	; 0x22c0 <vfprintf+0x36e>
    22bc:	80 e2       	ldi	r24, 0x20	; 32
    22be:	01 c0       	rjmp	.+2      	; 0x22c2 <vfprintf+0x370>
    22c0:	8b e2       	ldi	r24, 0x2B	; 43
    22c2:	27 fd       	sbrc	r18, 7
    22c4:	8d e2       	ldi	r24, 0x2D	; 45
    22c6:	b7 01       	movw	r22, r14
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    22ce:	a5 14       	cp	r10, r5
    22d0:	38 f4       	brcc	.+14     	; 0x22e0 <vfprintf+0x38e>
    22d2:	b7 01       	movw	r22, r14
    22d4:	80 e3       	ldi	r24, 0x30	; 48
    22d6:	90 e0       	ldi	r25, 0x00	; 0
    22d8:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    22dc:	5a 94       	dec	r5
    22de:	f7 cf       	rjmp	.-18     	; 0x22ce <vfprintf+0x37c>
    22e0:	aa 94       	dec	r10
    22e2:	f4 01       	movw	r30, r8
    22e4:	ea 0d       	add	r30, r10
    22e6:	f1 1d       	adc	r31, r1
    22e8:	80 81       	ld	r24, Z
    22ea:	b7 01       	movw	r22, r14
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    22f2:	a1 10       	cpse	r10, r1
    22f4:	f5 cf       	rjmp	.-22     	; 0x22e0 <vfprintf+0x38e>
    22f6:	33 20       	and	r3, r3
    22f8:	09 f4       	brne	.+2      	; 0x22fc <vfprintf+0x3aa>
    22fa:	51 ce       	rjmp	.-862    	; 0x1f9e <vfprintf+0x4c>
    22fc:	b7 01       	movw	r22, r14
    22fe:	80 e2       	ldi	r24, 0x20	; 32
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	0e 94 02 15 	call	0x2a04	; 0x2a04 <fputc>
    2306:	3a 94       	dec	r3
    2308:	f6 cf       	rjmp	.-20     	; 0x22f6 <vfprintf+0x3a4>
    230a:	f7 01       	movw	r30, r14
    230c:	86 81       	ldd	r24, Z+6	; 0x06
    230e:	97 81       	ldd	r25, Z+7	; 0x07
    2310:	02 c0       	rjmp	.+4      	; 0x2316 <vfprintf+0x3c4>
    2312:	8f ef       	ldi	r24, 0xFF	; 255
    2314:	9f ef       	ldi	r25, 0xFF	; 255
    2316:	2c 96       	adiw	r28, 0x0c	; 12
    2318:	0f b6       	in	r0, 0x3f	; 63
    231a:	f8 94       	cli
    231c:	de bf       	out	0x3e, r29	; 62
    231e:	0f be       	out	0x3f, r0	; 63
    2320:	cd bf       	out	0x3d, r28	; 61
    2322:	df 91       	pop	r29
    2324:	cf 91       	pop	r28
    2326:	1f 91       	pop	r17
    2328:	0f 91       	pop	r16
    232a:	ff 90       	pop	r15
    232c:	ef 90       	pop	r14
    232e:	df 90       	pop	r13
    2330:	cf 90       	pop	r12
    2332:	bf 90       	pop	r11
    2334:	af 90       	pop	r10
    2336:	9f 90       	pop	r9
    2338:	8f 90       	pop	r8
    233a:	7f 90       	pop	r7
    233c:	6f 90       	pop	r6
    233e:	5f 90       	pop	r5
    2340:	4f 90       	pop	r4
    2342:	3f 90       	pop	r3
    2344:	2f 90       	pop	r2
    2346:	08 95       	ret

00002348 <putval>:
    2348:	20 fd       	sbrc	r18, 0
    234a:	09 c0       	rjmp	.+18     	; 0x235e <putval+0x16>
    234c:	fc 01       	movw	r30, r24
    234e:	23 fd       	sbrc	r18, 3
    2350:	05 c0       	rjmp	.+10     	; 0x235c <putval+0x14>
    2352:	22 ff       	sbrs	r18, 2
    2354:	02 c0       	rjmp	.+4      	; 0x235a <putval+0x12>
    2356:	73 83       	std	Z+3, r23	; 0x03
    2358:	62 83       	std	Z+2, r22	; 0x02
    235a:	51 83       	std	Z+1, r21	; 0x01
    235c:	40 83       	st	Z, r20
    235e:	08 95       	ret

00002360 <mulacc>:
    2360:	44 fd       	sbrc	r20, 4
    2362:	10 c0       	rjmp	.+32     	; 0x2384 <mulacc+0x24>
    2364:	46 fd       	sbrc	r20, 6
    2366:	10 c0       	rjmp	.+32     	; 0x2388 <mulacc+0x28>
    2368:	db 01       	movw	r26, r22
    236a:	fc 01       	movw	r30, r24
    236c:	aa 0f       	add	r26, r26
    236e:	bb 1f       	adc	r27, r27
    2370:	ee 1f       	adc	r30, r30
    2372:	ff 1f       	adc	r31, r31
    2374:	10 94       	com	r1
    2376:	d1 f7       	brne	.-12     	; 0x236c <mulacc+0xc>
    2378:	6a 0f       	add	r22, r26
    237a:	7b 1f       	adc	r23, r27
    237c:	8e 1f       	adc	r24, r30
    237e:	9f 1f       	adc	r25, r31
    2380:	31 e0       	ldi	r19, 0x01	; 1
    2382:	03 c0       	rjmp	.+6      	; 0x238a <mulacc+0x2a>
    2384:	33 e0       	ldi	r19, 0x03	; 3
    2386:	01 c0       	rjmp	.+2      	; 0x238a <mulacc+0x2a>
    2388:	34 e0       	ldi	r19, 0x04	; 4
    238a:	66 0f       	add	r22, r22
    238c:	77 1f       	adc	r23, r23
    238e:	88 1f       	adc	r24, r24
    2390:	99 1f       	adc	r25, r25
    2392:	31 50       	subi	r19, 0x01	; 1
    2394:	d1 f7       	brne	.-12     	; 0x238a <mulacc+0x2a>
    2396:	62 0f       	add	r22, r18
    2398:	71 1d       	adc	r23, r1
    239a:	81 1d       	adc	r24, r1
    239c:	91 1d       	adc	r25, r1
    239e:	08 95       	ret

000023a0 <skip_spaces>:
    23a0:	0f 93       	push	r16
    23a2:	1f 93       	push	r17
    23a4:	cf 93       	push	r28
    23a6:	df 93       	push	r29
    23a8:	8c 01       	movw	r16, r24
    23aa:	c8 01       	movw	r24, r16
    23ac:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    23b0:	ec 01       	movw	r28, r24
    23b2:	97 fd       	sbrc	r25, 7
    23b4:	08 c0       	rjmp	.+16     	; 0x23c6 <skip_spaces+0x26>
    23b6:	0e 94 94 14 	call	0x2928	; 0x2928 <isspace>
    23ba:	89 2b       	or	r24, r25
    23bc:	b1 f7       	brne	.-20     	; 0x23aa <skip_spaces+0xa>
    23be:	b8 01       	movw	r22, r16
    23c0:	ce 01       	movw	r24, r28
    23c2:	0e 94 34 15 	call	0x2a68	; 0x2a68 <ungetc>
    23c6:	ce 01       	movw	r24, r28
    23c8:	df 91       	pop	r29
    23ca:	cf 91       	pop	r28
    23cc:	1f 91       	pop	r17
    23ce:	0f 91       	pop	r16
    23d0:	08 95       	ret

000023d2 <conv_int>:
    23d2:	8f 92       	push	r8
    23d4:	9f 92       	push	r9
    23d6:	af 92       	push	r10
    23d8:	cf 92       	push	r12
    23da:	df 92       	push	r13
    23dc:	ef 92       	push	r14
    23de:	ff 92       	push	r15
    23e0:	0f 93       	push	r16
    23e2:	1f 93       	push	r17
    23e4:	cf 93       	push	r28
    23e6:	df 93       	push	r29
    23e8:	ec 01       	movw	r28, r24
    23ea:	a6 2e       	mov	r10, r22
    23ec:	4a 01       	movw	r8, r20
    23ee:	02 2f       	mov	r16, r18
    23f0:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    23f4:	ac 01       	movw	r20, r24
    23f6:	55 27       	eor	r21, r21
    23f8:	4b 32       	cpi	r20, 0x2B	; 43
    23fa:	51 05       	cpc	r21, r1
    23fc:	21 f0       	breq	.+8      	; 0x2406 <conv_int+0x34>
    23fe:	4d 32       	cpi	r20, 0x2D	; 45
    2400:	51 05       	cpc	r21, r1
    2402:	51 f4       	brne	.+20     	; 0x2418 <conv_int+0x46>
    2404:	00 68       	ori	r16, 0x80	; 128
    2406:	aa 94       	dec	r10
    2408:	11 f4       	brne	.+4      	; 0x240e <conv_int+0x3c>
    240a:	80 e0       	ldi	r24, 0x00	; 0
    240c:	67 c0       	rjmp	.+206    	; 0x24dc <conv_int+0x10a>
    240e:	ce 01       	movw	r24, r28
    2410:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    2414:	97 fd       	sbrc	r25, 7
    2416:	f9 cf       	rjmp	.-14     	; 0x240a <conv_int+0x38>
    2418:	10 2f       	mov	r17, r16
    241a:	1d 7f       	andi	r17, 0xFD	; 253
    241c:	30 2f       	mov	r19, r16
    241e:	30 73       	andi	r19, 0x30	; 48
    2420:	01 f5       	brne	.+64     	; 0x2462 <conv_int+0x90>
    2422:	80 33       	cpi	r24, 0x30	; 48
    2424:	f1 f4       	brne	.+60     	; 0x2462 <conv_int+0x90>
    2426:	ff 24       	eor	r15, r15
    2428:	fa 94       	dec	r15
    242a:	fa 0c       	add	r15, r10
    242c:	09 f4       	brne	.+2      	; 0x2430 <conv_int+0x5e>
    242e:	42 c0       	rjmp	.+132    	; 0x24b4 <conv_int+0xe2>
    2430:	ce 01       	movw	r24, r28
    2432:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    2436:	97 fd       	sbrc	r25, 7
    2438:	3d c0       	rjmp	.+122    	; 0x24b4 <conv_int+0xe2>
    243a:	38 2f       	mov	r19, r24
    243c:	3f 7d       	andi	r19, 0xDF	; 223
    243e:	38 35       	cpi	r19, 0x58	; 88
    2440:	51 f4       	brne	.+20     	; 0x2456 <conv_int+0x84>
    2442:	12 64       	ori	r17, 0x42	; 66
    2444:	aa 94       	dec	r10
    2446:	aa 94       	dec	r10
    2448:	a9 f1       	breq	.+106    	; 0x24b4 <conv_int+0xe2>
    244a:	ce 01       	movw	r24, r28
    244c:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    2450:	97 ff       	sbrs	r25, 7
    2452:	07 c0       	rjmp	.+14     	; 0x2462 <conv_int+0x90>
    2454:	2f c0       	rjmp	.+94     	; 0x24b4 <conv_int+0xe2>
    2456:	06 ff       	sbrs	r16, 6
    2458:	02 c0       	rjmp	.+4      	; 0x245e <conv_int+0x8c>
    245a:	12 60       	ori	r17, 0x02	; 2
    245c:	01 c0       	rjmp	.+2      	; 0x2460 <conv_int+0x8e>
    245e:	12 61       	ori	r17, 0x12	; 18
    2460:	af 2c       	mov	r10, r15
    2462:	c1 2c       	mov	r12, r1
    2464:	d1 2c       	mov	r13, r1
    2466:	76 01       	movw	r14, r12
    2468:	20 ed       	ldi	r18, 0xD0	; 208
    246a:	28 0f       	add	r18, r24
    246c:	28 30       	cpi	r18, 0x08	; 8
    246e:	80 f0       	brcs	.+32     	; 0x2490 <conv_int+0xbe>
    2470:	14 ff       	sbrs	r17, 4
    2472:	04 c0       	rjmp	.+8      	; 0x247c <conv_int+0xaa>
    2474:	be 01       	movw	r22, r28
    2476:	0e 94 34 15 	call	0x2a68	; 0x2a68 <ungetc>
    247a:	19 c0       	rjmp	.+50     	; 0x24ae <conv_int+0xdc>
    247c:	2a 30       	cpi	r18, 0x0A	; 10
    247e:	40 f0       	brcs	.+16     	; 0x2490 <conv_int+0xbe>
    2480:	16 ff       	sbrs	r17, 6
    2482:	f8 cf       	rjmp	.-16     	; 0x2474 <conv_int+0xa2>
    2484:	2f 7d       	andi	r18, 0xDF	; 223
    2486:	3f ee       	ldi	r19, 0xEF	; 239
    2488:	32 0f       	add	r19, r18
    248a:	36 30       	cpi	r19, 0x06	; 6
    248c:	98 f7       	brcc	.-26     	; 0x2474 <conv_int+0xa2>
    248e:	27 50       	subi	r18, 0x07	; 7
    2490:	41 2f       	mov	r20, r17
    2492:	c7 01       	movw	r24, r14
    2494:	b6 01       	movw	r22, r12
    2496:	0e 94 b0 11 	call	0x2360	; 0x2360 <mulacc>
    249a:	6b 01       	movw	r12, r22
    249c:	7c 01       	movw	r14, r24
    249e:	12 60       	ori	r17, 0x02	; 2
    24a0:	aa 94       	dec	r10
    24a2:	59 f0       	breq	.+22     	; 0x24ba <conv_int+0xe8>
    24a4:	ce 01       	movw	r24, r28
    24a6:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    24aa:	97 ff       	sbrs	r25, 7
    24ac:	dd cf       	rjmp	.-70     	; 0x2468 <conv_int+0x96>
    24ae:	11 fd       	sbrc	r17, 1
    24b0:	04 c0       	rjmp	.+8      	; 0x24ba <conv_int+0xe8>
    24b2:	ab cf       	rjmp	.-170    	; 0x240a <conv_int+0x38>
    24b4:	c1 2c       	mov	r12, r1
    24b6:	d1 2c       	mov	r13, r1
    24b8:	76 01       	movw	r14, r12
    24ba:	17 ff       	sbrs	r17, 7
    24bc:	08 c0       	rjmp	.+16     	; 0x24ce <conv_int+0xfc>
    24be:	f0 94       	com	r15
    24c0:	e0 94       	com	r14
    24c2:	d0 94       	com	r13
    24c4:	c0 94       	com	r12
    24c6:	c1 1c       	adc	r12, r1
    24c8:	d1 1c       	adc	r13, r1
    24ca:	e1 1c       	adc	r14, r1
    24cc:	f1 1c       	adc	r15, r1
    24ce:	21 2f       	mov	r18, r17
    24d0:	b7 01       	movw	r22, r14
    24d2:	a6 01       	movw	r20, r12
    24d4:	c4 01       	movw	r24, r8
    24d6:	0e 94 a4 11 	call	0x2348	; 0x2348 <putval>
    24da:	81 e0       	ldi	r24, 0x01	; 1
    24dc:	df 91       	pop	r29
    24de:	cf 91       	pop	r28
    24e0:	1f 91       	pop	r17
    24e2:	0f 91       	pop	r16
    24e4:	ff 90       	pop	r15
    24e6:	ef 90       	pop	r14
    24e8:	df 90       	pop	r13
    24ea:	cf 90       	pop	r12
    24ec:	af 90       	pop	r10
    24ee:	9f 90       	pop	r9
    24f0:	8f 90       	pop	r8
    24f2:	08 95       	ret

000024f4 <conv_brk>:
    24f4:	7f 92       	push	r7
    24f6:	8f 92       	push	r8
    24f8:	9f 92       	push	r9
    24fa:	af 92       	push	r10
    24fc:	bf 92       	push	r11
    24fe:	cf 92       	push	r12
    2500:	df 92       	push	r13
    2502:	ef 92       	push	r14
    2504:	ff 92       	push	r15
    2506:	0f 93       	push	r16
    2508:	1f 93       	push	r17
    250a:	cf 93       	push	r28
    250c:	df 93       	push	r29
    250e:	cd b7       	in	r28, 0x3d	; 61
    2510:	de b7       	in	r29, 0x3e	; 62
    2512:	a1 97       	sbiw	r28, 0x21	; 33
    2514:	0f b6       	in	r0, 0x3f	; 63
    2516:	f8 94       	cli
    2518:	de bf       	out	0x3e, r29	; 62
    251a:	0f be       	out	0x3f, r0	; 63
    251c:	cd bf       	out	0x3d, r28	; 61
    251e:	5c 01       	movw	r10, r24
    2520:	7a 01       	movw	r14, r20
    2522:	8e 01       	movw	r16, r28
    2524:	0f 5f       	subi	r16, 0xFF	; 255
    2526:	1f 4f       	sbci	r17, 0xFF	; 255
    2528:	68 01       	movw	r12, r16
    252a:	80 e2       	ldi	r24, 0x20	; 32
    252c:	d8 01       	movw	r26, r16
    252e:	1d 92       	st	X+, r1
    2530:	8a 95       	dec	r24
    2532:	e9 f7       	brne	.-6      	; 0x252e <conv_brk+0x3a>
    2534:	f5 01       	movw	r30, r10
    2536:	73 80       	ldd	r7, Z+3	; 0x03
    2538:	40 e0       	ldi	r20, 0x00	; 0
    253a:	50 e0       	ldi	r21, 0x00	; 0
    253c:	81 2c       	mov	r8, r1
    253e:	b0 e0       	ldi	r27, 0x00	; 0
    2540:	91 2c       	mov	r9, r1
    2542:	81 e0       	ldi	r24, 0x01	; 1
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	f9 01       	movw	r30, r18
    2548:	73 fc       	sbrc	r7, 3
    254a:	a5 91       	lpm	r26, Z+
    254c:	73 fe       	sbrs	r7, 3
    254e:	a1 91       	ld	r26, Z+
    2550:	8f 01       	movw	r16, r30
    2552:	7a 2f       	mov	r23, r26
    2554:	9f 01       	movw	r18, r30
    2556:	a1 11       	cpse	r26, r1
    2558:	03 c0       	rjmp	.+6      	; 0x2560 <conv_brk+0x6c>
    255a:	80 e0       	ldi	r24, 0x00	; 0
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	7d c0       	rjmp	.+250    	; 0x265a <conv_brk+0x166>
    2560:	ae 35       	cpi	r26, 0x5E	; 94
    2562:	19 f4       	brne	.+6      	; 0x256a <conv_brk+0x76>
    2564:	41 15       	cp	r20, r1
    2566:	51 05       	cpc	r21, r1
    2568:	59 f1       	breq	.+86     	; 0x25c0 <conv_brk+0xcc>
    256a:	e9 2d       	mov	r30, r9
    256c:	f0 e0       	ldi	r31, 0x00	; 0
    256e:	e4 17       	cp	r30, r20
    2570:	f5 07       	cpc	r31, r21
    2572:	3c f4       	brge	.+14     	; 0x2582 <conv_brk+0x8e>
    2574:	ad 35       	cpi	r26, 0x5D	; 93
    2576:	69 f1       	breq	.+90     	; 0x25d2 <conv_brk+0xde>
    2578:	ad 32       	cpi	r26, 0x2D	; 45
    257a:	19 f4       	brne	.+6      	; 0x2582 <conv_brk+0x8e>
    257c:	bb 23       	and	r27, r27
    257e:	19 f1       	breq	.+70     	; 0x25c6 <conv_brk+0xd2>
    2580:	03 c0       	rjmp	.+6      	; 0x2588 <conv_brk+0x94>
    2582:	b1 11       	cpse	r27, r1
    2584:	01 c0       	rjmp	.+2      	; 0x2588 <conv_brk+0x94>
    2586:	8a 2e       	mov	r8, r26
    2588:	e7 2f       	mov	r30, r23
    258a:	e6 95       	lsr	r30
    258c:	e6 95       	lsr	r30
    258e:	e6 95       	lsr	r30
    2590:	86 01       	movw	r16, r12
    2592:	0e 0f       	add	r16, r30
    2594:	11 1d       	adc	r17, r1
    2596:	f8 01       	movw	r30, r16
    2598:	a7 2f       	mov	r26, r23
    259a:	a7 70       	andi	r26, 0x07	; 7
    259c:	8c 01       	movw	r16, r24
    259e:	02 c0       	rjmp	.+4      	; 0x25a4 <conv_brk+0xb0>
    25a0:	00 0f       	add	r16, r16
    25a2:	11 1f       	adc	r17, r17
    25a4:	aa 95       	dec	r26
    25a6:	e2 f7       	brpl	.-8      	; 0x25a0 <conv_brk+0xac>
    25a8:	d8 01       	movw	r26, r16
    25aa:	b0 81       	ld	r27, Z
    25ac:	ba 2b       	or	r27, r26
    25ae:	b0 83       	st	Z, r27
    25b0:	78 15       	cp	r23, r8
    25b2:	59 f0       	breq	.+22     	; 0x25ca <conv_brk+0xd6>
    25b4:	78 15       	cp	r23, r8
    25b6:	10 f4       	brcc	.+4      	; 0x25bc <conv_brk+0xc8>
    25b8:	7f 5f       	subi	r23, 0xFF	; 255
    25ba:	e6 cf       	rjmp	.-52     	; 0x2588 <conv_brk+0x94>
    25bc:	71 50       	subi	r23, 0x01	; 1
    25be:	e4 cf       	rjmp	.-56     	; 0x2588 <conv_brk+0x94>
    25c0:	99 24       	eor	r9, r9
    25c2:	93 94       	inc	r9
    25c4:	03 c0       	rjmp	.+6      	; 0x25cc <conv_brk+0xd8>
    25c6:	b1 e0       	ldi	r27, 0x01	; 1
    25c8:	01 c0       	rjmp	.+2      	; 0x25cc <conv_brk+0xd8>
    25ca:	b0 e0       	ldi	r27, 0x00	; 0
    25cc:	4f 5f       	subi	r20, 0xFF	; 255
    25ce:	5f 4f       	sbci	r21, 0xFF	; 255
    25d0:	ba cf       	rjmp	.-140    	; 0x2546 <conv_brk+0x52>
    25d2:	bb 23       	and	r27, r27
    25d4:	19 f0       	breq	.+6      	; 0x25dc <conv_brk+0xe8>
    25d6:	8e 81       	ldd	r24, Y+6	; 0x06
    25d8:	80 62       	ori	r24, 0x20	; 32
    25da:	8e 83       	std	Y+6, r24	; 0x06
    25dc:	91 10       	cpse	r9, r1
    25de:	03 c0       	rjmp	.+6      	; 0x25e6 <conv_brk+0xf2>
    25e0:	99 24       	eor	r9, r9
    25e2:	93 94       	inc	r9
    25e4:	15 c0       	rjmp	.+42     	; 0x2610 <conv_brk+0x11c>
    25e6:	f6 01       	movw	r30, r12
    25e8:	ce 01       	movw	r24, r28
    25ea:	81 96       	adiw	r24, 0x21	; 33
    25ec:	20 81       	ld	r18, Z
    25ee:	20 95       	com	r18
    25f0:	21 93       	st	Z+, r18
    25f2:	e8 17       	cp	r30, r24
    25f4:	f9 07       	cpc	r31, r25
    25f6:	d1 f7       	brne	.-12     	; 0x25ec <conv_brk+0xf8>
    25f8:	f3 cf       	rjmp	.-26     	; 0x25e0 <conv_brk+0xec>
    25fa:	e1 14       	cp	r14, r1
    25fc:	f1 04       	cpc	r15, r1
    25fe:	29 f0       	breq	.+10     	; 0x260a <conv_brk+0x116>
    2600:	d7 01       	movw	r26, r14
    2602:	8c 93       	st	X, r24
    2604:	f7 01       	movw	r30, r14
    2606:	31 96       	adiw	r30, 0x01	; 1
    2608:	7f 01       	movw	r14, r30
    260a:	61 50       	subi	r22, 0x01	; 1
    260c:	01 f1       	breq	.+64     	; 0x264e <conv_brk+0x15a>
    260e:	91 2c       	mov	r9, r1
    2610:	c5 01       	movw	r24, r10
    2612:	69 a3       	std	Y+33, r22	; 0x21
    2614:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    2618:	69 a1       	ldd	r22, Y+33	; 0x21
    261a:	97 fd       	sbrc	r25, 7
    261c:	16 c0       	rjmp	.+44     	; 0x264a <conv_brk+0x156>
    261e:	28 2f       	mov	r18, r24
    2620:	26 95       	lsr	r18
    2622:	26 95       	lsr	r18
    2624:	26 95       	lsr	r18
    2626:	f6 01       	movw	r30, r12
    2628:	e2 0f       	add	r30, r18
    262a:	f1 1d       	adc	r31, r1
    262c:	20 81       	ld	r18, Z
    262e:	30 e0       	ldi	r19, 0x00	; 0
    2630:	ac 01       	movw	r20, r24
    2632:	47 70       	andi	r20, 0x07	; 7
    2634:	55 27       	eor	r21, r21
    2636:	02 c0       	rjmp	.+4      	; 0x263c <conv_brk+0x148>
    2638:	35 95       	asr	r19
    263a:	27 95       	ror	r18
    263c:	4a 95       	dec	r20
    263e:	e2 f7       	brpl	.-8      	; 0x2638 <conv_brk+0x144>
    2640:	20 fd       	sbrc	r18, 0
    2642:	db cf       	rjmp	.-74     	; 0x25fa <conv_brk+0x106>
    2644:	b5 01       	movw	r22, r10
    2646:	0e 94 34 15 	call	0x2a68	; 0x2a68 <ungetc>
    264a:	91 10       	cpse	r9, r1
    264c:	86 cf       	rjmp	.-244    	; 0x255a <conv_brk+0x66>
    264e:	e1 14       	cp	r14, r1
    2650:	f1 04       	cpc	r15, r1
    2652:	11 f0       	breq	.+4      	; 0x2658 <conv_brk+0x164>
    2654:	d7 01       	movw	r26, r14
    2656:	1c 92       	st	X, r1
    2658:	c8 01       	movw	r24, r16
    265a:	a1 96       	adiw	r28, 0x21	; 33
    265c:	0f b6       	in	r0, 0x3f	; 63
    265e:	f8 94       	cli
    2660:	de bf       	out	0x3e, r29	; 62
    2662:	0f be       	out	0x3f, r0	; 63
    2664:	cd bf       	out	0x3d, r28	; 61
    2666:	df 91       	pop	r29
    2668:	cf 91       	pop	r28
    266a:	1f 91       	pop	r17
    266c:	0f 91       	pop	r16
    266e:	ff 90       	pop	r15
    2670:	ef 90       	pop	r14
    2672:	df 90       	pop	r13
    2674:	cf 90       	pop	r12
    2676:	bf 90       	pop	r11
    2678:	af 90       	pop	r10
    267a:	9f 90       	pop	r9
    267c:	8f 90       	pop	r8
    267e:	7f 90       	pop	r7
    2680:	08 95       	ret

00002682 <vfscanf>:
    2682:	4f 92       	push	r4
    2684:	5f 92       	push	r5
    2686:	7f 92       	push	r7
    2688:	8f 92       	push	r8
    268a:	9f 92       	push	r9
    268c:	af 92       	push	r10
    268e:	bf 92       	push	r11
    2690:	cf 92       	push	r12
    2692:	df 92       	push	r13
    2694:	ef 92       	push	r14
    2696:	ff 92       	push	r15
    2698:	0f 93       	push	r16
    269a:	1f 93       	push	r17
    269c:	cf 93       	push	r28
    269e:	df 93       	push	r29
    26a0:	1f 92       	push	r1
    26a2:	cd b7       	in	r28, 0x3d	; 61
    26a4:	de b7       	in	r29, 0x3e	; 62
    26a6:	8c 01       	movw	r16, r24
    26a8:	2b 01       	movw	r4, r22
    26aa:	7a 01       	movw	r14, r20
    26ac:	fc 01       	movw	r30, r24
    26ae:	17 82       	std	Z+7, r1	; 0x07
    26b0:	16 82       	std	Z+6, r1	; 0x06
    26b2:	a1 2c       	mov	r10, r1
    26b4:	f8 01       	movw	r30, r16
    26b6:	d3 80       	ldd	r13, Z+3	; 0x03
    26b8:	f2 01       	movw	r30, r4
    26ba:	d3 fc       	sbrc	r13, 3
    26bc:	85 91       	lpm	r24, Z+
    26be:	d3 fe       	sbrs	r13, 3
    26c0:	81 91       	ld	r24, Z+
    26c2:	38 2f       	mov	r19, r24
    26c4:	2f 01       	movw	r4, r30
    26c6:	88 23       	and	r24, r24
    26c8:	09 f4       	brne	.+2      	; 0x26cc <vfscanf+0x4a>
    26ca:	fc c0       	rjmp	.+504    	; 0x28c4 <vfscanf+0x242>
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	39 83       	std	Y+1, r19	; 0x01
    26d0:	0e 94 94 14 	call	0x2928	; 0x2928 <isspace>
    26d4:	39 81       	ldd	r19, Y+1	; 0x01
    26d6:	89 2b       	or	r24, r25
    26d8:	21 f0       	breq	.+8      	; 0x26e2 <vfscanf+0x60>
    26da:	c8 01       	movw	r24, r16
    26dc:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <skip_spaces>
    26e0:	e9 cf       	rjmp	.-46     	; 0x26b4 <vfscanf+0x32>
    26e2:	35 32       	cpi	r19, 0x25	; 37
    26e4:	41 f4       	brne	.+16     	; 0x26f6 <vfscanf+0x74>
    26e6:	f2 01       	movw	r30, r4
    26e8:	d3 fc       	sbrc	r13, 3
    26ea:	35 91       	lpm	r19, Z+
    26ec:	d3 fe       	sbrs	r13, 3
    26ee:	31 91       	ld	r19, Z+
    26f0:	2f 01       	movw	r4, r30
    26f2:	35 32       	cpi	r19, 0x25	; 37
    26f4:	69 f4       	brne	.+26     	; 0x2710 <vfscanf+0x8e>
    26f6:	c8 01       	movw	r24, r16
    26f8:	39 83       	std	Y+1, r19	; 0x01
    26fa:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    26fe:	39 81       	ldd	r19, Y+1	; 0x01
    2700:	97 fd       	sbrc	r25, 7
    2702:	de c0       	rjmp	.+444    	; 0x28c0 <vfscanf+0x23e>
    2704:	38 17       	cp	r19, r24
    2706:	b1 f2       	breq	.-84     	; 0x26b4 <vfscanf+0x32>
    2708:	b8 01       	movw	r22, r16
    270a:	0e 94 34 15 	call	0x2a68	; 0x2a68 <ungetc>
    270e:	da c0       	rjmp	.+436    	; 0x28c4 <vfscanf+0x242>
    2710:	3a 32       	cpi	r19, 0x2A	; 42
    2712:	41 f4       	brne	.+16     	; 0x2724 <vfscanf+0xa2>
    2714:	d3 fc       	sbrc	r13, 3
    2716:	35 91       	lpm	r19, Z+
    2718:	d3 fe       	sbrs	r13, 3
    271a:	31 91       	ld	r19, Z+
    271c:	2f 01       	movw	r4, r30
    271e:	bb 24       	eor	r11, r11
    2720:	b3 94       	inc	r11
    2722:	01 c0       	rjmp	.+2      	; 0x2726 <vfscanf+0xa4>
    2724:	b1 2c       	mov	r11, r1
    2726:	71 2c       	mov	r7, r1
    2728:	20 ed       	ldi	r18, 0xD0	; 208
    272a:	23 0f       	add	r18, r19
    272c:	2a 30       	cpi	r18, 0x0A	; 10
    272e:	90 f4       	brcc	.+36     	; 0x2754 <vfscanf+0xd2>
    2730:	fb 2d       	mov	r31, r11
    2732:	f2 60       	ori	r31, 0x02	; 2
    2734:	bf 2e       	mov	r11, r31
    2736:	67 2d       	mov	r22, r7
    2738:	70 e0       	ldi	r23, 0x00	; 0
    273a:	80 e0       	ldi	r24, 0x00	; 0
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	40 e2       	ldi	r20, 0x20	; 32
    2740:	0e 94 b0 11 	call	0x2360	; 0x2360 <mulacc>
    2744:	76 2e       	mov	r7, r22
    2746:	f2 01       	movw	r30, r4
    2748:	d3 fc       	sbrc	r13, 3
    274a:	35 91       	lpm	r19, Z+
    274c:	d3 fe       	sbrs	r13, 3
    274e:	31 91       	ld	r19, Z+
    2750:	2f 01       	movw	r4, r30
    2752:	ea cf       	rjmp	.-44     	; 0x2728 <vfscanf+0xa6>
    2754:	b1 fe       	sbrs	r11, 1
    2756:	03 c0       	rjmp	.+6      	; 0x275e <vfscanf+0xdc>
    2758:	71 10       	cpse	r7, r1
    275a:	03 c0       	rjmp	.+6      	; 0x2762 <vfscanf+0xe0>
    275c:	b3 c0       	rjmp	.+358    	; 0x28c4 <vfscanf+0x242>
    275e:	77 24       	eor	r7, r7
    2760:	7a 94       	dec	r7
    2762:	38 36       	cpi	r19, 0x68	; 104
    2764:	19 f0       	breq	.+6      	; 0x276c <vfscanf+0xea>
    2766:	3c 36       	cpi	r19, 0x6C	; 108
    2768:	61 f0       	breq	.+24     	; 0x2782 <vfscanf+0x100>
    276a:	14 c0       	rjmp	.+40     	; 0x2794 <vfscanf+0x112>
    276c:	f2 01       	movw	r30, r4
    276e:	d3 fc       	sbrc	r13, 3
    2770:	35 91       	lpm	r19, Z+
    2772:	d3 fe       	sbrs	r13, 3
    2774:	31 91       	ld	r19, Z+
    2776:	2f 01       	movw	r4, r30
    2778:	38 36       	cpi	r19, 0x68	; 104
    277a:	61 f4       	brne	.+24     	; 0x2794 <vfscanf+0x112>
    277c:	fb 2d       	mov	r31, r11
    277e:	f8 60       	ori	r31, 0x08	; 8
    2780:	bf 2e       	mov	r11, r31
    2782:	8b 2d       	mov	r24, r11
    2784:	84 60       	ori	r24, 0x04	; 4
    2786:	b8 2e       	mov	r11, r24
    2788:	f2 01       	movw	r30, r4
    278a:	d3 fc       	sbrc	r13, 3
    278c:	35 91       	lpm	r19, Z+
    278e:	d3 fe       	sbrs	r13, 3
    2790:	31 91       	ld	r19, Z+
    2792:	2f 01       	movw	r4, r30
    2794:	33 23       	and	r19, r19
    2796:	09 f4       	brne	.+2      	; 0x279a <vfscanf+0x118>
    2798:	95 c0       	rjmp	.+298    	; 0x28c4 <vfscanf+0x242>
    279a:	63 2f       	mov	r22, r19
    279c:	70 e0       	ldi	r23, 0x00	; 0
    279e:	8c e8       	ldi	r24, 0x8C	; 140
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	39 83       	std	Y+1, r19	; 0x01
    27a4:	0e 94 9c 14 	call	0x2938	; 0x2938 <strchr_P>
    27a8:	39 81       	ldd	r19, Y+1	; 0x01
    27aa:	89 2b       	or	r24, r25
    27ac:	09 f4       	brne	.+2      	; 0x27b0 <vfscanf+0x12e>
    27ae:	8a c0       	rjmp	.+276    	; 0x28c4 <vfscanf+0x242>
    27b0:	b0 fc       	sbrc	r11, 0
    27b2:	07 c0       	rjmp	.+14     	; 0x27c2 <vfscanf+0x140>
    27b4:	f7 01       	movw	r30, r14
    27b6:	c0 80       	ld	r12, Z
    27b8:	d1 80       	ldd	r13, Z+1	; 0x01
    27ba:	c7 01       	movw	r24, r14
    27bc:	02 96       	adiw	r24, 0x02	; 2
    27be:	7c 01       	movw	r14, r24
    27c0:	02 c0       	rjmp	.+4      	; 0x27c6 <vfscanf+0x144>
    27c2:	c1 2c       	mov	r12, r1
    27c4:	d1 2c       	mov	r13, r1
    27c6:	3e 36       	cpi	r19, 0x6E	; 110
    27c8:	51 f4       	brne	.+20     	; 0x27de <vfscanf+0x15c>
    27ca:	f8 01       	movw	r30, r16
    27cc:	46 81       	ldd	r20, Z+6	; 0x06
    27ce:	57 81       	ldd	r21, Z+7	; 0x07
    27d0:	60 e0       	ldi	r22, 0x00	; 0
    27d2:	70 e0       	ldi	r23, 0x00	; 0
    27d4:	2b 2d       	mov	r18, r11
    27d6:	c6 01       	movw	r24, r12
    27d8:	0e 94 a4 11 	call	0x2348	; 0x2348 <putval>
    27dc:	6b cf       	rjmp	.-298    	; 0x26b4 <vfscanf+0x32>
    27de:	33 36       	cpi	r19, 0x63	; 99
    27e0:	a1 f4       	brne	.+40     	; 0x280a <vfscanf+0x188>
    27e2:	b1 fc       	sbrc	r11, 1
    27e4:	02 c0       	rjmp	.+4      	; 0x27ea <vfscanf+0x168>
    27e6:	77 24       	eor	r7, r7
    27e8:	73 94       	inc	r7
    27ea:	c8 01       	movw	r24, r16
    27ec:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    27f0:	97 fd       	sbrc	r25, 7
    27f2:	66 c0       	rjmp	.+204    	; 0x28c0 <vfscanf+0x23e>
    27f4:	c1 14       	cp	r12, r1
    27f6:	d1 04       	cpc	r13, r1
    27f8:	29 f0       	breq	.+10     	; 0x2804 <vfscanf+0x182>
    27fa:	f6 01       	movw	r30, r12
    27fc:	80 83       	st	Z, r24
    27fe:	c6 01       	movw	r24, r12
    2800:	01 96       	adiw	r24, 0x01	; 1
    2802:	6c 01       	movw	r12, r24
    2804:	7a 94       	dec	r7
    2806:	89 f7       	brne	.-30     	; 0x27ea <vfscanf+0x168>
    2808:	57 c0       	rjmp	.+174    	; 0x28b8 <vfscanf+0x236>
    280a:	3b 35       	cpi	r19, 0x5B	; 91
    280c:	59 f4       	brne	.+22     	; 0x2824 <vfscanf+0x1a2>
    280e:	92 01       	movw	r18, r4
    2810:	a6 01       	movw	r20, r12
    2812:	67 2d       	mov	r22, r7
    2814:	c8 01       	movw	r24, r16
    2816:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <conv_brk>
    281a:	2c 01       	movw	r4, r24
    281c:	00 97       	sbiw	r24, 0x00	; 0
    281e:	09 f0       	breq	.+2      	; 0x2822 <vfscanf+0x1a0>
    2820:	4b c0       	rjmp	.+150    	; 0x28b8 <vfscanf+0x236>
    2822:	45 c0       	rjmp	.+138    	; 0x28ae <vfscanf+0x22c>
    2824:	c8 01       	movw	r24, r16
    2826:	39 83       	std	Y+1, r19	; 0x01
    2828:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <skip_spaces>
    282c:	39 81       	ldd	r19, Y+1	; 0x01
    282e:	97 fd       	sbrc	r25, 7
    2830:	47 c0       	rjmp	.+142    	; 0x28c0 <vfscanf+0x23e>
    2832:	3f 36       	cpi	r19, 0x6F	; 111
    2834:	69 f1       	breq	.+90     	; 0x2890 <vfscanf+0x20e>
    2836:	28 f4       	brcc	.+10     	; 0x2842 <vfscanf+0x1c0>
    2838:	34 36       	cpi	r19, 0x64	; 100
    283a:	31 f1       	breq	.+76     	; 0x2888 <vfscanf+0x206>
    283c:	39 36       	cpi	r19, 0x69	; 105
    283e:	79 f1       	breq	.+94     	; 0x289e <vfscanf+0x21c>
    2840:	2b c0       	rjmp	.+86     	; 0x2898 <vfscanf+0x216>
    2842:	33 37       	cpi	r19, 0x73	; 115
    2844:	69 f0       	breq	.+26     	; 0x2860 <vfscanf+0x1de>
    2846:	35 37       	cpi	r19, 0x75	; 117
    2848:	f9 f0       	breq	.+62     	; 0x2888 <vfscanf+0x206>
    284a:	26 c0       	rjmp	.+76     	; 0x2898 <vfscanf+0x216>
    284c:	c1 14       	cp	r12, r1
    284e:	d1 04       	cpc	r13, r1
    2850:	29 f0       	breq	.+10     	; 0x285c <vfscanf+0x1da>
    2852:	f6 01       	movw	r30, r12
    2854:	80 82       	st	Z, r8
    2856:	c6 01       	movw	r24, r12
    2858:	01 96       	adiw	r24, 0x01	; 1
    285a:	6c 01       	movw	r12, r24
    285c:	7a 94       	dec	r7
    285e:	71 f0       	breq	.+28     	; 0x287c <vfscanf+0x1fa>
    2860:	c8 01       	movw	r24, r16
    2862:	0e 94 c4 14 	call	0x2988	; 0x2988 <fgetc>
    2866:	4c 01       	movw	r8, r24
    2868:	97 fd       	sbrc	r25, 7
    286a:	08 c0       	rjmp	.+16     	; 0x287c <vfscanf+0x1fa>
    286c:	0e 94 94 14 	call	0x2928	; 0x2928 <isspace>
    2870:	89 2b       	or	r24, r25
    2872:	61 f3       	breq	.-40     	; 0x284c <vfscanf+0x1ca>
    2874:	b8 01       	movw	r22, r16
    2876:	c4 01       	movw	r24, r8
    2878:	0e 94 34 15 	call	0x2a68	; 0x2a68 <ungetc>
    287c:	c1 14       	cp	r12, r1
    287e:	d1 04       	cpc	r13, r1
    2880:	d9 f0       	breq	.+54     	; 0x28b8 <vfscanf+0x236>
    2882:	f6 01       	movw	r30, r12
    2884:	10 82       	st	Z, r1
    2886:	18 c0       	rjmp	.+48     	; 0x28b8 <vfscanf+0x236>
    2888:	fb 2d       	mov	r31, r11
    288a:	f0 62       	ori	r31, 0x20	; 32
    288c:	bf 2e       	mov	r11, r31
    288e:	07 c0       	rjmp	.+14     	; 0x289e <vfscanf+0x21c>
    2890:	8b 2d       	mov	r24, r11
    2892:	80 61       	ori	r24, 0x10	; 16
    2894:	b8 2e       	mov	r11, r24
    2896:	03 c0       	rjmp	.+6      	; 0x289e <vfscanf+0x21c>
    2898:	9b 2d       	mov	r25, r11
    289a:	90 64       	ori	r25, 0x40	; 64
    289c:	b9 2e       	mov	r11, r25
    289e:	2b 2d       	mov	r18, r11
    28a0:	a6 01       	movw	r20, r12
    28a2:	67 2d       	mov	r22, r7
    28a4:	c8 01       	movw	r24, r16
    28a6:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <conv_int>
    28aa:	81 11       	cpse	r24, r1
    28ac:	05 c0       	rjmp	.+10     	; 0x28b8 <vfscanf+0x236>
    28ae:	f8 01       	movw	r30, r16
    28b0:	83 81       	ldd	r24, Z+3	; 0x03
    28b2:	80 73       	andi	r24, 0x30	; 48
    28b4:	29 f4       	brne	.+10     	; 0x28c0 <vfscanf+0x23e>
    28b6:	06 c0       	rjmp	.+12     	; 0x28c4 <vfscanf+0x242>
    28b8:	b0 fc       	sbrc	r11, 0
    28ba:	fc ce       	rjmp	.-520    	; 0x26b4 <vfscanf+0x32>
    28bc:	a3 94       	inc	r10
    28be:	fa ce       	rjmp	.-524    	; 0x26b4 <vfscanf+0x32>
    28c0:	aa 20       	and	r10, r10
    28c2:	19 f0       	breq	.+6      	; 0x28ca <vfscanf+0x248>
    28c4:	8a 2d       	mov	r24, r10
    28c6:	90 e0       	ldi	r25, 0x00	; 0
    28c8:	02 c0       	rjmp	.+4      	; 0x28ce <vfscanf+0x24c>
    28ca:	8f ef       	ldi	r24, 0xFF	; 255
    28cc:	9f ef       	ldi	r25, 0xFF	; 255
    28ce:	0f 90       	pop	r0
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	1f 91       	pop	r17
    28d6:	0f 91       	pop	r16
    28d8:	ff 90       	pop	r15
    28da:	ef 90       	pop	r14
    28dc:	df 90       	pop	r13
    28de:	cf 90       	pop	r12
    28e0:	bf 90       	pop	r11
    28e2:	af 90       	pop	r10
    28e4:	9f 90       	pop	r9
    28e6:	8f 90       	pop	r8
    28e8:	7f 90       	pop	r7
    28ea:	5f 90       	pop	r5
    28ec:	4f 90       	pop	r4
    28ee:	08 95       	ret

000028f0 <calloc>:
    28f0:	0f 93       	push	r16
    28f2:	1f 93       	push	r17
    28f4:	cf 93       	push	r28
    28f6:	df 93       	push	r29
    28f8:	86 9f       	mul	r24, r22
    28fa:	80 01       	movw	r16, r0
    28fc:	87 9f       	mul	r24, r23
    28fe:	10 0d       	add	r17, r0
    2900:	96 9f       	mul	r25, r22
    2902:	10 0d       	add	r17, r0
    2904:	11 24       	eor	r1, r1
    2906:	c8 01       	movw	r24, r16
    2908:	0e 94 a7 0d 	call	0x1b4e	; 0x1b4e <malloc>
    290c:	ec 01       	movw	r28, r24
    290e:	00 97       	sbiw	r24, 0x00	; 0
    2910:	29 f0       	breq	.+10     	; 0x291c <calloc+0x2c>
    2912:	a8 01       	movw	r20, r16
    2914:	60 e0       	ldi	r22, 0x00	; 0
    2916:	70 e0       	ldi	r23, 0x00	; 0
    2918:	0e 94 b2 14 	call	0x2964	; 0x2964 <memset>
    291c:	ce 01       	movw	r24, r28
    291e:	df 91       	pop	r29
    2920:	cf 91       	pop	r28
    2922:	1f 91       	pop	r17
    2924:	0f 91       	pop	r16
    2926:	08 95       	ret

00002928 <isspace>:
    2928:	91 11       	cpse	r25, r1
    292a:	15 c1       	rjmp	.+554    	; 0x2b56 <__ctype_isfalse>
    292c:	80 32       	cpi	r24, 0x20	; 32
    292e:	19 f0       	breq	.+6      	; 0x2936 <isspace+0xe>
    2930:	89 50       	subi	r24, 0x09	; 9
    2932:	85 50       	subi	r24, 0x05	; 5
    2934:	d0 f7       	brcc	.-12     	; 0x292a <isspace+0x2>
    2936:	08 95       	ret

00002938 <strchr_P>:
    2938:	fc 01       	movw	r30, r24
    293a:	05 90       	lpm	r0, Z+
    293c:	06 16       	cp	r0, r22
    293e:	21 f0       	breq	.+8      	; 0x2948 <strchr_P+0x10>
    2940:	00 20       	and	r0, r0
    2942:	d9 f7       	brne	.-10     	; 0x293a <strchr_P+0x2>
    2944:	c0 01       	movw	r24, r0
    2946:	08 95       	ret
    2948:	31 97       	sbiw	r30, 0x01	; 1
    294a:	cf 01       	movw	r24, r30
    294c:	08 95       	ret

0000294e <strnlen_P>:
    294e:	fc 01       	movw	r30, r24
    2950:	05 90       	lpm	r0, Z+
    2952:	61 50       	subi	r22, 0x01	; 1
    2954:	70 40       	sbci	r23, 0x00	; 0
    2956:	01 10       	cpse	r0, r1
    2958:	d8 f7       	brcc	.-10     	; 0x2950 <strnlen_P+0x2>
    295a:	80 95       	com	r24
    295c:	90 95       	com	r25
    295e:	8e 0f       	add	r24, r30
    2960:	9f 1f       	adc	r25, r31
    2962:	08 95       	ret

00002964 <memset>:
    2964:	dc 01       	movw	r26, r24
    2966:	01 c0       	rjmp	.+2      	; 0x296a <memset+0x6>
    2968:	6d 93       	st	X+, r22
    296a:	41 50       	subi	r20, 0x01	; 1
    296c:	50 40       	sbci	r21, 0x00	; 0
    296e:	e0 f7       	brcc	.-8      	; 0x2968 <memset+0x4>
    2970:	08 95       	ret

00002972 <strnlen>:
    2972:	fc 01       	movw	r30, r24
    2974:	61 50       	subi	r22, 0x01	; 1
    2976:	70 40       	sbci	r23, 0x00	; 0
    2978:	01 90       	ld	r0, Z+
    297a:	01 10       	cpse	r0, r1
    297c:	d8 f7       	brcc	.-10     	; 0x2974 <strnlen+0x2>
    297e:	80 95       	com	r24
    2980:	90 95       	com	r25
    2982:	8e 0f       	add	r24, r30
    2984:	9f 1f       	adc	r25, r31
    2986:	08 95       	ret

00002988 <fgetc>:
    2988:	cf 93       	push	r28
    298a:	df 93       	push	r29
    298c:	ec 01       	movw	r28, r24
    298e:	2b 81       	ldd	r18, Y+3	; 0x03
    2990:	20 ff       	sbrs	r18, 0
    2992:	33 c0       	rjmp	.+102    	; 0x29fa <fgetc+0x72>
    2994:	26 ff       	sbrs	r18, 6
    2996:	0a c0       	rjmp	.+20     	; 0x29ac <fgetc+0x24>
    2998:	2f 7b       	andi	r18, 0xBF	; 191
    299a:	2b 83       	std	Y+3, r18	; 0x03
    299c:	8e 81       	ldd	r24, Y+6	; 0x06
    299e:	9f 81       	ldd	r25, Y+7	; 0x07
    29a0:	01 96       	adiw	r24, 0x01	; 1
    29a2:	9f 83       	std	Y+7, r25	; 0x07
    29a4:	8e 83       	std	Y+6, r24	; 0x06
    29a6:	8a 81       	ldd	r24, Y+2	; 0x02
    29a8:	90 e0       	ldi	r25, 0x00	; 0
    29aa:	29 c0       	rjmp	.+82     	; 0x29fe <fgetc+0x76>
    29ac:	22 ff       	sbrs	r18, 2
    29ae:	0f c0       	rjmp	.+30     	; 0x29ce <fgetc+0x46>
    29b0:	e8 81       	ld	r30, Y
    29b2:	f9 81       	ldd	r31, Y+1	; 0x01
    29b4:	80 81       	ld	r24, Z
    29b6:	99 27       	eor	r25, r25
    29b8:	87 fd       	sbrc	r24, 7
    29ba:	90 95       	com	r25
    29bc:	00 97       	sbiw	r24, 0x00	; 0
    29be:	19 f4       	brne	.+6      	; 0x29c6 <fgetc+0x3e>
    29c0:	20 62       	ori	r18, 0x20	; 32
    29c2:	2b 83       	std	Y+3, r18	; 0x03
    29c4:	1a c0       	rjmp	.+52     	; 0x29fa <fgetc+0x72>
    29c6:	31 96       	adiw	r30, 0x01	; 1
    29c8:	f9 83       	std	Y+1, r31	; 0x01
    29ca:	e8 83       	st	Y, r30
    29cc:	0e c0       	rjmp	.+28     	; 0x29ea <fgetc+0x62>
    29ce:	ea 85       	ldd	r30, Y+10	; 0x0a
    29d0:	fb 85       	ldd	r31, Y+11	; 0x0b
    29d2:	09 95       	icall
    29d4:	97 ff       	sbrs	r25, 7
    29d6:	09 c0       	rjmp	.+18     	; 0x29ea <fgetc+0x62>
    29d8:	2b 81       	ldd	r18, Y+3	; 0x03
    29da:	01 96       	adiw	r24, 0x01	; 1
    29dc:	11 f4       	brne	.+4      	; 0x29e2 <fgetc+0x5a>
    29de:	80 e1       	ldi	r24, 0x10	; 16
    29e0:	01 c0       	rjmp	.+2      	; 0x29e4 <fgetc+0x5c>
    29e2:	80 e2       	ldi	r24, 0x20	; 32
    29e4:	82 2b       	or	r24, r18
    29e6:	8b 83       	std	Y+3, r24	; 0x03
    29e8:	08 c0       	rjmp	.+16     	; 0x29fa <fgetc+0x72>
    29ea:	2e 81       	ldd	r18, Y+6	; 0x06
    29ec:	3f 81       	ldd	r19, Y+7	; 0x07
    29ee:	2f 5f       	subi	r18, 0xFF	; 255
    29f0:	3f 4f       	sbci	r19, 0xFF	; 255
    29f2:	3f 83       	std	Y+7, r19	; 0x07
    29f4:	2e 83       	std	Y+6, r18	; 0x06
    29f6:	99 27       	eor	r25, r25
    29f8:	02 c0       	rjmp	.+4      	; 0x29fe <fgetc+0x76>
    29fa:	8f ef       	ldi	r24, 0xFF	; 255
    29fc:	9f ef       	ldi	r25, 0xFF	; 255
    29fe:	df 91       	pop	r29
    2a00:	cf 91       	pop	r28
    2a02:	08 95       	ret

00002a04 <fputc>:
    2a04:	0f 93       	push	r16
    2a06:	1f 93       	push	r17
    2a08:	cf 93       	push	r28
    2a0a:	df 93       	push	r29
    2a0c:	18 2f       	mov	r17, r24
    2a0e:	09 2f       	mov	r16, r25
    2a10:	eb 01       	movw	r28, r22
    2a12:	8b 81       	ldd	r24, Y+3	; 0x03
    2a14:	81 fd       	sbrc	r24, 1
    2a16:	03 c0       	rjmp	.+6      	; 0x2a1e <fputc+0x1a>
    2a18:	8f ef       	ldi	r24, 0xFF	; 255
    2a1a:	9f ef       	ldi	r25, 0xFF	; 255
    2a1c:	20 c0       	rjmp	.+64     	; 0x2a5e <fputc+0x5a>
    2a1e:	82 ff       	sbrs	r24, 2
    2a20:	10 c0       	rjmp	.+32     	; 0x2a42 <fputc+0x3e>
    2a22:	4e 81       	ldd	r20, Y+6	; 0x06
    2a24:	5f 81       	ldd	r21, Y+7	; 0x07
    2a26:	2c 81       	ldd	r18, Y+4	; 0x04
    2a28:	3d 81       	ldd	r19, Y+5	; 0x05
    2a2a:	42 17       	cp	r20, r18
    2a2c:	53 07       	cpc	r21, r19
    2a2e:	7c f4       	brge	.+30     	; 0x2a4e <fputc+0x4a>
    2a30:	e8 81       	ld	r30, Y
    2a32:	f9 81       	ldd	r31, Y+1	; 0x01
    2a34:	9f 01       	movw	r18, r30
    2a36:	2f 5f       	subi	r18, 0xFF	; 255
    2a38:	3f 4f       	sbci	r19, 0xFF	; 255
    2a3a:	39 83       	std	Y+1, r19	; 0x01
    2a3c:	28 83       	st	Y, r18
    2a3e:	10 83       	st	Z, r17
    2a40:	06 c0       	rjmp	.+12     	; 0x2a4e <fputc+0x4a>
    2a42:	e8 85       	ldd	r30, Y+8	; 0x08
    2a44:	f9 85       	ldd	r31, Y+9	; 0x09
    2a46:	81 2f       	mov	r24, r17
    2a48:	09 95       	icall
    2a4a:	89 2b       	or	r24, r25
    2a4c:	29 f7       	brne	.-54     	; 0x2a18 <fputc+0x14>
    2a4e:	2e 81       	ldd	r18, Y+6	; 0x06
    2a50:	3f 81       	ldd	r19, Y+7	; 0x07
    2a52:	2f 5f       	subi	r18, 0xFF	; 255
    2a54:	3f 4f       	sbci	r19, 0xFF	; 255
    2a56:	3f 83       	std	Y+7, r19	; 0x07
    2a58:	2e 83       	std	Y+6, r18	; 0x06
    2a5a:	81 2f       	mov	r24, r17
    2a5c:	90 2f       	mov	r25, r16
    2a5e:	df 91       	pop	r29
    2a60:	cf 91       	pop	r28
    2a62:	1f 91       	pop	r17
    2a64:	0f 91       	pop	r16
    2a66:	08 95       	ret

00002a68 <ungetc>:
    2a68:	fb 01       	movw	r30, r22
    2a6a:	23 81       	ldd	r18, Z+3	; 0x03
    2a6c:	20 ff       	sbrs	r18, 0
    2a6e:	12 c0       	rjmp	.+36     	; 0x2a94 <ungetc+0x2c>
    2a70:	26 fd       	sbrc	r18, 6
    2a72:	10 c0       	rjmp	.+32     	; 0x2a94 <ungetc+0x2c>
    2a74:	8f 3f       	cpi	r24, 0xFF	; 255
    2a76:	3f ef       	ldi	r19, 0xFF	; 255
    2a78:	93 07       	cpc	r25, r19
    2a7a:	61 f0       	breq	.+24     	; 0x2a94 <ungetc+0x2c>
    2a7c:	82 83       	std	Z+2, r24	; 0x02
    2a7e:	2f 7d       	andi	r18, 0xDF	; 223
    2a80:	20 64       	ori	r18, 0x40	; 64
    2a82:	23 83       	std	Z+3, r18	; 0x03
    2a84:	26 81       	ldd	r18, Z+6	; 0x06
    2a86:	37 81       	ldd	r19, Z+7	; 0x07
    2a88:	21 50       	subi	r18, 0x01	; 1
    2a8a:	31 09       	sbc	r19, r1
    2a8c:	37 83       	std	Z+7, r19	; 0x07
    2a8e:	26 83       	std	Z+6, r18	; 0x06
    2a90:	99 27       	eor	r25, r25
    2a92:	08 95       	ret
    2a94:	8f ef       	ldi	r24, 0xFF	; 255
    2a96:	9f ef       	ldi	r25, 0xFF	; 255
    2a98:	08 95       	ret

00002a9a <__ultoa_invert>:
    2a9a:	fa 01       	movw	r30, r20
    2a9c:	aa 27       	eor	r26, r26
    2a9e:	28 30       	cpi	r18, 0x08	; 8
    2aa0:	51 f1       	breq	.+84     	; 0x2af6 <__ultoa_invert+0x5c>
    2aa2:	20 31       	cpi	r18, 0x10	; 16
    2aa4:	81 f1       	breq	.+96     	; 0x2b06 <__ultoa_invert+0x6c>
    2aa6:	e8 94       	clt
    2aa8:	6f 93       	push	r22
    2aaa:	6e 7f       	andi	r22, 0xFE	; 254
    2aac:	6e 5f       	subi	r22, 0xFE	; 254
    2aae:	7f 4f       	sbci	r23, 0xFF	; 255
    2ab0:	8f 4f       	sbci	r24, 0xFF	; 255
    2ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ab4:	af 4f       	sbci	r26, 0xFF	; 255
    2ab6:	b1 e0       	ldi	r27, 0x01	; 1
    2ab8:	3e d0       	rcall	.+124    	; 0x2b36 <__ultoa_invert+0x9c>
    2aba:	b4 e0       	ldi	r27, 0x04	; 4
    2abc:	3c d0       	rcall	.+120    	; 0x2b36 <__ultoa_invert+0x9c>
    2abe:	67 0f       	add	r22, r23
    2ac0:	78 1f       	adc	r23, r24
    2ac2:	89 1f       	adc	r24, r25
    2ac4:	9a 1f       	adc	r25, r26
    2ac6:	a1 1d       	adc	r26, r1
    2ac8:	68 0f       	add	r22, r24
    2aca:	79 1f       	adc	r23, r25
    2acc:	8a 1f       	adc	r24, r26
    2ace:	91 1d       	adc	r25, r1
    2ad0:	a1 1d       	adc	r26, r1
    2ad2:	6a 0f       	add	r22, r26
    2ad4:	71 1d       	adc	r23, r1
    2ad6:	81 1d       	adc	r24, r1
    2ad8:	91 1d       	adc	r25, r1
    2ada:	a1 1d       	adc	r26, r1
    2adc:	20 d0       	rcall	.+64     	; 0x2b1e <__ultoa_invert+0x84>
    2ade:	09 f4       	brne	.+2      	; 0x2ae2 <__ultoa_invert+0x48>
    2ae0:	68 94       	set
    2ae2:	3f 91       	pop	r19
    2ae4:	2a e0       	ldi	r18, 0x0A	; 10
    2ae6:	26 9f       	mul	r18, r22
    2ae8:	11 24       	eor	r1, r1
    2aea:	30 19       	sub	r19, r0
    2aec:	30 5d       	subi	r19, 0xD0	; 208
    2aee:	31 93       	st	Z+, r19
    2af0:	de f6       	brtc	.-74     	; 0x2aa8 <__ultoa_invert+0xe>
    2af2:	cf 01       	movw	r24, r30
    2af4:	08 95       	ret
    2af6:	46 2f       	mov	r20, r22
    2af8:	47 70       	andi	r20, 0x07	; 7
    2afa:	40 5d       	subi	r20, 0xD0	; 208
    2afc:	41 93       	st	Z+, r20
    2afe:	b3 e0       	ldi	r27, 0x03	; 3
    2b00:	0f d0       	rcall	.+30     	; 0x2b20 <__ultoa_invert+0x86>
    2b02:	c9 f7       	brne	.-14     	; 0x2af6 <__ultoa_invert+0x5c>
    2b04:	f6 cf       	rjmp	.-20     	; 0x2af2 <__ultoa_invert+0x58>
    2b06:	46 2f       	mov	r20, r22
    2b08:	4f 70       	andi	r20, 0x0F	; 15
    2b0a:	40 5d       	subi	r20, 0xD0	; 208
    2b0c:	4a 33       	cpi	r20, 0x3A	; 58
    2b0e:	18 f0       	brcs	.+6      	; 0x2b16 <__ultoa_invert+0x7c>
    2b10:	49 5d       	subi	r20, 0xD9	; 217
    2b12:	31 fd       	sbrc	r19, 1
    2b14:	40 52       	subi	r20, 0x20	; 32
    2b16:	41 93       	st	Z+, r20
    2b18:	02 d0       	rcall	.+4      	; 0x2b1e <__ultoa_invert+0x84>
    2b1a:	a9 f7       	brne	.-22     	; 0x2b06 <__ultoa_invert+0x6c>
    2b1c:	ea cf       	rjmp	.-44     	; 0x2af2 <__ultoa_invert+0x58>
    2b1e:	b4 e0       	ldi	r27, 0x04	; 4
    2b20:	a6 95       	lsr	r26
    2b22:	97 95       	ror	r25
    2b24:	87 95       	ror	r24
    2b26:	77 95       	ror	r23
    2b28:	67 95       	ror	r22
    2b2a:	ba 95       	dec	r27
    2b2c:	c9 f7       	brne	.-14     	; 0x2b20 <__ultoa_invert+0x86>
    2b2e:	00 97       	sbiw	r24, 0x00	; 0
    2b30:	61 05       	cpc	r22, r1
    2b32:	71 05       	cpc	r23, r1
    2b34:	08 95       	ret
    2b36:	9b 01       	movw	r18, r22
    2b38:	ac 01       	movw	r20, r24
    2b3a:	0a 2e       	mov	r0, r26
    2b3c:	06 94       	lsr	r0
    2b3e:	57 95       	ror	r21
    2b40:	47 95       	ror	r20
    2b42:	37 95       	ror	r19
    2b44:	27 95       	ror	r18
    2b46:	ba 95       	dec	r27
    2b48:	c9 f7       	brne	.-14     	; 0x2b3c <__ultoa_invert+0xa2>
    2b4a:	62 0f       	add	r22, r18
    2b4c:	73 1f       	adc	r23, r19
    2b4e:	84 1f       	adc	r24, r20
    2b50:	95 1f       	adc	r25, r21
    2b52:	a0 1d       	adc	r26, r0
    2b54:	08 95       	ret

00002b56 <__ctype_isfalse>:
    2b56:	99 27       	eor	r25, r25
    2b58:	88 27       	eor	r24, r24

00002b5a <__ctype_istrue>:
    2b5a:	08 95       	ret

00002b5c <_exit>:
    2b5c:	f8 94       	cli

00002b5e <__stop_program>:
    2b5e:	ff cf       	rjmp	.-2      	; 0x2b5e <__stop_program>
